// Code generated by ent, DO NOT EDIT.

package taskschedule

import (
	"time"
)

const (
	// Label holds the string label denoting the taskschedule type in the database.
	Label = "task_schedule"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldPlatform holds the string denoting the platform field in the database.
	FieldPlatform = "platform"
	// FieldStoreID holds the string denoting the store_id field in the database.
	FieldStoreID = "store_id"
	// FieldFuncName holds the string denoting the func_name field in the database.
	FieldFuncName = "func_name"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// FieldLocked holds the string denoting the locked field in the database.
	FieldLocked = "locked"
	// FieldLockedTimes holds the string denoting the locked_times field in the database.
	FieldLockedTimes = "locked_times"
	// FieldRemark holds the string denoting the remark field in the database.
	FieldRemark = "remark"
	// FieldLastAccessAt holds the string denoting the last_access_at field in the database.
	FieldLastAccessAt = "last_access_at"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// Table holds the table name of the taskschedule in the database.
	Table = "task_schedules"
)

// Columns holds all SQL columns for taskschedule fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldPlatform,
	FieldStoreID,
	FieldFuncName,
	FieldDescription,
	FieldLocked,
	FieldLockedTimes,
	FieldRemark,
	FieldLastAccessAt,
	FieldStatus,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultPlatform holds the default value on creation for the "platform" field.
	DefaultPlatform string
	// DefaultStoreID holds the default value on creation for the "store_id" field.
	DefaultStoreID int64
	// DefaultDescription holds the default value on creation for the "description" field.
	DefaultDescription string
	// DefaultLocked holds the default value on creation for the "locked" field.
	DefaultLocked bool
	// DefaultLockedTimes holds the default value on creation for the "locked_times" field.
	DefaultLockedTimes int64
	// DefaultStatus holds the default value on creation for the "status" field.
	DefaultStatus int8
)
