// Code generated by ent, DO NOT EDIT.

package platformproduct

import (
	"time"

	"entgo.io/ent"
)

const (
	// Label holds the string label denoting the platformproduct type in the database.
	Label = "platform_product"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldStoreID holds the string denoting the store_id field in the database.
	FieldStoreID = "store_id"
	// FieldListingID holds the string denoting the listing_id field in the database.
	FieldListingID = "listing_id"
	// FieldCollectionID holds the string denoting the collection_id field in the database.
	FieldCollectionID = "collection_id"
	// FieldListingSku holds the string denoting the listing_sku field in the database.
	FieldListingSku = "listing_sku"
	// FieldBarcode holds the string denoting the barcode field in the database.
	FieldBarcode = "barcode"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldImages holds the string denoting the images field in the database.
	FieldImages = "images"
	// FieldVendor holds the string denoting the vendor field in the database.
	FieldVendor = "vendor"
	// FieldSellingPrice holds the string denoting the selling_price field in the database.
	FieldSellingPrice = "selling_price"
	// FieldCurrency holds the string denoting the currency field in the database.
	FieldCurrency = "currency"
	// FieldGrams holds the string denoting the grams field in the database.
	FieldGrams = "grams"
	// FieldPlatformStatus holds the string denoting the platform_status field in the database.
	FieldPlatformStatus = "platform_status"
	// EdgeTenant holds the string denoting the tenant edge name in mutations.
	EdgeTenant = "tenant"
	// EdgeProductMappings holds the string denoting the product_mappings edge name in mutations.
	EdgeProductMappings = "product_mappings"
	// EdgeStores holds the string denoting the stores edge name in mutations.
	EdgeStores = "stores"
	// Table holds the table name of the platformproduct in the database.
	Table = "platform_products"
	// TenantTable is the table that holds the tenant relation/edge.
	TenantTable = "platform_products"
	// TenantInverseTable is the table name for the Tenant entity.
	// It exists in this package in order to avoid circular dependency with the "tenant" package.
	TenantInverseTable = "tenants"
	// TenantColumn is the table column denoting the tenant relation/edge.
	TenantColumn = "platform_product_tenant"
	// ProductMappingsTable is the table that holds the product_mappings relation/edge.
	ProductMappingsTable = "product_mappings"
	// ProductMappingsInverseTable is the table name for the ProductMapping entity.
	// It exists in this package in order to avoid circular dependency with the "productmapping" package.
	ProductMappingsInverseTable = "product_mappings"
	// ProductMappingsColumn is the table column denoting the product_mappings relation/edge.
	ProductMappingsColumn = "platform_product_id"
	// StoresTable is the table that holds the stores relation/edge.
	StoresTable = "platform_products"
	// StoresInverseTable is the table name for the Store entity.
	// It exists in this package in order to avoid circular dependency with the "store" package.
	StoresInverseTable = "stores"
	// StoresColumn is the table column denoting the stores relation/edge.
	StoresColumn = "store_id"
)

// Columns holds all SQL columns for platformproduct fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldStoreID,
	FieldListingID,
	FieldCollectionID,
	FieldListingSku,
	FieldBarcode,
	FieldName,
	FieldImages,
	FieldVendor,
	FieldSellingPrice,
	FieldCurrency,
	FieldGrams,
	FieldPlatformStatus,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "platform_products"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"platform_product_tenant",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "github.com/heshaofeng1991/entgo/ent/gen/runtime"
var (
	Hooks  [1]ent.Hook
	Policy ent.Policy
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultStoreID holds the default value on creation for the "store_id" field.
	DefaultStoreID int64
	// ListingIDValidator is a validator for the "listing_id" field. It is called by the builders before save.
	ListingIDValidator func(string) error
	// DefaultCollectionID holds the default value on creation for the "collection_id" field.
	DefaultCollectionID string
	// DefaultListingSku holds the default value on creation for the "listing_sku" field.
	DefaultListingSku string
	// DefaultBarcode holds the default value on creation for the "barcode" field.
	DefaultBarcode string
	// DefaultName holds the default value on creation for the "name" field.
	DefaultName string
	// DefaultSellingPrice holds the default value on creation for the "selling_price" field.
	DefaultSellingPrice float64
	// DefaultCurrency holds the default value on creation for the "currency" field.
	DefaultCurrency string
	// DefaultGrams holds the default value on creation for the "grams" field.
	DefaultGrams int
	// DefaultPlatformStatus holds the default value on creation for the "platform_status" field.
	DefaultPlatformStatus int8
)
