// Code generated by ent, DO NOT EDIT.

package channelcost

import (
	"time"
)

const (
	// Label holds the string label denoting the channelcost type in the database.
	Label = "channel_cost"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldChannelCostBatchID holds the string denoting the channel_cost_batch_id field in the database.
	FieldChannelCostBatchID = "channel_cost_batch_id"
	// FieldChannelID holds the string denoting the channel_id field in the database.
	FieldChannelID = "channel_id"
	// FieldMode holds the string denoting the mode field in the database.
	FieldMode = "mode"
	// FieldCountryCode holds the string denoting the country_code field in the database.
	FieldCountryCode = "country_code"
	// FieldZone holds the string denoting the zone field in the database.
	FieldZone = "zone"
	// FieldStartWeight holds the string denoting the start_weight field in the database.
	FieldStartWeight = "start_weight"
	// FieldEndWeight holds the string denoting the end_weight field in the database.
	FieldEndWeight = "end_weight"
	// FieldFirstWeight holds the string denoting the first_weight field in the database.
	FieldFirstWeight = "first_weight"
	// FieldFirstWeightFee holds the string denoting the first_weight_fee field in the database.
	FieldFirstWeightFee = "first_weight_fee"
	// FieldUnitWeight holds the string denoting the unit_weight field in the database.
	FieldUnitWeight = "unit_weight"
	// FieldUnitWeightFee holds the string denoting the unit_weight_fee field in the database.
	FieldUnitWeightFee = "unit_weight_fee"
	// FieldFuelFee holds the string denoting the fuel_fee field in the database.
	FieldFuelFee = "fuel_fee"
	// FieldProcessingFee holds the string denoting the processing_fee field in the database.
	FieldProcessingFee = "processing_fee"
	// FieldRegistrationFee holds the string denoting the registration_fee field in the database.
	FieldRegistrationFee = "registration_fee"
	// FieldMiscFee holds the string denoting the misc_fee field in the database.
	FieldMiscFee = "misc_fee"
	// FieldMinNormalDays holds the string denoting the min_normal_days field in the database.
	FieldMinNormalDays = "min_normal_days"
	// FieldMaxNormalDays holds the string denoting the max_normal_days field in the database.
	FieldMaxNormalDays = "max_normal_days"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldAverageDays holds the string denoting the average_days field in the database.
	FieldAverageDays = "average_days"
	// EdgeChannels holds the string denoting the channels edge name in mutations.
	EdgeChannels = "channels"
	// Table holds the table name of the channelcost in the database.
	Table = "channel_costs"
	// ChannelsTable is the table that holds the channels relation/edge.
	ChannelsTable = "channel_costs"
	// ChannelsInverseTable is the table name for the Channel entity.
	// It exists in this package in order to avoid circular dependency with the "channel" package.
	ChannelsInverseTable = "channels"
	// ChannelsColumn is the table column denoting the channels relation/edge.
	ChannelsColumn = "channel_id"
)

// Columns holds all SQL columns for channelcost fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldChannelCostBatchID,
	FieldChannelID,
	FieldMode,
	FieldCountryCode,
	FieldZone,
	FieldStartWeight,
	FieldEndWeight,
	FieldFirstWeight,
	FieldFirstWeightFee,
	FieldUnitWeight,
	FieldUnitWeightFee,
	FieldFuelFee,
	FieldProcessingFee,
	FieldRegistrationFee,
	FieldMiscFee,
	FieldMinNormalDays,
	FieldMaxNormalDays,
	FieldStatus,
	FieldAverageDays,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// ChannelCostBatchIDValidator is a validator for the "channel_cost_batch_id" field. It is called by the builders before save.
	ChannelCostBatchIDValidator func(int64) error
	// ChannelIDValidator is a validator for the "channel_id" field. It is called by the builders before save.
	ChannelIDValidator func(int64) error
	// DefaultMode holds the default value on creation for the "mode" field.
	DefaultMode int8
	// CountryCodeValidator is a validator for the "country_code" field. It is called by the builders before save.
	CountryCodeValidator func(string) error
	// DefaultZone holds the default value on creation for the "zone" field.
	DefaultZone string
	// DefaultFirstWeight holds the default value on creation for the "first_weight" field.
	DefaultFirstWeight int
	// DefaultFirstWeightFee holds the default value on creation for the "first_weight_fee" field.
	DefaultFirstWeightFee float64
	// DefaultUnitWeightFee holds the default value on creation for the "unit_weight_fee" field.
	DefaultUnitWeightFee float64
	// DefaultFuelFee holds the default value on creation for the "fuel_fee" field.
	DefaultFuelFee float64
	// DefaultProcessingFee holds the default value on creation for the "processing_fee" field.
	DefaultProcessingFee float64
	// DefaultRegistrationFee holds the default value on creation for the "registration_fee" field.
	DefaultRegistrationFee float64
	// DefaultMiscFee holds the default value on creation for the "misc_fee" field.
	DefaultMiscFee float64
	// DefaultMinNormalDays holds the default value on creation for the "min_normal_days" field.
	DefaultMinNormalDays int
	// DefaultMaxNormalDays holds the default value on creation for the "max_normal_days" field.
	DefaultMaxNormalDays int
	// DefaultStatus holds the default value on creation for the "status" field.
	DefaultStatus int8
	// DefaultAverageDays holds the default value on creation for the "average_days" field.
	DefaultAverageDays int
)
