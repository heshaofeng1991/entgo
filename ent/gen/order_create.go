// Code generated by ent, DO NOT EDIT.

package gen

import (
	"context"
	"errors"
	"fmt"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"entgo.io/ent/schema/field"
	"github.com/heshaofeng1991/entgo/ent/gen/channel"
	"github.com/heshaofeng1991/entgo/ent/gen/order"
	"github.com/heshaofeng1991/entgo/ent/gen/orderholdreason"
	"github.com/heshaofeng1991/entgo/ent/gen/orderitem"
	"github.com/heshaofeng1991/entgo/ent/gen/ordertaxation"
	"github.com/heshaofeng1991/entgo/ent/gen/store"
	"github.com/heshaofeng1991/entgo/ent/gen/tenant"
	"github.com/heshaofeng1991/entgo/ent/gen/trackmapping"
	"github.com/heshaofeng1991/entgo/ent/gen/warehouse"
)

// OrderCreate is the builder for creating a Order entity.
type OrderCreate struct {
	config
	mutation *OrderMutation
	hooks    []Hook
	conflict []sql.ConflictOption
}

// SetCreatedAt sets the "created_at" field.
func (oc *OrderCreate) SetCreatedAt(t time.Time) *OrderCreate {
	oc.mutation.SetCreatedAt(t)
	return oc
}

// SetNillableCreatedAt sets the "created_at" field if the given value is not nil.
func (oc *OrderCreate) SetNillableCreatedAt(t *time.Time) *OrderCreate {
	if t != nil {
		oc.SetCreatedAt(*t)
	}
	return oc
}

// SetUpdatedAt sets the "updated_at" field.
func (oc *OrderCreate) SetUpdatedAt(t time.Time) *OrderCreate {
	oc.mutation.SetUpdatedAt(t)
	return oc
}

// SetNillableUpdatedAt sets the "updated_at" field if the given value is not nil.
func (oc *OrderCreate) SetNillableUpdatedAt(t *time.Time) *OrderCreate {
	if t != nil {
		oc.SetUpdatedAt(*t)
	}
	return oc
}

// SetDeletedAt sets the "deleted_at" field.
func (oc *OrderCreate) SetDeletedAt(t time.Time) *OrderCreate {
	oc.mutation.SetDeletedAt(t)
	return oc
}

// SetNillableDeletedAt sets the "deleted_at" field if the given value is not nil.
func (oc *OrderCreate) SetNillableDeletedAt(t *time.Time) *OrderCreate {
	if t != nil {
		oc.SetDeletedAt(*t)
	}
	return oc
}

// SetOrderNumber sets the "order_number" field.
func (oc *OrderCreate) SetOrderNumber(s string) *OrderCreate {
	oc.mutation.SetOrderNumber(s)
	return oc
}

// SetNillableOrderNumber sets the "order_number" field if the given value is not nil.
func (oc *OrderCreate) SetNillableOrderNumber(s *string) *OrderCreate {
	if s != nil {
		oc.SetOrderNumber(*s)
	}
	return oc
}

// SetMode sets the "mode" field.
func (oc *OrderCreate) SetMode(i int8) *OrderCreate {
	oc.mutation.SetMode(i)
	return oc
}

// SetNillableMode sets the "mode" field if the given value is not nil.
func (oc *OrderCreate) SetNillableMode(i *int8) *OrderCreate {
	if i != nil {
		oc.SetMode(*i)
	}
	return oc
}

// SetType sets the "type" field.
func (oc *OrderCreate) SetType(i int8) *OrderCreate {
	oc.mutation.SetType(i)
	return oc
}

// SetNillableType sets the "type" field if the given value is not nil.
func (oc *OrderCreate) SetNillableType(i *int8) *OrderCreate {
	if i != nil {
		oc.SetType(*i)
	}
	return oc
}

// SetOffline sets the "offline" field.
func (oc *OrderCreate) SetOffline(b bool) *OrderCreate {
	oc.mutation.SetOffline(b)
	return oc
}

// SetNillableOffline sets the "offline" field if the given value is not nil.
func (oc *OrderCreate) SetNillableOffline(b *bool) *OrderCreate {
	if b != nil {
		oc.SetOffline(*b)
	}
	return oc
}

// SetStoreID sets the "store_id" field.
func (oc *OrderCreate) SetStoreID(i int64) *OrderCreate {
	oc.mutation.SetStoreID(i)
	return oc
}

// SetNillableStoreID sets the "store_id" field if the given value is not nil.
func (oc *OrderCreate) SetNillableStoreID(i *int64) *OrderCreate {
	if i != nil {
		oc.SetStoreID(*i)
	}
	return oc
}

// SetWarehouseID sets the "warehouse_id" field.
func (oc *OrderCreate) SetWarehouseID(i int64) *OrderCreate {
	oc.mutation.SetWarehouseID(i)
	return oc
}

// SetNillableWarehouseID sets the "warehouse_id" field if the given value is not nil.
func (oc *OrderCreate) SetNillableWarehouseID(i *int64) *OrderCreate {
	if i != nil {
		oc.SetWarehouseID(*i)
	}
	return oc
}

// SetCustomerCode sets the "customer_code" field.
func (oc *OrderCreate) SetCustomerCode(s string) *OrderCreate {
	oc.mutation.SetCustomerCode(s)
	return oc
}

// SetNillableCustomerCode sets the "customer_code" field if the given value is not nil.
func (oc *OrderCreate) SetNillableCustomerCode(s *string) *OrderCreate {
	if s != nil {
		oc.SetCustomerCode(*s)
	}
	return oc
}

// SetPrepayTariff sets the "prepay_tariff" field.
func (oc *OrderCreate) SetPrepayTariff(b bool) *OrderCreate {
	oc.mutation.SetPrepayTariff(b)
	return oc
}

// SetNillablePrepayTariff sets the "prepay_tariff" field if the given value is not nil.
func (oc *OrderCreate) SetNillablePrepayTariff(b *bool) *OrderCreate {
	if b != nil {
		oc.SetPrepayTariff(*b)
	}
	return oc
}

// SetIossNumber sets the "ioss_number" field.
func (oc *OrderCreate) SetIossNumber(s string) *OrderCreate {
	oc.mutation.SetIossNumber(s)
	return oc
}

// SetNillableIossNumber sets the "ioss_number" field if the given value is not nil.
func (oc *OrderCreate) SetNillableIossNumber(s *string) *OrderCreate {
	if s != nil {
		oc.SetIossNumber(*s)
	}
	return oc
}

// SetIossCountryCode sets the "ioss_country_code" field.
func (oc *OrderCreate) SetIossCountryCode(s string) *OrderCreate {
	oc.mutation.SetIossCountryCode(s)
	return oc
}

// SetNillableIossCountryCode sets the "ioss_country_code" field if the given value is not nil.
func (oc *OrderCreate) SetNillableIossCountryCode(s *string) *OrderCreate {
	if s != nil {
		oc.SetIossCountryCode(*s)
	}
	return oc
}

// SetIossNumberType sets the "ioss_number_type" field.
func (oc *OrderCreate) SetIossNumberType(i int8) *OrderCreate {
	oc.mutation.SetIossNumberType(i)
	return oc
}

// SetNillableIossNumberType sets the "ioss_number_type" field if the given value is not nil.
func (oc *OrderCreate) SetNillableIossNumberType(i *int8) *OrderCreate {
	if i != nil {
		oc.SetIossNumberType(*i)
	}
	return oc
}

// SetUkVatNumber sets the "uk_vat_number" field.
func (oc *OrderCreate) SetUkVatNumber(s string) *OrderCreate {
	oc.mutation.SetUkVatNumber(s)
	return oc
}

// SetNillableUkVatNumber sets the "uk_vat_number" field if the given value is not nil.
func (oc *OrderCreate) SetNillableUkVatNumber(s *string) *OrderCreate {
	if s != nil {
		oc.SetUkVatNumber(*s)
	}
	return oc
}

// SetInboundOrderNumber sets the "inbound_order_number" field.
func (oc *OrderCreate) SetInboundOrderNumber(s string) *OrderCreate {
	oc.mutation.SetInboundOrderNumber(s)
	return oc
}

// SetNillableInboundOrderNumber sets the "inbound_order_number" field if the given value is not nil.
func (oc *OrderCreate) SetNillableInboundOrderNumber(s *string) *OrderCreate {
	if s != nil {
		oc.SetInboundOrderNumber(*s)
	}
	return oc
}

// SetStatus sets the "status" field.
func (oc *OrderCreate) SetStatus(i int8) *OrderCreate {
	oc.mutation.SetStatus(i)
	return oc
}

// SetNillableStatus sets the "status" field if the given value is not nil.
func (oc *OrderCreate) SetNillableStatus(i *int8) *OrderCreate {
	if i != nil {
		oc.SetStatus(*i)
	}
	return oc
}

// SetSqsStatus sets the "sqs_status" field.
func (oc *OrderCreate) SetSqsStatus(b bool) *OrderCreate {
	oc.mutation.SetSqsStatus(b)
	return oc
}

// SetNillableSqsStatus sets the "sqs_status" field if the given value is not nil.
func (oc *OrderCreate) SetNillableSqsStatus(b *bool) *OrderCreate {
	if b != nil {
		oc.SetSqsStatus(*b)
	}
	return oc
}

// SetHoldStatus sets the "hold_status" field.
func (oc *OrderCreate) SetHoldStatus(b bool) *OrderCreate {
	oc.mutation.SetHoldStatus(b)
	return oc
}

// SetNillableHoldStatus sets the "hold_status" field if the given value is not nil.
func (oc *OrderCreate) SetNillableHoldStatus(b *bool) *OrderCreate {
	if b != nil {
		oc.SetHoldStatus(*b)
	}
	return oc
}

// SetPaymentStatus sets the "payment_status" field.
func (oc *OrderCreate) SetPaymentStatus(i int8) *OrderCreate {
	oc.mutation.SetPaymentStatus(i)
	return oc
}

// SetNillablePaymentStatus sets the "payment_status" field if the given value is not nil.
func (oc *OrderCreate) SetNillablePaymentStatus(i *int8) *OrderCreate {
	if i != nil {
		oc.SetPaymentStatus(*i)
	}
	return oc
}

// SetCancelRequest sets the "cancel_request" field.
func (oc *OrderCreate) SetCancelRequest(i int8) *OrderCreate {
	oc.mutation.SetCancelRequest(i)
	return oc
}

// SetNillableCancelRequest sets the "cancel_request" field if the given value is not nil.
func (oc *OrderCreate) SetNillableCancelRequest(i *int8) *OrderCreate {
	if i != nil {
		oc.SetCancelRequest(*i)
	}
	return oc
}

// SetPlatform sets the "platform" field.
func (oc *OrderCreate) SetPlatform(s string) *OrderCreate {
	oc.mutation.SetPlatform(s)
	return oc
}

// SetNillablePlatform sets the "platform" field if the given value is not nil.
func (oc *OrderCreate) SetNillablePlatform(s *string) *OrderCreate {
	if s != nil {
		oc.SetPlatform(*s)
	}
	return oc
}

// SetPlatformOrderID sets the "platform_order_id" field.
func (oc *OrderCreate) SetPlatformOrderID(s string) *OrderCreate {
	oc.mutation.SetPlatformOrderID(s)
	return oc
}

// SetNillablePlatformOrderID sets the "platform_order_id" field if the given value is not nil.
func (oc *OrderCreate) SetNillablePlatformOrderID(s *string) *OrderCreate {
	if s != nil {
		oc.SetPlatformOrderID(*s)
	}
	return oc
}

// SetPlatformOrderNo sets the "platform_order_no" field.
func (oc *OrderCreate) SetPlatformOrderNo(s string) *OrderCreate {
	oc.mutation.SetPlatformOrderNo(s)
	return oc
}

// SetNillablePlatformOrderNo sets the "platform_order_no" field if the given value is not nil.
func (oc *OrderCreate) SetNillablePlatformOrderNo(s *string) *OrderCreate {
	if s != nil {
		oc.SetPlatformOrderNo(*s)
	}
	return oc
}

// SetPlatformOrderStatusURL sets the "platform_order_status_url" field.
func (oc *OrderCreate) SetPlatformOrderStatusURL(s string) *OrderCreate {
	oc.mutation.SetPlatformOrderStatusURL(s)
	return oc
}

// SetNillablePlatformOrderStatusURL sets the "platform_order_status_url" field if the given value is not nil.
func (oc *OrderCreate) SetNillablePlatformOrderStatusURL(s *string) *OrderCreate {
	if s != nil {
		oc.SetPlatformOrderStatusURL(*s)
	}
	return oc
}

// SetPlatformStatus sets the "platform_status" field.
func (oc *OrderCreate) SetPlatformStatus(s string) *OrderCreate {
	oc.mutation.SetPlatformStatus(s)
	return oc
}

// SetNillablePlatformStatus sets the "platform_status" field if the given value is not nil.
func (oc *OrderCreate) SetNillablePlatformStatus(s *string) *OrderCreate {
	if s != nil {
		oc.SetPlatformStatus(*s)
	}
	return oc
}

// SetPaidStatus sets the "paid_status" field.
func (oc *OrderCreate) SetPaidStatus(s string) *OrderCreate {
	oc.mutation.SetPaidStatus(s)
	return oc
}

// SetNillablePaidStatus sets the "paid_status" field if the given value is not nil.
func (oc *OrderCreate) SetNillablePaidStatus(s *string) *OrderCreate {
	if s != nil {
		oc.SetPaidStatus(*s)
	}
	return oc
}

// SetFulfillmentPushed sets the "fulfillment_pushed" field.
func (oc *OrderCreate) SetFulfillmentPushed(b bool) *OrderCreate {
	oc.mutation.SetFulfillmentPushed(b)
	return oc
}

// SetNillableFulfillmentPushed sets the "fulfillment_pushed" field if the given value is not nil.
func (oc *OrderCreate) SetNillableFulfillmentPushed(b *bool) *OrderCreate {
	if b != nil {
		oc.SetFulfillmentPushed(*b)
	}
	return oc
}

// SetFulfillmentStatus sets the "fulfillment_status" field.
func (oc *OrderCreate) SetFulfillmentStatus(s string) *OrderCreate {
	oc.mutation.SetFulfillmentStatus(s)
	return oc
}

// SetNillableFulfillmentStatus sets the "fulfillment_status" field if the given value is not nil.
func (oc *OrderCreate) SetNillableFulfillmentStatus(s *string) *OrderCreate {
	if s != nil {
		oc.SetFulfillmentStatus(*s)
	}
	return oc
}

// SetPlatformCreatedAt sets the "platform_created_at" field.
func (oc *OrderCreate) SetPlatformCreatedAt(t time.Time) *OrderCreate {
	oc.mutation.SetPlatformCreatedAt(t)
	return oc
}

// SetNillablePlatformCreatedAt sets the "platform_created_at" field if the given value is not nil.
func (oc *OrderCreate) SetNillablePlatformCreatedAt(t *time.Time) *OrderCreate {
	if t != nil {
		oc.SetPlatformCreatedAt(*t)
	}
	return oc
}

// SetLocationID sets the "location_id" field.
func (oc *OrderCreate) SetLocationID(s string) *OrderCreate {
	oc.mutation.SetLocationID(s)
	return oc
}

// SetNillableLocationID sets the "location_id" field if the given value is not nil.
func (oc *OrderCreate) SetNillableLocationID(s *string) *OrderCreate {
	if s != nil {
		oc.SetLocationID(*s)
	}
	return oc
}

// SetTags sets the "tags" field.
func (oc *OrderCreate) SetTags(s string) *OrderCreate {
	oc.mutation.SetTags(s)
	return oc
}

// SetNillableTags sets the "tags" field if the given value is not nil.
func (oc *OrderCreate) SetNillableTags(s *string) *OrderCreate {
	if s != nil {
		oc.SetTags(*s)
	}
	return oc
}

// SetNote sets the "note" field.
func (oc *OrderCreate) SetNote(s string) *OrderCreate {
	oc.mutation.SetNote(s)
	return oc
}

// SetNillableNote sets the "note" field if the given value is not nil.
func (oc *OrderCreate) SetNillableNote(s *string) *OrderCreate {
	if s != nil {
		oc.SetNote(*s)
	}
	return oc
}

// SetCancelReason sets the "cancel_reason" field.
func (oc *OrderCreate) SetCancelReason(s string) *OrderCreate {
	oc.mutation.SetCancelReason(s)
	return oc
}

// SetNillableCancelReason sets the "cancel_reason" field if the given value is not nil.
func (oc *OrderCreate) SetNillableCancelReason(s *string) *OrderCreate {
	if s != nil {
		oc.SetCancelReason(*s)
	}
	return oc
}

// SetCancelledAt sets the "cancelled_at" field.
func (oc *OrderCreate) SetCancelledAt(t time.Time) *OrderCreate {
	oc.mutation.SetCancelledAt(t)
	return oc
}

// SetNillableCancelledAt sets the "cancelled_at" field if the given value is not nil.
func (oc *OrderCreate) SetNillableCancelledAt(t *time.Time) *OrderCreate {
	if t != nil {
		oc.SetCancelledAt(*t)
	}
	return oc
}

// SetClosedAt sets the "closed_at" field.
func (oc *OrderCreate) SetClosedAt(t time.Time) *OrderCreate {
	oc.mutation.SetClosedAt(t)
	return oc
}

// SetNillableClosedAt sets the "closed_at" field if the given value is not nil.
func (oc *OrderCreate) SetNillableClosedAt(t *time.Time) *OrderCreate {
	if t != nil {
		oc.SetClosedAt(*t)
	}
	return oc
}

// SetContactEmail sets the "contact_email" field.
func (oc *OrderCreate) SetContactEmail(s string) *OrderCreate {
	oc.mutation.SetContactEmail(s)
	return oc
}

// SetNillableContactEmail sets the "contact_email" field if the given value is not nil.
func (oc *OrderCreate) SetNillableContactEmail(s *string) *OrderCreate {
	if s != nil {
		oc.SetContactEmail(*s)
	}
	return oc
}

// SetContactPhone sets the "contact_phone" field.
func (oc *OrderCreate) SetContactPhone(s string) *OrderCreate {
	oc.mutation.SetContactPhone(s)
	return oc
}

// SetNillableContactPhone sets the "contact_phone" field if the given value is not nil.
func (oc *OrderCreate) SetNillableContactPhone(s *string) *OrderCreate {
	if s != nil {
		oc.SetContactPhone(*s)
	}
	return oc
}

// SetShippingName sets the "shipping_name" field.
func (oc *OrderCreate) SetShippingName(s string) *OrderCreate {
	oc.mutation.SetShippingName(s)
	return oc
}

// SetNillableShippingName sets the "shipping_name" field if the given value is not nil.
func (oc *OrderCreate) SetNillableShippingName(s *string) *OrderCreate {
	if s != nil {
		oc.SetShippingName(*s)
	}
	return oc
}

// SetShippingFirstName sets the "shipping_first_name" field.
func (oc *OrderCreate) SetShippingFirstName(s string) *OrderCreate {
	oc.mutation.SetShippingFirstName(s)
	return oc
}

// SetNillableShippingFirstName sets the "shipping_first_name" field if the given value is not nil.
func (oc *OrderCreate) SetNillableShippingFirstName(s *string) *OrderCreate {
	if s != nil {
		oc.SetShippingFirstName(*s)
	}
	return oc
}

// SetShippingLastName sets the "shipping_last_name" field.
func (oc *OrderCreate) SetShippingLastName(s string) *OrderCreate {
	oc.mutation.SetShippingLastName(s)
	return oc
}

// SetNillableShippingLastName sets the "shipping_last_name" field if the given value is not nil.
func (oc *OrderCreate) SetNillableShippingLastName(s *string) *OrderCreate {
	if s != nil {
		oc.SetShippingLastName(*s)
	}
	return oc
}

// SetShippingCompany sets the "shipping_company" field.
func (oc *OrderCreate) SetShippingCompany(s string) *OrderCreate {
	oc.mutation.SetShippingCompany(s)
	return oc
}

// SetNillableShippingCompany sets the "shipping_company" field if the given value is not nil.
func (oc *OrderCreate) SetNillableShippingCompany(s *string) *OrderCreate {
	if s != nil {
		oc.SetShippingCompany(*s)
	}
	return oc
}

// SetShippingCountry sets the "shipping_country" field.
func (oc *OrderCreate) SetShippingCountry(s string) *OrderCreate {
	oc.mutation.SetShippingCountry(s)
	return oc
}

// SetNillableShippingCountry sets the "shipping_country" field if the given value is not nil.
func (oc *OrderCreate) SetNillableShippingCountry(s *string) *OrderCreate {
	if s != nil {
		oc.SetShippingCountry(*s)
	}
	return oc
}

// SetShippingCountryCode sets the "shipping_country_code" field.
func (oc *OrderCreate) SetShippingCountryCode(s string) *OrderCreate {
	oc.mutation.SetShippingCountryCode(s)
	return oc
}

// SetNillableShippingCountryCode sets the "shipping_country_code" field if the given value is not nil.
func (oc *OrderCreate) SetNillableShippingCountryCode(s *string) *OrderCreate {
	if s != nil {
		oc.SetShippingCountryCode(*s)
	}
	return oc
}

// SetShippingProvince sets the "shipping_province" field.
func (oc *OrderCreate) SetShippingProvince(s string) *OrderCreate {
	oc.mutation.SetShippingProvince(s)
	return oc
}

// SetNillableShippingProvince sets the "shipping_province" field if the given value is not nil.
func (oc *OrderCreate) SetNillableShippingProvince(s *string) *OrderCreate {
	if s != nil {
		oc.SetShippingProvince(*s)
	}
	return oc
}

// SetShippingProvinceCode sets the "shipping_province_code" field.
func (oc *OrderCreate) SetShippingProvinceCode(s string) *OrderCreate {
	oc.mutation.SetShippingProvinceCode(s)
	return oc
}

// SetNillableShippingProvinceCode sets the "shipping_province_code" field if the given value is not nil.
func (oc *OrderCreate) SetNillableShippingProvinceCode(s *string) *OrderCreate {
	if s != nil {
		oc.SetShippingProvinceCode(*s)
	}
	return oc
}

// SetShippingCity sets the "shipping_city" field.
func (oc *OrderCreate) SetShippingCity(s string) *OrderCreate {
	oc.mutation.SetShippingCity(s)
	return oc
}

// SetNillableShippingCity sets the "shipping_city" field if the given value is not nil.
func (oc *OrderCreate) SetNillableShippingCity(s *string) *OrderCreate {
	if s != nil {
		oc.SetShippingCity(*s)
	}
	return oc
}

// SetShippingAddress1 sets the "shipping_address1" field.
func (oc *OrderCreate) SetShippingAddress1(s string) *OrderCreate {
	oc.mutation.SetShippingAddress1(s)
	return oc
}

// SetNillableShippingAddress1 sets the "shipping_address1" field if the given value is not nil.
func (oc *OrderCreate) SetNillableShippingAddress1(s *string) *OrderCreate {
	if s != nil {
		oc.SetShippingAddress1(*s)
	}
	return oc
}

// SetShippingAddress2 sets the "shipping_address2" field.
func (oc *OrderCreate) SetShippingAddress2(s string) *OrderCreate {
	oc.mutation.SetShippingAddress2(s)
	return oc
}

// SetNillableShippingAddress2 sets the "shipping_address2" field if the given value is not nil.
func (oc *OrderCreate) SetNillableShippingAddress2(s *string) *OrderCreate {
	if s != nil {
		oc.SetShippingAddress2(*s)
	}
	return oc
}

// SetShippingZipCode sets the "shipping_zip_code" field.
func (oc *OrderCreate) SetShippingZipCode(s string) *OrderCreate {
	oc.mutation.SetShippingZipCode(s)
	return oc
}

// SetNillableShippingZipCode sets the "shipping_zip_code" field if the given value is not nil.
func (oc *OrderCreate) SetNillableShippingZipCode(s *string) *OrderCreate {
	if s != nil {
		oc.SetShippingZipCode(*s)
	}
	return oc
}

// SetShippingPhone sets the "shipping_phone" field.
func (oc *OrderCreate) SetShippingPhone(s string) *OrderCreate {
	oc.mutation.SetShippingPhone(s)
	return oc
}

// SetNillableShippingPhone sets the "shipping_phone" field if the given value is not nil.
func (oc *OrderCreate) SetNillableShippingPhone(s *string) *OrderCreate {
	if s != nil {
		oc.SetShippingPhone(*s)
	}
	return oc
}

// SetShippingCertificateType sets the "shipping_certificate_type" field.
func (oc *OrderCreate) SetShippingCertificateType(s string) *OrderCreate {
	oc.mutation.SetShippingCertificateType(s)
	return oc
}

// SetNillableShippingCertificateType sets the "shipping_certificate_type" field if the given value is not nil.
func (oc *OrderCreate) SetNillableShippingCertificateType(s *string) *OrderCreate {
	if s != nil {
		oc.SetShippingCertificateType(*s)
	}
	return oc
}

// SetShippingCertificateCode sets the "shipping_certificate_code" field.
func (oc *OrderCreate) SetShippingCertificateCode(s string) *OrderCreate {
	oc.mutation.SetShippingCertificateCode(s)
	return oc
}

// SetNillableShippingCertificateCode sets the "shipping_certificate_code" field if the given value is not nil.
func (oc *OrderCreate) SetNillableShippingCertificateCode(s *string) *OrderCreate {
	if s != nil {
		oc.SetShippingCertificateCode(*s)
	}
	return oc
}

// SetShippingCredentialsPeriod sets the "shipping_credentials_period" field.
func (oc *OrderCreate) SetShippingCredentialsPeriod(s string) *OrderCreate {
	oc.mutation.SetShippingCredentialsPeriod(s)
	return oc
}

// SetNillableShippingCredentialsPeriod sets the "shipping_credentials_period" field if the given value is not nil.
func (oc *OrderCreate) SetNillableShippingCredentialsPeriod(s *string) *OrderCreate {
	if s != nil {
		oc.SetShippingCredentialsPeriod(*s)
	}
	return oc
}

// SetRemark sets the "remark" field.
func (oc *OrderCreate) SetRemark(s string) *OrderCreate {
	oc.mutation.SetRemark(s)
	return oc
}

// SetNillableRemark sets the "remark" field if the given value is not nil.
func (oc *OrderCreate) SetNillableRemark(s *string) *OrderCreate {
	if s != nil {
		oc.SetRemark(*s)
	}
	return oc
}

// SetPreferShippedType sets the "prefer_shipped_type" field.
func (oc *OrderCreate) SetPreferShippedType(i int8) *OrderCreate {
	oc.mutation.SetPreferShippedType(i)
	return oc
}

// SetNillablePreferShippedType sets the "prefer_shipped_type" field if the given value is not nil.
func (oc *OrderCreate) SetNillablePreferShippedType(i *int8) *OrderCreate {
	if i != nil {
		oc.SetPreferShippedType(*i)
	}
	return oc
}

// SetPreferChannelID sets the "prefer_channel_id" field.
func (oc *OrderCreate) SetPreferChannelID(i int64) *OrderCreate {
	oc.mutation.SetPreferChannelID(i)
	return oc
}

// SetNillablePreferChannelID sets the "prefer_channel_id" field if the given value is not nil.
func (oc *OrderCreate) SetNillablePreferChannelID(i *int64) *OrderCreate {
	if i != nil {
		oc.SetPreferChannelID(*i)
	}
	return oc
}

// SetChannelOptions sets the "channel_options" field.
func (oc *OrderCreate) SetChannelOptions(s string) *OrderCreate {
	oc.mutation.SetChannelOptions(s)
	return oc
}

// SetNillableChannelOptions sets the "channel_options" field if the given value is not nil.
func (oc *OrderCreate) SetNillableChannelOptions(s *string) *OrderCreate {
	if s != nil {
		oc.SetChannelOptions(*s)
	}
	return oc
}

// SetChannelID sets the "channel_id" field.
func (oc *OrderCreate) SetChannelID(i int64) *OrderCreate {
	oc.mutation.SetChannelID(i)
	return oc
}

// SetNillableChannelID sets the "channel_id" field if the given value is not nil.
func (oc *OrderCreate) SetNillableChannelID(i *int64) *OrderCreate {
	if i != nil {
		oc.SetChannelID(*i)
	}
	return oc
}

// SetChannelCostID sets the "channel_cost_id" field.
func (oc *OrderCreate) SetChannelCostID(i int64) *OrderCreate {
	oc.mutation.SetChannelCostID(i)
	return oc
}

// SetNillableChannelCostID sets the "channel_cost_id" field if the given value is not nil.
func (oc *OrderCreate) SetNillableChannelCostID(i *int64) *OrderCreate {
	if i != nil {
		oc.SetChannelCostID(*i)
	}
	return oc
}

// SetShipType sets the "ship_type" field.
func (oc *OrderCreate) SetShipType(i int8) *OrderCreate {
	oc.mutation.SetShipType(i)
	return oc
}

// SetNillableShipType sets the "ship_type" field if the given value is not nil.
func (oc *OrderCreate) SetNillableShipType(i *int8) *OrderCreate {
	if i != nil {
		oc.SetShipType(*i)
	}
	return oc
}

// SetTrackingCompany sets the "tracking_company" field.
func (oc *OrderCreate) SetTrackingCompany(s string) *OrderCreate {
	oc.mutation.SetTrackingCompany(s)
	return oc
}

// SetNillableTrackingCompany sets the "tracking_company" field if the given value is not nil.
func (oc *OrderCreate) SetNillableTrackingCompany(s *string) *OrderCreate {
	if s != nil {
		oc.SetTrackingCompany(*s)
	}
	return oc
}

// SetTrackingNumber sets the "tracking_number" field.
func (oc *OrderCreate) SetTrackingNumber(s string) *OrderCreate {
	oc.mutation.SetTrackingNumber(s)
	return oc
}

// SetNillableTrackingNumber sets the "tracking_number" field if the given value is not nil.
func (oc *OrderCreate) SetNillableTrackingNumber(s *string) *OrderCreate {
	if s != nil {
		oc.SetTrackingNumber(*s)
	}
	return oc
}

// SetTrackingURL sets the "tracking_url" field.
func (oc *OrderCreate) SetTrackingURL(s string) *OrderCreate {
	oc.mutation.SetTrackingURL(s)
	return oc
}

// SetNillableTrackingURL sets the "tracking_url" field if the given value is not nil.
func (oc *OrderCreate) SetNillableTrackingURL(s *string) *OrderCreate {
	if s != nil {
		oc.SetTrackingURL(*s)
	}
	return oc
}

// SetWaybillNumber sets the "waybill_number" field.
func (oc *OrderCreate) SetWaybillNumber(s string) *OrderCreate {
	oc.mutation.SetWaybillNumber(s)
	return oc
}

// SetNillableWaybillNumber sets the "waybill_number" field if the given value is not nil.
func (oc *OrderCreate) SetNillableWaybillNumber(s *string) *OrderCreate {
	if s != nil {
		oc.SetWaybillNumber(*s)
	}
	return oc
}

// SetCourierOrderNumber sets the "courier_order_number" field.
func (oc *OrderCreate) SetCourierOrderNumber(s string) *OrderCreate {
	oc.mutation.SetCourierOrderNumber(s)
	return oc
}

// SetNillableCourierOrderNumber sets the "courier_order_number" field if the given value is not nil.
func (oc *OrderCreate) SetNillableCourierOrderNumber(s *string) *OrderCreate {
	if s != nil {
		oc.SetCourierOrderNumber(*s)
	}
	return oc
}

// SetNssCourierOrderNumber sets the "nss_courier_order_number" field.
func (oc *OrderCreate) SetNssCourierOrderNumber(s string) *OrderCreate {
	oc.mutation.SetNssCourierOrderNumber(s)
	return oc
}

// SetNillableNssCourierOrderNumber sets the "nss_courier_order_number" field if the given value is not nil.
func (oc *OrderCreate) SetNillableNssCourierOrderNumber(s *string) *OrderCreate {
	if s != nil {
		oc.SetNssCourierOrderNumber(*s)
	}
	return oc
}

// SetNssTrackingNumber sets the "nss_tracking_number" field.
func (oc *OrderCreate) SetNssTrackingNumber(s string) *OrderCreate {
	oc.mutation.SetNssTrackingNumber(s)
	return oc
}

// SetNillableNssTrackingNumber sets the "nss_tracking_number" field if the given value is not nil.
func (oc *OrderCreate) SetNillableNssTrackingNumber(s *string) *OrderCreate {
	if s != nil {
		oc.SetNssTrackingNumber(*s)
	}
	return oc
}

// SetNssTrackingURL sets the "nss_tracking_url" field.
func (oc *OrderCreate) SetNssTrackingURL(s string) *OrderCreate {
	oc.mutation.SetNssTrackingURL(s)
	return oc
}

// SetNillableNssTrackingURL sets the "nss_tracking_url" field if the given value is not nil.
func (oc *OrderCreate) SetNillableNssTrackingURL(s *string) *OrderCreate {
	if s != nil {
		oc.SetNssTrackingURL(*s)
	}
	return oc
}

// SetShippingLabelURL sets the "shipping_label_url" field.
func (oc *OrderCreate) SetShippingLabelURL(s string) *OrderCreate {
	oc.mutation.SetShippingLabelURL(s)
	return oc
}

// SetNillableShippingLabelURL sets the "shipping_label_url" field if the given value is not nil.
func (oc *OrderCreate) SetNillableShippingLabelURL(s *string) *OrderCreate {
	if s != nil {
		oc.SetShippingLabelURL(*s)
	}
	return oc
}

// SetShippingLabelPath sets the "shipping_label_path" field.
func (oc *OrderCreate) SetShippingLabelPath(s string) *OrderCreate {
	oc.mutation.SetShippingLabelPath(s)
	return oc
}

// SetNillableShippingLabelPath sets the "shipping_label_path" field if the given value is not nil.
func (oc *OrderCreate) SetNillableShippingLabelPath(s *string) *OrderCreate {
	if s != nil {
		oc.SetShippingLabelPath(*s)
	}
	return oc
}

// SetLabelDataPath sets the "label_data_path" field.
func (oc *OrderCreate) SetLabelDataPath(s string) *OrderCreate {
	oc.mutation.SetLabelDataPath(s)
	return oc
}

// SetNillableLabelDataPath sets the "label_data_path" field if the given value is not nil.
func (oc *OrderCreate) SetNillableLabelDataPath(s *string) *OrderCreate {
	if s != nil {
		oc.SetLabelDataPath(*s)
	}
	return oc
}

// SetPackageID sets the "package_id" field.
func (oc *OrderCreate) SetPackageID(s string) *OrderCreate {
	oc.mutation.SetPackageID(s)
	return oc
}

// SetNillablePackageID sets the "package_id" field if the given value is not nil.
func (oc *OrderCreate) SetNillablePackageID(s *string) *OrderCreate {
	if s != nil {
		oc.SetPackageID(*s)
	}
	return oc
}

// SetShipDate sets the "ship_date" field.
func (oc *OrderCreate) SetShipDate(t time.Time) *OrderCreate {
	oc.mutation.SetShipDate(t)
	return oc
}

// SetNillableShipDate sets the "ship_date" field if the given value is not nil.
func (oc *OrderCreate) SetNillableShipDate(t *time.Time) *OrderCreate {
	if t != nil {
		oc.SetShipDate(*t)
	}
	return oc
}

// SetRequestShippingAt sets the "request_shipping_at" field.
func (oc *OrderCreate) SetRequestShippingAt(t time.Time) *OrderCreate {
	oc.mutation.SetRequestShippingAt(t)
	return oc
}

// SetNillableRequestShippingAt sets the "request_shipping_at" field if the given value is not nil.
func (oc *OrderCreate) SetNillableRequestShippingAt(t *time.Time) *OrderCreate {
	if t != nil {
		oc.SetRequestShippingAt(*t)
	}
	return oc
}

// SetUnshelfRequestedTime sets the "unshelf_requested_time" field.
func (oc *OrderCreate) SetUnshelfRequestedTime(t time.Time) *OrderCreate {
	oc.mutation.SetUnshelfRequestedTime(t)
	return oc
}

// SetNillableUnshelfRequestedTime sets the "unshelf_requested_time" field if the given value is not nil.
func (oc *OrderCreate) SetNillableUnshelfRequestedTime(t *time.Time) *OrderCreate {
	if t != nil {
		oc.SetUnshelfRequestedTime(*t)
	}
	return oc
}

// SetContainerCode sets the "container_code" field.
func (oc *OrderCreate) SetContainerCode(s string) *OrderCreate {
	oc.mutation.SetContainerCode(s)
	return oc
}

// SetNillableContainerCode sets the "container_code" field if the given value is not nil.
func (oc *OrderCreate) SetNillableContainerCode(s *string) *OrderCreate {
	if s != nil {
		oc.SetContainerCode(*s)
	}
	return oc
}

// SetBasketNumber sets the "basket_number" field.
func (oc *OrderCreate) SetBasketNumber(s string) *OrderCreate {
	oc.mutation.SetBasketNumber(s)
	return oc
}

// SetNillableBasketNumber sets the "basket_number" field if the given value is not nil.
func (oc *OrderCreate) SetNillableBasketNumber(s *string) *OrderCreate {
	if s != nil {
		oc.SetBasketNumber(*s)
	}
	return oc
}

// SetPrintTimes sets the "print_times" field.
func (oc *OrderCreate) SetPrintTimes(i int) *OrderCreate {
	oc.mutation.SetPrintTimes(i)
	return oc
}

// SetNillablePrintTimes sets the "print_times" field if the given value is not nil.
func (oc *OrderCreate) SetNillablePrintTimes(i *int) *OrderCreate {
	if i != nil {
		oc.SetPrintTimes(*i)
	}
	return oc
}

// SetSortingTrackingNumber sets the "sorting_tracking_number" field.
func (oc *OrderCreate) SetSortingTrackingNumber(s string) *OrderCreate {
	oc.mutation.SetSortingTrackingNumber(s)
	return oc
}

// SetNillableSortingTrackingNumber sets the "sorting_tracking_number" field if the given value is not nil.
func (oc *OrderCreate) SetNillableSortingTrackingNumber(s *string) *OrderCreate {
	if s != nil {
		oc.SetSortingTrackingNumber(*s)
	}
	return oc
}

// SetSortingPort sets the "sorting_port" field.
func (oc *OrderCreate) SetSortingPort(i int32) *OrderCreate {
	oc.mutation.SetSortingPort(i)
	return oc
}

// SetNillableSortingPort sets the "sorting_port" field if the given value is not nil.
func (oc *OrderCreate) SetNillableSortingPort(i *int32) *OrderCreate {
	if i != nil {
		oc.SetSortingPort(*i)
	}
	return oc
}

// SetSortingLength sets the "sorting_length" field.
func (oc *OrderCreate) SetSortingLength(i int) *OrderCreate {
	oc.mutation.SetSortingLength(i)
	return oc
}

// SetNillableSortingLength sets the "sorting_length" field if the given value is not nil.
func (oc *OrderCreate) SetNillableSortingLength(i *int) *OrderCreate {
	if i != nil {
		oc.SetSortingLength(*i)
	}
	return oc
}

// SetSortingWidth sets the "sorting_width" field.
func (oc *OrderCreate) SetSortingWidth(i int) *OrderCreate {
	oc.mutation.SetSortingWidth(i)
	return oc
}

// SetNillableSortingWidth sets the "sorting_width" field if the given value is not nil.
func (oc *OrderCreate) SetNillableSortingWidth(i *int) *OrderCreate {
	if i != nil {
		oc.SetSortingWidth(*i)
	}
	return oc
}

// SetSortingHeight sets the "sorting_height" field.
func (oc *OrderCreate) SetSortingHeight(i int) *OrderCreate {
	oc.mutation.SetSortingHeight(i)
	return oc
}

// SetNillableSortingHeight sets the "sorting_height" field if the given value is not nil.
func (oc *OrderCreate) SetNillableSortingHeight(i *int) *OrderCreate {
	if i != nil {
		oc.SetSortingHeight(*i)
	}
	return oc
}

// SetSortingWeight sets the "sorting_weight" field.
func (oc *OrderCreate) SetSortingWeight(i int) *OrderCreate {
	oc.mutation.SetSortingWeight(i)
	return oc
}

// SetNillableSortingWeight sets the "sorting_weight" field if the given value is not nil.
func (oc *OrderCreate) SetNillableSortingWeight(i *int) *OrderCreate {
	if i != nil {
		oc.SetSortingWeight(*i)
	}
	return oc
}

// SetEstimatedWeight sets the "estimated_weight" field.
func (oc *OrderCreate) SetEstimatedWeight(i int) *OrderCreate {
	oc.mutation.SetEstimatedWeight(i)
	return oc
}

// SetNillableEstimatedWeight sets the "estimated_weight" field if the given value is not nil.
func (oc *OrderCreate) SetNillableEstimatedWeight(i *int) *OrderCreate {
	if i != nil {
		oc.SetEstimatedWeight(*i)
	}
	return oc
}

// SetCheckoutActualWeight sets the "checkout_actual_weight" field.
func (oc *OrderCreate) SetCheckoutActualWeight(i int) *OrderCreate {
	oc.mutation.SetCheckoutActualWeight(i)
	return oc
}

// SetNillableCheckoutActualWeight sets the "checkout_actual_weight" field if the given value is not nil.
func (oc *OrderCreate) SetNillableCheckoutActualWeight(i *int) *OrderCreate {
	if i != nil {
		oc.SetCheckoutActualWeight(*i)
	}
	return oc
}

// SetVolumeWeight sets the "volume_weight" field.
func (oc *OrderCreate) SetVolumeWeight(i int) *OrderCreate {
	oc.mutation.SetVolumeWeight(i)
	return oc
}

// SetNillableVolumeWeight sets the "volume_weight" field if the given value is not nil.
func (oc *OrderCreate) SetNillableVolumeWeight(i *int) *OrderCreate {
	if i != nil {
		oc.SetVolumeWeight(*i)
	}
	return oc
}

// SetCourierWeight sets the "courier_weight" field.
func (oc *OrderCreate) SetCourierWeight(i int) *OrderCreate {
	oc.mutation.SetCourierWeight(i)
	return oc
}

// SetNillableCourierWeight sets the "courier_weight" field if the given value is not nil.
func (oc *OrderCreate) SetNillableCourierWeight(i *int) *OrderCreate {
	if i != nil {
		oc.SetCourierWeight(*i)
	}
	return oc
}

// SetDeclaredValueInUsd sets the "declared_value_in_usd" field.
func (oc *OrderCreate) SetDeclaredValueInUsd(f float64) *OrderCreate {
	oc.mutation.SetDeclaredValueInUsd(f)
	return oc
}

// SetNillableDeclaredValueInUsd sets the "declared_value_in_usd" field if the given value is not nil.
func (oc *OrderCreate) SetNillableDeclaredValueInUsd(f *float64) *OrderCreate {
	if f != nil {
		oc.SetDeclaredValueInUsd(*f)
	}
	return oc
}

// SetDeclaredValueInEur sets the "declared_value_in_eur" field.
func (oc *OrderCreate) SetDeclaredValueInEur(f float64) *OrderCreate {
	oc.mutation.SetDeclaredValueInEur(f)
	return oc
}

// SetNillableDeclaredValueInEur sets the "declared_value_in_eur" field if the given value is not nil.
func (oc *OrderCreate) SetNillableDeclaredValueInEur(f *float64) *OrderCreate {
	if f != nil {
		oc.SetDeclaredValueInEur(*f)
	}
	return oc
}

// SetTotalItemsPrice sets the "total_items_price" field.
func (oc *OrderCreate) SetTotalItemsPrice(f float64) *OrderCreate {
	oc.mutation.SetTotalItemsPrice(f)
	return oc
}

// SetNillableTotalItemsPrice sets the "total_items_price" field if the given value is not nil.
func (oc *OrderCreate) SetNillableTotalItemsPrice(f *float64) *OrderCreate {
	if f != nil {
		oc.SetTotalItemsPrice(*f)
	}
	return oc
}

// SetCurrency sets the "currency" field.
func (oc *OrderCreate) SetCurrency(s string) *OrderCreate {
	oc.mutation.SetCurrency(s)
	return oc
}

// SetNillableCurrency sets the "currency" field if the given value is not nil.
func (oc *OrderCreate) SetNillableCurrency(s *string) *OrderCreate {
	if s != nil {
		oc.SetCurrency(*s)
	}
	return oc
}

// SetDeliveryCost sets the "delivery_cost" field.
func (oc *OrderCreate) SetDeliveryCost(f float64) *OrderCreate {
	oc.mutation.SetDeliveryCost(f)
	return oc
}

// SetNillableDeliveryCost sets the "delivery_cost" field if the given value is not nil.
func (oc *OrderCreate) SetNillableDeliveryCost(f *float64) *OrderCreate {
	if f != nil {
		oc.SetDeliveryCost(*f)
	}
	return oc
}

// SetMiscFee sets the "misc_fee" field.
func (oc *OrderCreate) SetMiscFee(f float64) *OrderCreate {
	oc.mutation.SetMiscFee(f)
	return oc
}

// SetNillableMiscFee sets the "misc_fee" field if the given value is not nil.
func (oc *OrderCreate) SetNillableMiscFee(f *float64) *OrderCreate {
	if f != nil {
		oc.SetMiscFee(*f)
	}
	return oc
}

// SetFuelFee sets the "fuel_fee" field.
func (oc *OrderCreate) SetFuelFee(f float64) *OrderCreate {
	oc.mutation.SetFuelFee(f)
	return oc
}

// SetNillableFuelFee sets the "fuel_fee" field if the given value is not nil.
func (oc *OrderCreate) SetNillableFuelFee(f *float64) *OrderCreate {
	if f != nil {
		oc.SetFuelFee(*f)
	}
	return oc
}

// SetRegistrationFee sets the "registration_fee" field.
func (oc *OrderCreate) SetRegistrationFee(f float64) *OrderCreate {
	oc.mutation.SetRegistrationFee(f)
	return oc
}

// SetNillableRegistrationFee sets the "registration_fee" field if the given value is not nil.
func (oc *OrderCreate) SetNillableRegistrationFee(f *float64) *OrderCreate {
	if f != nil {
		oc.SetRegistrationFee(*f)
	}
	return oc
}

// SetProcessingFee sets the "processing_fee" field.
func (oc *OrderCreate) SetProcessingFee(f float64) *OrderCreate {
	oc.mutation.SetProcessingFee(f)
	return oc
}

// SetNillableProcessingFee sets the "processing_fee" field if the given value is not nil.
func (oc *OrderCreate) SetNillableProcessingFee(f *float64) *OrderCreate {
	if f != nil {
		oc.SetProcessingFee(*f)
	}
	return oc
}

// SetPackageFee sets the "package_fee" field.
func (oc *OrderCreate) SetPackageFee(f float64) *OrderCreate {
	oc.mutation.SetPackageFee(f)
	return oc
}

// SetNillablePackageFee sets the "package_fee" field if the given value is not nil.
func (oc *OrderCreate) SetNillablePackageFee(f *float64) *OrderCreate {
	if f != nil {
		oc.SetPackageFee(*f)
	}
	return oc
}

// SetHandlingFee sets the "handling_fee" field.
func (oc *OrderCreate) SetHandlingFee(f float64) *OrderCreate {
	oc.mutation.SetHandlingFee(f)
	return oc
}

// SetNillableHandlingFee sets the "handling_fee" field if the given value is not nil.
func (oc *OrderCreate) SetNillableHandlingFee(f *float64) *OrderCreate {
	if f != nil {
		oc.SetHandlingFee(*f)
	}
	return oc
}

// SetVat sets the "vat" field.
func (oc *OrderCreate) SetVat(f float64) *OrderCreate {
	oc.mutation.SetVat(f)
	return oc
}

// SetNillableVat sets the "vat" field if the given value is not nil.
func (oc *OrderCreate) SetNillableVat(f *float64) *OrderCreate {
	if f != nil {
		oc.SetVat(*f)
	}
	return oc
}

// SetEstimatedCost sets the "estimated_cost" field.
func (oc *OrderCreate) SetEstimatedCost(f float64) *OrderCreate {
	oc.mutation.SetEstimatedCost(f)
	return oc
}

// SetNillableEstimatedCost sets the "estimated_cost" field if the given value is not nil.
func (oc *OrderCreate) SetNillableEstimatedCost(f *float64) *OrderCreate {
	if f != nil {
		oc.SetEstimatedCost(*f)
	}
	return oc
}

// SetEstimatedCurrency sets the "estimated_currency" field.
func (oc *OrderCreate) SetEstimatedCurrency(s string) *OrderCreate {
	oc.mutation.SetEstimatedCurrency(s)
	return oc
}

// SetNillableEstimatedCurrency sets the "estimated_currency" field if the given value is not nil.
func (oc *OrderCreate) SetNillableEstimatedCurrency(s *string) *OrderCreate {
	if s != nil {
		oc.SetEstimatedCurrency(*s)
	}
	return oc
}

// SetReceivablesAmount sets the "receivables_amount" field.
func (oc *OrderCreate) SetReceivablesAmount(f float64) *OrderCreate {
	oc.mutation.SetReceivablesAmount(f)
	return oc
}

// SetNillableReceivablesAmount sets the "receivables_amount" field if the given value is not nil.
func (oc *OrderCreate) SetNillableReceivablesAmount(f *float64) *OrderCreate {
	if f != nil {
		oc.SetReceivablesAmount(*f)
	}
	return oc
}

// SetReceivablesCurrency sets the "receivables_currency" field.
func (oc *OrderCreate) SetReceivablesCurrency(s string) *OrderCreate {
	oc.mutation.SetReceivablesCurrency(s)
	return oc
}

// SetNillableReceivablesCurrency sets the "receivables_currency" field if the given value is not nil.
func (oc *OrderCreate) SetNillableReceivablesCurrency(s *string) *OrderCreate {
	if s != nil {
		oc.SetReceivablesCurrency(*s)
	}
	return oc
}

// SetNotAcceptPlatformUpdate sets the "not_accept_platform_update" field.
func (oc *OrderCreate) SetNotAcceptPlatformUpdate(b bool) *OrderCreate {
	oc.mutation.SetNotAcceptPlatformUpdate(b)
	return oc
}

// SetNillableNotAcceptPlatformUpdate sets the "not_accept_platform_update" field if the given value is not nil.
func (oc *OrderCreate) SetNillableNotAcceptPlatformUpdate(b *bool) *OrderCreate {
	if b != nil {
		oc.SetNotAcceptPlatformUpdate(*b)
	}
	return oc
}

// SetNotAcceptPlatformUpdateItem sets the "not_accept_platform_update_item" field.
func (oc *OrderCreate) SetNotAcceptPlatformUpdateItem(b bool) *OrderCreate {
	oc.mutation.SetNotAcceptPlatformUpdateItem(b)
	return oc
}

// SetNillableNotAcceptPlatformUpdateItem sets the "not_accept_platform_update_item" field if the given value is not nil.
func (oc *OrderCreate) SetNillableNotAcceptPlatformUpdateItem(b *bool) *OrderCreate {
	if b != nil {
		oc.SetNotAcceptPlatformUpdateItem(*b)
	}
	return oc
}

// SetJdPushedStatus sets the "jd_pushed_status" field.
func (oc *OrderCreate) SetJdPushedStatus(s string) *OrderCreate {
	oc.mutation.SetJdPushedStatus(s)
	return oc
}

// SetNillableJdPushedStatus sets the "jd_pushed_status" field if the given value is not nil.
func (oc *OrderCreate) SetNillableJdPushedStatus(s *string) *OrderCreate {
	if s != nil {
		oc.SetJdPushedStatus(*s)
	}
	return oc
}

// SetID sets the "id" field.
func (oc *OrderCreate) SetID(i int64) *OrderCreate {
	oc.mutation.SetID(i)
	return oc
}

// SetTenantID sets the "tenant" edge to the Tenant entity by ID.
func (oc *OrderCreate) SetTenantID(id int64) *OrderCreate {
	oc.mutation.SetTenantID(id)
	return oc
}

// SetTenant sets the "tenant" edge to the Tenant entity.
func (oc *OrderCreate) SetTenant(t *Tenant) *OrderCreate {
	return oc.SetTenantID(t.ID)
}

// AddOrderItemIDs adds the "order_items" edge to the OrderItem entity by IDs.
func (oc *OrderCreate) AddOrderItemIDs(ids ...int64) *OrderCreate {
	oc.mutation.AddOrderItemIDs(ids...)
	return oc
}

// AddOrderItems adds the "order_items" edges to the OrderItem entity.
func (oc *OrderCreate) AddOrderItems(o ...*OrderItem) *OrderCreate {
	ids := make([]int64, len(o))
	for i := range o {
		ids[i] = o[i].ID
	}
	return oc.AddOrderItemIDs(ids...)
}

// AddOrderHoldReasonIDs adds the "order_hold_reasons" edge to the OrderHoldReason entity by IDs.
func (oc *OrderCreate) AddOrderHoldReasonIDs(ids ...int64) *OrderCreate {
	oc.mutation.AddOrderHoldReasonIDs(ids...)
	return oc
}

// AddOrderHoldReasons adds the "order_hold_reasons" edges to the OrderHoldReason entity.
func (oc *OrderCreate) AddOrderHoldReasons(o ...*OrderHoldReason) *OrderCreate {
	ids := make([]int64, len(o))
	for i := range o {
		ids[i] = o[i].ID
	}
	return oc.AddOrderHoldReasonIDs(ids...)
}

// AddOrderTaxationIDs adds the "order_taxations" edge to the OrderTaxation entity by IDs.
func (oc *OrderCreate) AddOrderTaxationIDs(ids ...int64) *OrderCreate {
	oc.mutation.AddOrderTaxationIDs(ids...)
	return oc
}

// AddOrderTaxations adds the "order_taxations" edges to the OrderTaxation entity.
func (oc *OrderCreate) AddOrderTaxations(o ...*OrderTaxation) *OrderCreate {
	ids := make([]int64, len(o))
	for i := range o {
		ids[i] = o[i].ID
	}
	return oc.AddOrderTaxationIDs(ids...)
}

// SetStoresID sets the "stores" edge to the Store entity by ID.
func (oc *OrderCreate) SetStoresID(id int64) *OrderCreate {
	oc.mutation.SetStoresID(id)
	return oc
}

// SetNillableStoresID sets the "stores" edge to the Store entity by ID if the given value is not nil.
func (oc *OrderCreate) SetNillableStoresID(id *int64) *OrderCreate {
	if id != nil {
		oc = oc.SetStoresID(*id)
	}
	return oc
}

// SetStores sets the "stores" edge to the Store entity.
func (oc *OrderCreate) SetStores(s *Store) *OrderCreate {
	return oc.SetStoresID(s.ID)
}

// SetWarehousesID sets the "warehouses" edge to the Warehouse entity by ID.
func (oc *OrderCreate) SetWarehousesID(id int64) *OrderCreate {
	oc.mutation.SetWarehousesID(id)
	return oc
}

// SetNillableWarehousesID sets the "warehouses" edge to the Warehouse entity by ID if the given value is not nil.
func (oc *OrderCreate) SetNillableWarehousesID(id *int64) *OrderCreate {
	if id != nil {
		oc = oc.SetWarehousesID(*id)
	}
	return oc
}

// SetWarehouses sets the "warehouses" edge to the Warehouse entity.
func (oc *OrderCreate) SetWarehouses(w *Warehouse) *OrderCreate {
	return oc.SetWarehousesID(w.ID)
}

// SetChannelsID sets the "channels" edge to the Channel entity by ID.
func (oc *OrderCreate) SetChannelsID(id int64) *OrderCreate {
	oc.mutation.SetChannelsID(id)
	return oc
}

// SetNillableChannelsID sets the "channels" edge to the Channel entity by ID if the given value is not nil.
func (oc *OrderCreate) SetNillableChannelsID(id *int64) *OrderCreate {
	if id != nil {
		oc = oc.SetChannelsID(*id)
	}
	return oc
}

// SetChannels sets the "channels" edge to the Channel entity.
func (oc *OrderCreate) SetChannels(c *Channel) *OrderCreate {
	return oc.SetChannelsID(c.ID)
}

// AddTrackMappingIDs adds the "track_mappings" edge to the TrackMapping entity by IDs.
func (oc *OrderCreate) AddTrackMappingIDs(ids ...int64) *OrderCreate {
	oc.mutation.AddTrackMappingIDs(ids...)
	return oc
}

// AddTrackMappings adds the "track_mappings" edges to the TrackMapping entity.
func (oc *OrderCreate) AddTrackMappings(t ...*TrackMapping) *OrderCreate {
	ids := make([]int64, len(t))
	for i := range t {
		ids[i] = t[i].ID
	}
	return oc.AddTrackMappingIDs(ids...)
}

// Mutation returns the OrderMutation object of the builder.
func (oc *OrderCreate) Mutation() *OrderMutation {
	return oc.mutation
}

// Save creates the Order in the database.
func (oc *OrderCreate) Save(ctx context.Context) (*Order, error) {
	var (
		err  error
		node *Order
	)
	if err := oc.defaults(); err != nil {
		return nil, err
	}
	if len(oc.hooks) == 0 {
		if err = oc.check(); err != nil {
			return nil, err
		}
		node, err = oc.sqlSave(ctx)
	} else {
		var mut Mutator = MutateFunc(func(ctx context.Context, m Mutation) (Value, error) {
			mutation, ok := m.(*OrderMutation)
			if !ok {
				return nil, fmt.Errorf("unexpected mutation type %T", m)
			}
			if err = oc.check(); err != nil {
				return nil, err
			}
			oc.mutation = mutation
			if node, err = oc.sqlSave(ctx); err != nil {
				return nil, err
			}
			mutation.id = &node.ID
			mutation.done = true
			return node, err
		})
		for i := len(oc.hooks) - 1; i >= 0; i-- {
			if oc.hooks[i] == nil {
				return nil, fmt.Errorf("gen: uninitialized hook (forgotten import gen/runtime?)")
			}
			mut = oc.hooks[i](mut)
		}
		v, err := mut.Mutate(ctx, oc.mutation)
		if err != nil {
			return nil, err
		}
		nv, ok := v.(*Order)
		if !ok {
			return nil, fmt.Errorf("unexpected node type %T returned from OrderMutation", v)
		}
		node = nv
	}
	return node, err
}

// SaveX calls Save and panics if Save returns an error.
func (oc *OrderCreate) SaveX(ctx context.Context) *Order {
	v, err := oc.Save(ctx)
	if err != nil {
		panic(err)
	}
	return v
}

// Exec executes the query.
func (oc *OrderCreate) Exec(ctx context.Context) error {
	_, err := oc.Save(ctx)
	return err
}

// ExecX is like Exec, but panics if an error occurs.
func (oc *OrderCreate) ExecX(ctx context.Context) {
	if err := oc.Exec(ctx); err != nil {
		panic(err)
	}
}

// defaults sets the default values of the builder before save.
func (oc *OrderCreate) defaults() error {
	if _, ok := oc.mutation.CreatedAt(); !ok {
		if order.DefaultCreatedAt == nil {
			return fmt.Errorf("gen: uninitialized order.DefaultCreatedAt (forgotten import gen/runtime?)")
		}
		v := order.DefaultCreatedAt()
		oc.mutation.SetCreatedAt(v)
	}
	if _, ok := oc.mutation.UpdatedAt(); !ok {
		if order.DefaultUpdatedAt == nil {
			return fmt.Errorf("gen: uninitialized order.DefaultUpdatedAt (forgotten import gen/runtime?)")
		}
		v := order.DefaultUpdatedAt()
		oc.mutation.SetUpdatedAt(v)
	}
	if _, ok := oc.mutation.OrderNumber(); !ok {
		v := order.DefaultOrderNumber
		oc.mutation.SetOrderNumber(v)
	}
	if _, ok := oc.mutation.Mode(); !ok {
		v := order.DefaultMode
		oc.mutation.SetMode(v)
	}
	if _, ok := oc.mutation.GetType(); !ok {
		v := order.DefaultType
		oc.mutation.SetType(v)
	}
	if _, ok := oc.mutation.Offline(); !ok {
		v := order.DefaultOffline
		oc.mutation.SetOffline(v)
	}
	if _, ok := oc.mutation.StoreID(); !ok {
		v := order.DefaultStoreID
		oc.mutation.SetStoreID(v)
	}
	if _, ok := oc.mutation.WarehouseID(); !ok {
		v := order.DefaultWarehouseID
		oc.mutation.SetWarehouseID(v)
	}
	if _, ok := oc.mutation.CustomerCode(); !ok {
		v := order.DefaultCustomerCode
		oc.mutation.SetCustomerCode(v)
	}
	if _, ok := oc.mutation.PrepayTariff(); !ok {
		v := order.DefaultPrepayTariff
		oc.mutation.SetPrepayTariff(v)
	}
	if _, ok := oc.mutation.IossNumber(); !ok {
		v := order.DefaultIossNumber
		oc.mutation.SetIossNumber(v)
	}
	if _, ok := oc.mutation.IossCountryCode(); !ok {
		v := order.DefaultIossCountryCode
		oc.mutation.SetIossCountryCode(v)
	}
	if _, ok := oc.mutation.IossNumberType(); !ok {
		v := order.DefaultIossNumberType
		oc.mutation.SetIossNumberType(v)
	}
	if _, ok := oc.mutation.UkVatNumber(); !ok {
		v := order.DefaultUkVatNumber
		oc.mutation.SetUkVatNumber(v)
	}
	if _, ok := oc.mutation.InboundOrderNumber(); !ok {
		v := order.DefaultInboundOrderNumber
		oc.mutation.SetInboundOrderNumber(v)
	}
	if _, ok := oc.mutation.Status(); !ok {
		v := order.DefaultStatus
		oc.mutation.SetStatus(v)
	}
	if _, ok := oc.mutation.SqsStatus(); !ok {
		v := order.DefaultSqsStatus
		oc.mutation.SetSqsStatus(v)
	}
	if _, ok := oc.mutation.HoldStatus(); !ok {
		v := order.DefaultHoldStatus
		oc.mutation.SetHoldStatus(v)
	}
	if _, ok := oc.mutation.PaymentStatus(); !ok {
		v := order.DefaultPaymentStatus
		oc.mutation.SetPaymentStatus(v)
	}
	if _, ok := oc.mutation.CancelRequest(); !ok {
		v := order.DefaultCancelRequest
		oc.mutation.SetCancelRequest(v)
	}
	if _, ok := oc.mutation.Platform(); !ok {
		v := order.DefaultPlatform
		oc.mutation.SetPlatform(v)
	}
	if _, ok := oc.mutation.PlatformOrderID(); !ok {
		v := order.DefaultPlatformOrderID
		oc.mutation.SetPlatformOrderID(v)
	}
	if _, ok := oc.mutation.PlatformOrderNo(); !ok {
		v := order.DefaultPlatformOrderNo
		oc.mutation.SetPlatformOrderNo(v)
	}
	if _, ok := oc.mutation.PlatformOrderStatusURL(); !ok {
		v := order.DefaultPlatformOrderStatusURL
		oc.mutation.SetPlatformOrderStatusURL(v)
	}
	if _, ok := oc.mutation.PlatformStatus(); !ok {
		v := order.DefaultPlatformStatus
		oc.mutation.SetPlatformStatus(v)
	}
	if _, ok := oc.mutation.PaidStatus(); !ok {
		v := order.DefaultPaidStatus
		oc.mutation.SetPaidStatus(v)
	}
	if _, ok := oc.mutation.FulfillmentPushed(); !ok {
		v := order.DefaultFulfillmentPushed
		oc.mutation.SetFulfillmentPushed(v)
	}
	if _, ok := oc.mutation.FulfillmentStatus(); !ok {
		v := order.DefaultFulfillmentStatus
		oc.mutation.SetFulfillmentStatus(v)
	}
	if _, ok := oc.mutation.LocationID(); !ok {
		v := order.DefaultLocationID
		oc.mutation.SetLocationID(v)
	}
	if _, ok := oc.mutation.Note(); !ok {
		v := order.DefaultNote
		oc.mutation.SetNote(v)
	}
	if _, ok := oc.mutation.CancelReason(); !ok {
		v := order.DefaultCancelReason
		oc.mutation.SetCancelReason(v)
	}
	if _, ok := oc.mutation.ContactEmail(); !ok {
		v := order.DefaultContactEmail
		oc.mutation.SetContactEmail(v)
	}
	if _, ok := oc.mutation.ContactPhone(); !ok {
		v := order.DefaultContactPhone
		oc.mutation.SetContactPhone(v)
	}
	if _, ok := oc.mutation.ShippingName(); !ok {
		v := order.DefaultShippingName
		oc.mutation.SetShippingName(v)
	}
	if _, ok := oc.mutation.ShippingFirstName(); !ok {
		v := order.DefaultShippingFirstName
		oc.mutation.SetShippingFirstName(v)
	}
	if _, ok := oc.mutation.ShippingLastName(); !ok {
		v := order.DefaultShippingLastName
		oc.mutation.SetShippingLastName(v)
	}
	if _, ok := oc.mutation.ShippingCompany(); !ok {
		v := order.DefaultShippingCompany
		oc.mutation.SetShippingCompany(v)
	}
	if _, ok := oc.mutation.ShippingCountry(); !ok {
		v := order.DefaultShippingCountry
		oc.mutation.SetShippingCountry(v)
	}
	if _, ok := oc.mutation.ShippingCountryCode(); !ok {
		v := order.DefaultShippingCountryCode
		oc.mutation.SetShippingCountryCode(v)
	}
	if _, ok := oc.mutation.ShippingProvince(); !ok {
		v := order.DefaultShippingProvince
		oc.mutation.SetShippingProvince(v)
	}
	if _, ok := oc.mutation.ShippingProvinceCode(); !ok {
		v := order.DefaultShippingProvinceCode
		oc.mutation.SetShippingProvinceCode(v)
	}
	if _, ok := oc.mutation.ShippingCity(); !ok {
		v := order.DefaultShippingCity
		oc.mutation.SetShippingCity(v)
	}
	if _, ok := oc.mutation.ShippingAddress1(); !ok {
		v := order.DefaultShippingAddress1
		oc.mutation.SetShippingAddress1(v)
	}
	if _, ok := oc.mutation.ShippingAddress2(); !ok {
		v := order.DefaultShippingAddress2
		oc.mutation.SetShippingAddress2(v)
	}
	if _, ok := oc.mutation.ShippingZipCode(); !ok {
		v := order.DefaultShippingZipCode
		oc.mutation.SetShippingZipCode(v)
	}
	if _, ok := oc.mutation.ShippingPhone(); !ok {
		v := order.DefaultShippingPhone
		oc.mutation.SetShippingPhone(v)
	}
	if _, ok := oc.mutation.ShippingCertificateType(); !ok {
		v := order.DefaultShippingCertificateType
		oc.mutation.SetShippingCertificateType(v)
	}
	if _, ok := oc.mutation.ShippingCertificateCode(); !ok {
		v := order.DefaultShippingCertificateCode
		oc.mutation.SetShippingCertificateCode(v)
	}
	if _, ok := oc.mutation.ShippingCredentialsPeriod(); !ok {
		v := order.DefaultShippingCredentialsPeriod
		oc.mutation.SetShippingCredentialsPeriod(v)
	}
	if _, ok := oc.mutation.Remark(); !ok {
		v := order.DefaultRemark
		oc.mutation.SetRemark(v)
	}
	if _, ok := oc.mutation.PreferShippedType(); !ok {
		v := order.DefaultPreferShippedType
		oc.mutation.SetPreferShippedType(v)
	}
	if _, ok := oc.mutation.PreferChannelID(); !ok {
		v := order.DefaultPreferChannelID
		oc.mutation.SetPreferChannelID(v)
	}
	if _, ok := oc.mutation.ChannelID(); !ok {
		v := order.DefaultChannelID
		oc.mutation.SetChannelID(v)
	}
	if _, ok := oc.mutation.ChannelCostID(); !ok {
		v := order.DefaultChannelCostID
		oc.mutation.SetChannelCostID(v)
	}
	if _, ok := oc.mutation.ShipType(); !ok {
		v := order.DefaultShipType
		oc.mutation.SetShipType(v)
	}
	if _, ok := oc.mutation.TrackingCompany(); !ok {
		v := order.DefaultTrackingCompany
		oc.mutation.SetTrackingCompany(v)
	}
	if _, ok := oc.mutation.TrackingNumber(); !ok {
		v := order.DefaultTrackingNumber
		oc.mutation.SetTrackingNumber(v)
	}
	if _, ok := oc.mutation.TrackingURL(); !ok {
		v := order.DefaultTrackingURL
		oc.mutation.SetTrackingURL(v)
	}
	if _, ok := oc.mutation.WaybillNumber(); !ok {
		v := order.DefaultWaybillNumber
		oc.mutation.SetWaybillNumber(v)
	}
	if _, ok := oc.mutation.CourierOrderNumber(); !ok {
		v := order.DefaultCourierOrderNumber
		oc.mutation.SetCourierOrderNumber(v)
	}
	if _, ok := oc.mutation.NssCourierOrderNumber(); !ok {
		v := order.DefaultNssCourierOrderNumber
		oc.mutation.SetNssCourierOrderNumber(v)
	}
	if _, ok := oc.mutation.NssTrackingNumber(); !ok {
		v := order.DefaultNssTrackingNumber
		oc.mutation.SetNssTrackingNumber(v)
	}
	if _, ok := oc.mutation.NssTrackingURL(); !ok {
		v := order.DefaultNssTrackingURL
		oc.mutation.SetNssTrackingURL(v)
	}
	if _, ok := oc.mutation.ShippingLabelURL(); !ok {
		v := order.DefaultShippingLabelURL
		oc.mutation.SetShippingLabelURL(v)
	}
	if _, ok := oc.mutation.ShippingLabelPath(); !ok {
		v := order.DefaultShippingLabelPath
		oc.mutation.SetShippingLabelPath(v)
	}
	if _, ok := oc.mutation.LabelDataPath(); !ok {
		v := order.DefaultLabelDataPath
		oc.mutation.SetLabelDataPath(v)
	}
	if _, ok := oc.mutation.PackageID(); !ok {
		v := order.DefaultPackageID
		oc.mutation.SetPackageID(v)
	}
	if _, ok := oc.mutation.ContainerCode(); !ok {
		v := order.DefaultContainerCode
		oc.mutation.SetContainerCode(v)
	}
	if _, ok := oc.mutation.BasketNumber(); !ok {
		v := order.DefaultBasketNumber
		oc.mutation.SetBasketNumber(v)
	}
	if _, ok := oc.mutation.PrintTimes(); !ok {
		v := order.DefaultPrintTimes
		oc.mutation.SetPrintTimes(v)
	}
	if _, ok := oc.mutation.SortingTrackingNumber(); !ok {
		v := order.DefaultSortingTrackingNumber
		oc.mutation.SetSortingTrackingNumber(v)
	}
	if _, ok := oc.mutation.SortingPort(); !ok {
		v := order.DefaultSortingPort
		oc.mutation.SetSortingPort(v)
	}
	if _, ok := oc.mutation.SortingLength(); !ok {
		v := order.DefaultSortingLength
		oc.mutation.SetSortingLength(v)
	}
	if _, ok := oc.mutation.SortingWidth(); !ok {
		v := order.DefaultSortingWidth
		oc.mutation.SetSortingWidth(v)
	}
	if _, ok := oc.mutation.SortingHeight(); !ok {
		v := order.DefaultSortingHeight
		oc.mutation.SetSortingHeight(v)
	}
	if _, ok := oc.mutation.SortingWeight(); !ok {
		v := order.DefaultSortingWeight
		oc.mutation.SetSortingWeight(v)
	}
	if _, ok := oc.mutation.EstimatedWeight(); !ok {
		v := order.DefaultEstimatedWeight
		oc.mutation.SetEstimatedWeight(v)
	}
	if _, ok := oc.mutation.CheckoutActualWeight(); !ok {
		v := order.DefaultCheckoutActualWeight
		oc.mutation.SetCheckoutActualWeight(v)
	}
	if _, ok := oc.mutation.VolumeWeight(); !ok {
		v := order.DefaultVolumeWeight
		oc.mutation.SetVolumeWeight(v)
	}
	if _, ok := oc.mutation.CourierWeight(); !ok {
		v := order.DefaultCourierWeight
		oc.mutation.SetCourierWeight(v)
	}
	if _, ok := oc.mutation.DeclaredValueInUsd(); !ok {
		v := order.DefaultDeclaredValueInUsd
		oc.mutation.SetDeclaredValueInUsd(v)
	}
	if _, ok := oc.mutation.DeclaredValueInEur(); !ok {
		v := order.DefaultDeclaredValueInEur
		oc.mutation.SetDeclaredValueInEur(v)
	}
	if _, ok := oc.mutation.TotalItemsPrice(); !ok {
		v := order.DefaultTotalItemsPrice
		oc.mutation.SetTotalItemsPrice(v)
	}
	if _, ok := oc.mutation.DeliveryCost(); !ok {
		v := order.DefaultDeliveryCost
		oc.mutation.SetDeliveryCost(v)
	}
	if _, ok := oc.mutation.MiscFee(); !ok {
		v := order.DefaultMiscFee
		oc.mutation.SetMiscFee(v)
	}
	if _, ok := oc.mutation.FuelFee(); !ok {
		v := order.DefaultFuelFee
		oc.mutation.SetFuelFee(v)
	}
	if _, ok := oc.mutation.RegistrationFee(); !ok {
		v := order.DefaultRegistrationFee
		oc.mutation.SetRegistrationFee(v)
	}
	if _, ok := oc.mutation.ProcessingFee(); !ok {
		v := order.DefaultProcessingFee
		oc.mutation.SetProcessingFee(v)
	}
	if _, ok := oc.mutation.PackageFee(); !ok {
		v := order.DefaultPackageFee
		oc.mutation.SetPackageFee(v)
	}
	if _, ok := oc.mutation.HandlingFee(); !ok {
		v := order.DefaultHandlingFee
		oc.mutation.SetHandlingFee(v)
	}
	if _, ok := oc.mutation.Vat(); !ok {
		v := order.DefaultVat
		oc.mutation.SetVat(v)
	}
	if _, ok := oc.mutation.EstimatedCost(); !ok {
		v := order.DefaultEstimatedCost
		oc.mutation.SetEstimatedCost(v)
	}
	if _, ok := oc.mutation.EstimatedCurrency(); !ok {
		v := order.DefaultEstimatedCurrency
		oc.mutation.SetEstimatedCurrency(v)
	}
	if _, ok := oc.mutation.ReceivablesAmount(); !ok {
		v := order.DefaultReceivablesAmount
		oc.mutation.SetReceivablesAmount(v)
	}
	if _, ok := oc.mutation.ReceivablesCurrency(); !ok {
		v := order.DefaultReceivablesCurrency
		oc.mutation.SetReceivablesCurrency(v)
	}
	if _, ok := oc.mutation.NotAcceptPlatformUpdate(); !ok {
		v := order.DefaultNotAcceptPlatformUpdate
		oc.mutation.SetNotAcceptPlatformUpdate(v)
	}
	if _, ok := oc.mutation.NotAcceptPlatformUpdateItem(); !ok {
		v := order.DefaultNotAcceptPlatformUpdateItem
		oc.mutation.SetNotAcceptPlatformUpdateItem(v)
	}
	if _, ok := oc.mutation.JdPushedStatus(); !ok {
		v := order.DefaultJdPushedStatus
		oc.mutation.SetJdPushedStatus(v)
	}
	return nil
}

// check runs all checks and user-defined validators on the builder.
func (oc *OrderCreate) check() error {
	if _, ok := oc.mutation.CreatedAt(); !ok {
		return &ValidationError{Name: "created_at", err: errors.New(`gen: missing required field "Order.created_at"`)}
	}
	if _, ok := oc.mutation.UpdatedAt(); !ok {
		return &ValidationError{Name: "updated_at", err: errors.New(`gen: missing required field "Order.updated_at"`)}
	}
	if _, ok := oc.mutation.OrderNumber(); !ok {
		return &ValidationError{Name: "order_number", err: errors.New(`gen: missing required field "Order.order_number"`)}
	}
	if _, ok := oc.mutation.Mode(); !ok {
		return &ValidationError{Name: "mode", err: errors.New(`gen: missing required field "Order.mode"`)}
	}
	if _, ok := oc.mutation.GetType(); !ok {
		return &ValidationError{Name: "type", err: errors.New(`gen: missing required field "Order.type"`)}
	}
	if _, ok := oc.mutation.Offline(); !ok {
		return &ValidationError{Name: "offline", err: errors.New(`gen: missing required field "Order.offline"`)}
	}
	if _, ok := oc.mutation.CustomerCode(); !ok {
		return &ValidationError{Name: "customer_code", err: errors.New(`gen: missing required field "Order.customer_code"`)}
	}
	if _, ok := oc.mutation.PrepayTariff(); !ok {
		return &ValidationError{Name: "prepay_tariff", err: errors.New(`gen: missing required field "Order.prepay_tariff"`)}
	}
	if _, ok := oc.mutation.IossNumber(); !ok {
		return &ValidationError{Name: "ioss_number", err: errors.New(`gen: missing required field "Order.ioss_number"`)}
	}
	if _, ok := oc.mutation.IossCountryCode(); !ok {
		return &ValidationError{Name: "ioss_country_code", err: errors.New(`gen: missing required field "Order.ioss_country_code"`)}
	}
	if _, ok := oc.mutation.IossNumberType(); !ok {
		return &ValidationError{Name: "ioss_number_type", err: errors.New(`gen: missing required field "Order.ioss_number_type"`)}
	}
	if _, ok := oc.mutation.UkVatNumber(); !ok {
		return &ValidationError{Name: "uk_vat_number", err: errors.New(`gen: missing required field "Order.uk_vat_number"`)}
	}
	if _, ok := oc.mutation.InboundOrderNumber(); !ok {
		return &ValidationError{Name: "inbound_order_number", err: errors.New(`gen: missing required field "Order.inbound_order_number"`)}
	}
	if _, ok := oc.mutation.Status(); !ok {
		return &ValidationError{Name: "status", err: errors.New(`gen: missing required field "Order.status"`)}
	}
	if _, ok := oc.mutation.Platform(); !ok {
		return &ValidationError{Name: "platform", err: errors.New(`gen: missing required field "Order.platform"`)}
	}
	if _, ok := oc.mutation.ContactEmail(); !ok {
		return &ValidationError{Name: "contact_email", err: errors.New(`gen: missing required field "Order.contact_email"`)}
	}
	if _, ok := oc.mutation.ContactPhone(); !ok {
		return &ValidationError{Name: "contact_phone", err: errors.New(`gen: missing required field "Order.contact_phone"`)}
	}
	if _, ok := oc.mutation.ShippingName(); !ok {
		return &ValidationError{Name: "shipping_name", err: errors.New(`gen: missing required field "Order.shipping_name"`)}
	}
	if _, ok := oc.mutation.ShippingFirstName(); !ok {
		return &ValidationError{Name: "shipping_first_name", err: errors.New(`gen: missing required field "Order.shipping_first_name"`)}
	}
	if _, ok := oc.mutation.ShippingLastName(); !ok {
		return &ValidationError{Name: "shipping_last_name", err: errors.New(`gen: missing required field "Order.shipping_last_name"`)}
	}
	if _, ok := oc.mutation.ShippingCompany(); !ok {
		return &ValidationError{Name: "shipping_company", err: errors.New(`gen: missing required field "Order.shipping_company"`)}
	}
	if _, ok := oc.mutation.ShippingCountry(); !ok {
		return &ValidationError{Name: "shipping_country", err: errors.New(`gen: missing required field "Order.shipping_country"`)}
	}
	if _, ok := oc.mutation.ShippingCountryCode(); !ok {
		return &ValidationError{Name: "shipping_country_code", err: errors.New(`gen: missing required field "Order.shipping_country_code"`)}
	}
	if _, ok := oc.mutation.ShippingProvince(); !ok {
		return &ValidationError{Name: "shipping_province", err: errors.New(`gen: missing required field "Order.shipping_province"`)}
	}
	if _, ok := oc.mutation.ShippingProvinceCode(); !ok {
		return &ValidationError{Name: "shipping_province_code", err: errors.New(`gen: missing required field "Order.shipping_province_code"`)}
	}
	if _, ok := oc.mutation.ShippingCity(); !ok {
		return &ValidationError{Name: "shipping_city", err: errors.New(`gen: missing required field "Order.shipping_city"`)}
	}
	if _, ok := oc.mutation.ShippingAddress1(); !ok {
		return &ValidationError{Name: "shipping_address1", err: errors.New(`gen: missing required field "Order.shipping_address1"`)}
	}
	if _, ok := oc.mutation.ShippingAddress2(); !ok {
		return &ValidationError{Name: "shipping_address2", err: errors.New(`gen: missing required field "Order.shipping_address2"`)}
	}
	if _, ok := oc.mutation.ShippingZipCode(); !ok {
		return &ValidationError{Name: "shipping_zip_code", err: errors.New(`gen: missing required field "Order.shipping_zip_code"`)}
	}
	if _, ok := oc.mutation.ShippingPhone(); !ok {
		return &ValidationError{Name: "shipping_phone", err: errors.New(`gen: missing required field "Order.shipping_phone"`)}
	}
	if _, ok := oc.mutation.DeliveryCost(); !ok {
		return &ValidationError{Name: "delivery_cost", err: errors.New(`gen: missing required field "Order.delivery_cost"`)}
	}
	if _, ok := oc.mutation.MiscFee(); !ok {
		return &ValidationError{Name: "misc_fee", err: errors.New(`gen: missing required field "Order.misc_fee"`)}
	}
	if _, ok := oc.mutation.FuelFee(); !ok {
		return &ValidationError{Name: "fuel_fee", err: errors.New(`gen: missing required field "Order.fuel_fee"`)}
	}
	if _, ok := oc.mutation.RegistrationFee(); !ok {
		return &ValidationError{Name: "registration_fee", err: errors.New(`gen: missing required field "Order.registration_fee"`)}
	}
	if _, ok := oc.mutation.ProcessingFee(); !ok {
		return &ValidationError{Name: "processing_fee", err: errors.New(`gen: missing required field "Order.processing_fee"`)}
	}
	if _, ok := oc.mutation.PackageFee(); !ok {
		return &ValidationError{Name: "package_fee", err: errors.New(`gen: missing required field "Order.package_fee"`)}
	}
	if _, ok := oc.mutation.HandlingFee(); !ok {
		return &ValidationError{Name: "handling_fee", err: errors.New(`gen: missing required field "Order.handling_fee"`)}
	}
	if _, ok := oc.mutation.Vat(); !ok {
		return &ValidationError{Name: "vat", err: errors.New(`gen: missing required field "Order.vat"`)}
	}
	if _, ok := oc.mutation.EstimatedCost(); !ok {
		return &ValidationError{Name: "estimated_cost", err: errors.New(`gen: missing required field "Order.estimated_cost"`)}
	}
	if _, ok := oc.mutation.EstimatedCurrency(); !ok {
		return &ValidationError{Name: "estimated_currency", err: errors.New(`gen: missing required field "Order.estimated_currency"`)}
	}
	if _, ok := oc.mutation.ReceivablesAmount(); !ok {
		return &ValidationError{Name: "receivables_amount", err: errors.New(`gen: missing required field "Order.receivables_amount"`)}
	}
	if _, ok := oc.mutation.ReceivablesCurrency(); !ok {
		return &ValidationError{Name: "receivables_currency", err: errors.New(`gen: missing required field "Order.receivables_currency"`)}
	}
	if _, ok := oc.mutation.NotAcceptPlatformUpdate(); !ok {
		return &ValidationError{Name: "not_accept_platform_update", err: errors.New(`gen: missing required field "Order.not_accept_platform_update"`)}
	}
	if _, ok := oc.mutation.NotAcceptPlatformUpdateItem(); !ok {
		return &ValidationError{Name: "not_accept_platform_update_item", err: errors.New(`gen: missing required field "Order.not_accept_platform_update_item"`)}
	}
	if _, ok := oc.mutation.JdPushedStatus(); !ok {
		return &ValidationError{Name: "jd_pushed_status", err: errors.New(`gen: missing required field "Order.jd_pushed_status"`)}
	}
	if _, ok := oc.mutation.TenantID(); !ok {
		return &ValidationError{Name: "tenant", err: errors.New(`gen: missing required edge "Order.tenant"`)}
	}
	return nil
}

func (oc *OrderCreate) sqlSave(ctx context.Context) (*Order, error) {
	_node, _spec := oc.createSpec()
	if err := sqlgraph.CreateNode(ctx, oc.driver, _spec); err != nil {
		if sqlgraph.IsConstraintError(err) {
			err = &ConstraintError{msg: err.Error(), wrap: err}
		}
		return nil, err
	}
	if _spec.ID.Value != _node.ID {
		id := _spec.ID.Value.(int64)
		_node.ID = int64(id)
	}
	return _node, nil
}

func (oc *OrderCreate) createSpec() (*Order, *sqlgraph.CreateSpec) {
	var (
		_node = &Order{config: oc.config}
		_spec = &sqlgraph.CreateSpec{
			Table: order.Table,
			ID: &sqlgraph.FieldSpec{
				Type:   field.TypeInt64,
				Column: order.FieldID,
			},
		}
	)
	_spec.Schema = oc.schemaConfig.Order
	_spec.OnConflict = oc.conflict
	if id, ok := oc.mutation.ID(); ok {
		_node.ID = id
		_spec.ID.Value = id
	}
	if value, ok := oc.mutation.CreatedAt(); ok {
		_spec.SetField(order.FieldCreatedAt, field.TypeTime, value)
		_node.CreatedAt = value
	}
	if value, ok := oc.mutation.UpdatedAt(); ok {
		_spec.SetField(order.FieldUpdatedAt, field.TypeTime, value)
		_node.UpdatedAt = value
	}
	if value, ok := oc.mutation.DeletedAt(); ok {
		_spec.SetField(order.FieldDeletedAt, field.TypeTime, value)
		_node.DeletedAt = value
	}
	if value, ok := oc.mutation.OrderNumber(); ok {
		_spec.SetField(order.FieldOrderNumber, field.TypeString, value)
		_node.OrderNumber = value
	}
	if value, ok := oc.mutation.Mode(); ok {
		_spec.SetField(order.FieldMode, field.TypeInt8, value)
		_node.Mode = value
	}
	if value, ok := oc.mutation.GetType(); ok {
		_spec.SetField(order.FieldType, field.TypeInt8, value)
		_node.Type = value
	}
	if value, ok := oc.mutation.Offline(); ok {
		_spec.SetField(order.FieldOffline, field.TypeBool, value)
		_node.Offline = value
	}
	if value, ok := oc.mutation.CustomerCode(); ok {
		_spec.SetField(order.FieldCustomerCode, field.TypeString, value)
		_node.CustomerCode = value
	}
	if value, ok := oc.mutation.PrepayTariff(); ok {
		_spec.SetField(order.FieldPrepayTariff, field.TypeBool, value)
		_node.PrepayTariff = value
	}
	if value, ok := oc.mutation.IossNumber(); ok {
		_spec.SetField(order.FieldIossNumber, field.TypeString, value)
		_node.IossNumber = value
	}
	if value, ok := oc.mutation.IossCountryCode(); ok {
		_spec.SetField(order.FieldIossCountryCode, field.TypeString, value)
		_node.IossCountryCode = value
	}
	if value, ok := oc.mutation.IossNumberType(); ok {
		_spec.SetField(order.FieldIossNumberType, field.TypeInt8, value)
		_node.IossNumberType = value
	}
	if value, ok := oc.mutation.UkVatNumber(); ok {
		_spec.SetField(order.FieldUkVatNumber, field.TypeString, value)
		_node.UkVatNumber = value
	}
	if value, ok := oc.mutation.InboundOrderNumber(); ok {
		_spec.SetField(order.FieldInboundOrderNumber, field.TypeString, value)
		_node.InboundOrderNumber = value
	}
	if value, ok := oc.mutation.Status(); ok {
		_spec.SetField(order.FieldStatus, field.TypeInt8, value)
		_node.Status = value
	}
	if value, ok := oc.mutation.SqsStatus(); ok {
		_spec.SetField(order.FieldSqsStatus, field.TypeBool, value)
		_node.SqsStatus = value
	}
	if value, ok := oc.mutation.HoldStatus(); ok {
		_spec.SetField(order.FieldHoldStatus, field.TypeBool, value)
		_node.HoldStatus = value
	}
	if value, ok := oc.mutation.PaymentStatus(); ok {
		_spec.SetField(order.FieldPaymentStatus, field.TypeInt8, value)
		_node.PaymentStatus = value
	}
	if value, ok := oc.mutation.CancelRequest(); ok {
		_spec.SetField(order.FieldCancelRequest, field.TypeInt8, value)
		_node.CancelRequest = value
	}
	if value, ok := oc.mutation.Platform(); ok {
		_spec.SetField(order.FieldPlatform, field.TypeString, value)
		_node.Platform = value
	}
	if value, ok := oc.mutation.PlatformOrderID(); ok {
		_spec.SetField(order.FieldPlatformOrderID, field.TypeString, value)
		_node.PlatformOrderID = value
	}
	if value, ok := oc.mutation.PlatformOrderNo(); ok {
		_spec.SetField(order.FieldPlatformOrderNo, field.TypeString, value)
		_node.PlatformOrderNo = value
	}
	if value, ok := oc.mutation.PlatformOrderStatusURL(); ok {
		_spec.SetField(order.FieldPlatformOrderStatusURL, field.TypeString, value)
		_node.PlatformOrderStatusURL = value
	}
	if value, ok := oc.mutation.PlatformStatus(); ok {
		_spec.SetField(order.FieldPlatformStatus, field.TypeString, value)
		_node.PlatformStatus = value
	}
	if value, ok := oc.mutation.PaidStatus(); ok {
		_spec.SetField(order.FieldPaidStatus, field.TypeString, value)
		_node.PaidStatus = value
	}
	if value, ok := oc.mutation.FulfillmentPushed(); ok {
		_spec.SetField(order.FieldFulfillmentPushed, field.TypeBool, value)
		_node.FulfillmentPushed = value
	}
	if value, ok := oc.mutation.FulfillmentStatus(); ok {
		_spec.SetField(order.FieldFulfillmentStatus, field.TypeString, value)
		_node.FulfillmentStatus = value
	}
	if value, ok := oc.mutation.PlatformCreatedAt(); ok {
		_spec.SetField(order.FieldPlatformCreatedAt, field.TypeTime, value)
		_node.PlatformCreatedAt = &value
	}
	if value, ok := oc.mutation.LocationID(); ok {
		_spec.SetField(order.FieldLocationID, field.TypeString, value)
		_node.LocationID = value
	}
	if value, ok := oc.mutation.Tags(); ok {
		_spec.SetField(order.FieldTags, field.TypeString, value)
		_node.Tags = &value
	}
	if value, ok := oc.mutation.Note(); ok {
		_spec.SetField(order.FieldNote, field.TypeString, value)
		_node.Note = value
	}
	if value, ok := oc.mutation.CancelReason(); ok {
		_spec.SetField(order.FieldCancelReason, field.TypeString, value)
		_node.CancelReason = value
	}
	if value, ok := oc.mutation.CancelledAt(); ok {
		_spec.SetField(order.FieldCancelledAt, field.TypeTime, value)
		_node.CancelledAt = &value
	}
	if value, ok := oc.mutation.ClosedAt(); ok {
		_spec.SetField(order.FieldClosedAt, field.TypeTime, value)
		_node.ClosedAt = &value
	}
	if value, ok := oc.mutation.ContactEmail(); ok {
		_spec.SetField(order.FieldContactEmail, field.TypeString, value)
		_node.ContactEmail = value
	}
	if value, ok := oc.mutation.ContactPhone(); ok {
		_spec.SetField(order.FieldContactPhone, field.TypeString, value)
		_node.ContactPhone = value
	}
	if value, ok := oc.mutation.ShippingName(); ok {
		_spec.SetField(order.FieldShippingName, field.TypeString, value)
		_node.ShippingName = value
	}
	if value, ok := oc.mutation.ShippingFirstName(); ok {
		_spec.SetField(order.FieldShippingFirstName, field.TypeString, value)
		_node.ShippingFirstName = value
	}
	if value, ok := oc.mutation.ShippingLastName(); ok {
		_spec.SetField(order.FieldShippingLastName, field.TypeString, value)
		_node.ShippingLastName = value
	}
	if value, ok := oc.mutation.ShippingCompany(); ok {
		_spec.SetField(order.FieldShippingCompany, field.TypeString, value)
		_node.ShippingCompany = value
	}
	if value, ok := oc.mutation.ShippingCountry(); ok {
		_spec.SetField(order.FieldShippingCountry, field.TypeString, value)
		_node.ShippingCountry = value
	}
	if value, ok := oc.mutation.ShippingCountryCode(); ok {
		_spec.SetField(order.FieldShippingCountryCode, field.TypeString, value)
		_node.ShippingCountryCode = value
	}
	if value, ok := oc.mutation.ShippingProvince(); ok {
		_spec.SetField(order.FieldShippingProvince, field.TypeString, value)
		_node.ShippingProvince = value
	}
	if value, ok := oc.mutation.ShippingProvinceCode(); ok {
		_spec.SetField(order.FieldShippingProvinceCode, field.TypeString, value)
		_node.ShippingProvinceCode = value
	}
	if value, ok := oc.mutation.ShippingCity(); ok {
		_spec.SetField(order.FieldShippingCity, field.TypeString, value)
		_node.ShippingCity = value
	}
	if value, ok := oc.mutation.ShippingAddress1(); ok {
		_spec.SetField(order.FieldShippingAddress1, field.TypeString, value)
		_node.ShippingAddress1 = value
	}
	if value, ok := oc.mutation.ShippingAddress2(); ok {
		_spec.SetField(order.FieldShippingAddress2, field.TypeString, value)
		_node.ShippingAddress2 = value
	}
	if value, ok := oc.mutation.ShippingZipCode(); ok {
		_spec.SetField(order.FieldShippingZipCode, field.TypeString, value)
		_node.ShippingZipCode = value
	}
	if value, ok := oc.mutation.ShippingPhone(); ok {
		_spec.SetField(order.FieldShippingPhone, field.TypeString, value)
		_node.ShippingPhone = value
	}
	if value, ok := oc.mutation.ShippingCertificateType(); ok {
		_spec.SetField(order.FieldShippingCertificateType, field.TypeString, value)
		_node.ShippingCertificateType = value
	}
	if value, ok := oc.mutation.ShippingCertificateCode(); ok {
		_spec.SetField(order.FieldShippingCertificateCode, field.TypeString, value)
		_node.ShippingCertificateCode = value
	}
	if value, ok := oc.mutation.ShippingCredentialsPeriod(); ok {
		_spec.SetField(order.FieldShippingCredentialsPeriod, field.TypeString, value)
		_node.ShippingCredentialsPeriod = value
	}
	if value, ok := oc.mutation.Remark(); ok {
		_spec.SetField(order.FieldRemark, field.TypeString, value)
		_node.Remark = value
	}
	if value, ok := oc.mutation.PreferShippedType(); ok {
		_spec.SetField(order.FieldPreferShippedType, field.TypeInt8, value)
		_node.PreferShippedType = value
	}
	if value, ok := oc.mutation.PreferChannelID(); ok {
		_spec.SetField(order.FieldPreferChannelID, field.TypeInt64, value)
		_node.PreferChannelID = value
	}
	if value, ok := oc.mutation.ChannelOptions(); ok {
		_spec.SetField(order.FieldChannelOptions, field.TypeString, value)
		_node.ChannelOptions = value
	}
	if value, ok := oc.mutation.ChannelCostID(); ok {
		_spec.SetField(order.FieldChannelCostID, field.TypeInt64, value)
		_node.ChannelCostID = value
	}
	if value, ok := oc.mutation.ShipType(); ok {
		_spec.SetField(order.FieldShipType, field.TypeInt8, value)
		_node.ShipType = value
	}
	if value, ok := oc.mutation.TrackingCompany(); ok {
		_spec.SetField(order.FieldTrackingCompany, field.TypeString, value)
		_node.TrackingCompany = value
	}
	if value, ok := oc.mutation.TrackingNumber(); ok {
		_spec.SetField(order.FieldTrackingNumber, field.TypeString, value)
		_node.TrackingNumber = value
	}
	if value, ok := oc.mutation.TrackingURL(); ok {
		_spec.SetField(order.FieldTrackingURL, field.TypeString, value)
		_node.TrackingURL = value
	}
	if value, ok := oc.mutation.WaybillNumber(); ok {
		_spec.SetField(order.FieldWaybillNumber, field.TypeString, value)
		_node.WaybillNumber = value
	}
	if value, ok := oc.mutation.CourierOrderNumber(); ok {
		_spec.SetField(order.FieldCourierOrderNumber, field.TypeString, value)
		_node.CourierOrderNumber = value
	}
	if value, ok := oc.mutation.NssCourierOrderNumber(); ok {
		_spec.SetField(order.FieldNssCourierOrderNumber, field.TypeString, value)
		_node.NssCourierOrderNumber = value
	}
	if value, ok := oc.mutation.NssTrackingNumber(); ok {
		_spec.SetField(order.FieldNssTrackingNumber, field.TypeString, value)
		_node.NssTrackingNumber = value
	}
	if value, ok := oc.mutation.NssTrackingURL(); ok {
		_spec.SetField(order.FieldNssTrackingURL, field.TypeString, value)
		_node.NssTrackingURL = value
	}
	if value, ok := oc.mutation.ShippingLabelURL(); ok {
		_spec.SetField(order.FieldShippingLabelURL, field.TypeString, value)
		_node.ShippingLabelURL = value
	}
	if value, ok := oc.mutation.ShippingLabelPath(); ok {
		_spec.SetField(order.FieldShippingLabelPath, field.TypeString, value)
		_node.ShippingLabelPath = value
	}
	if value, ok := oc.mutation.LabelDataPath(); ok {
		_spec.SetField(order.FieldLabelDataPath, field.TypeString, value)
		_node.LabelDataPath = value
	}
	if value, ok := oc.mutation.PackageID(); ok {
		_spec.SetField(order.FieldPackageID, field.TypeString, value)
		_node.PackageID = value
	}
	if value, ok := oc.mutation.ShipDate(); ok {
		_spec.SetField(order.FieldShipDate, field.TypeTime, value)
		_node.ShipDate = &value
	}
	if value, ok := oc.mutation.RequestShippingAt(); ok {
		_spec.SetField(order.FieldRequestShippingAt, field.TypeTime, value)
		_node.RequestShippingAt = &value
	}
	if value, ok := oc.mutation.UnshelfRequestedTime(); ok {
		_spec.SetField(order.FieldUnshelfRequestedTime, field.TypeTime, value)
		_node.UnshelfRequestedTime = &value
	}
	if value, ok := oc.mutation.ContainerCode(); ok {
		_spec.SetField(order.FieldContainerCode, field.TypeString, value)
		_node.ContainerCode = value
	}
	if value, ok := oc.mutation.BasketNumber(); ok {
		_spec.SetField(order.FieldBasketNumber, field.TypeString, value)
		_node.BasketNumber = value
	}
	if value, ok := oc.mutation.PrintTimes(); ok {
		_spec.SetField(order.FieldPrintTimes, field.TypeInt, value)
		_node.PrintTimes = value
	}
	if value, ok := oc.mutation.SortingTrackingNumber(); ok {
		_spec.SetField(order.FieldSortingTrackingNumber, field.TypeString, value)
		_node.SortingTrackingNumber = value
	}
	if value, ok := oc.mutation.SortingPort(); ok {
		_spec.SetField(order.FieldSortingPort, field.TypeInt32, value)
		_node.SortingPort = value
	}
	if value, ok := oc.mutation.SortingLength(); ok {
		_spec.SetField(order.FieldSortingLength, field.TypeInt, value)
		_node.SortingLength = value
	}
	if value, ok := oc.mutation.SortingWidth(); ok {
		_spec.SetField(order.FieldSortingWidth, field.TypeInt, value)
		_node.SortingWidth = value
	}
	if value, ok := oc.mutation.SortingHeight(); ok {
		_spec.SetField(order.FieldSortingHeight, field.TypeInt, value)
		_node.SortingHeight = value
	}
	if value, ok := oc.mutation.SortingWeight(); ok {
		_spec.SetField(order.FieldSortingWeight, field.TypeInt, value)
		_node.SortingWeight = value
	}
	if value, ok := oc.mutation.EstimatedWeight(); ok {
		_spec.SetField(order.FieldEstimatedWeight, field.TypeInt, value)
		_node.EstimatedWeight = value
	}
	if value, ok := oc.mutation.CheckoutActualWeight(); ok {
		_spec.SetField(order.FieldCheckoutActualWeight, field.TypeInt, value)
		_node.CheckoutActualWeight = value
	}
	if value, ok := oc.mutation.VolumeWeight(); ok {
		_spec.SetField(order.FieldVolumeWeight, field.TypeInt, value)
		_node.VolumeWeight = value
	}
	if value, ok := oc.mutation.CourierWeight(); ok {
		_spec.SetField(order.FieldCourierWeight, field.TypeInt, value)
		_node.CourierWeight = value
	}
	if value, ok := oc.mutation.DeclaredValueInUsd(); ok {
		_spec.SetField(order.FieldDeclaredValueInUsd, field.TypeFloat64, value)
		_node.DeclaredValueInUsd = value
	}
	if value, ok := oc.mutation.DeclaredValueInEur(); ok {
		_spec.SetField(order.FieldDeclaredValueInEur, field.TypeFloat64, value)
		_node.DeclaredValueInEur = value
	}
	if value, ok := oc.mutation.TotalItemsPrice(); ok {
		_spec.SetField(order.FieldTotalItemsPrice, field.TypeFloat64, value)
		_node.TotalItemsPrice = value
	}
	if value, ok := oc.mutation.Currency(); ok {
		_spec.SetField(order.FieldCurrency, field.TypeString, value)
		_node.Currency = value
	}
	if value, ok := oc.mutation.DeliveryCost(); ok {
		_spec.SetField(order.FieldDeliveryCost, field.TypeFloat64, value)
		_node.DeliveryCost = value
	}
	if value, ok := oc.mutation.MiscFee(); ok {
		_spec.SetField(order.FieldMiscFee, field.TypeFloat64, value)
		_node.MiscFee = value
	}
	if value, ok := oc.mutation.FuelFee(); ok {
		_spec.SetField(order.FieldFuelFee, field.TypeFloat64, value)
		_node.FuelFee = value
	}
	if value, ok := oc.mutation.RegistrationFee(); ok {
		_spec.SetField(order.FieldRegistrationFee, field.TypeFloat64, value)
		_node.RegistrationFee = value
	}
	if value, ok := oc.mutation.ProcessingFee(); ok {
		_spec.SetField(order.FieldProcessingFee, field.TypeFloat64, value)
		_node.ProcessingFee = value
	}
	if value, ok := oc.mutation.PackageFee(); ok {
		_spec.SetField(order.FieldPackageFee, field.TypeFloat64, value)
		_node.PackageFee = value
	}
	if value, ok := oc.mutation.HandlingFee(); ok {
		_spec.SetField(order.FieldHandlingFee, field.TypeFloat64, value)
		_node.HandlingFee = value
	}
	if value, ok := oc.mutation.Vat(); ok {
		_spec.SetField(order.FieldVat, field.TypeFloat64, value)
		_node.Vat = value
	}
	if value, ok := oc.mutation.EstimatedCost(); ok {
		_spec.SetField(order.FieldEstimatedCost, field.TypeFloat64, value)
		_node.EstimatedCost = value
	}
	if value, ok := oc.mutation.EstimatedCurrency(); ok {
		_spec.SetField(order.FieldEstimatedCurrency, field.TypeString, value)
		_node.EstimatedCurrency = value
	}
	if value, ok := oc.mutation.ReceivablesAmount(); ok {
		_spec.SetField(order.FieldReceivablesAmount, field.TypeFloat64, value)
		_node.ReceivablesAmount = value
	}
	if value, ok := oc.mutation.ReceivablesCurrency(); ok {
		_spec.SetField(order.FieldReceivablesCurrency, field.TypeString, value)
		_node.ReceivablesCurrency = value
	}
	if value, ok := oc.mutation.NotAcceptPlatformUpdate(); ok {
		_spec.SetField(order.FieldNotAcceptPlatformUpdate, field.TypeBool, value)
		_node.NotAcceptPlatformUpdate = value
	}
	if value, ok := oc.mutation.NotAcceptPlatformUpdateItem(); ok {
		_spec.SetField(order.FieldNotAcceptPlatformUpdateItem, field.TypeBool, value)
		_node.NotAcceptPlatformUpdateItem = value
	}
	if value, ok := oc.mutation.JdPushedStatus(); ok {
		_spec.SetField(order.FieldJdPushedStatus, field.TypeString, value)
		_node.JdPushedStatus = value
	}
	if nodes := oc.mutation.TenantIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: false,
			Table:   order.TenantTable,
			Columns: []string{order.TenantColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt64,
					Column: tenant.FieldID,
				},
			},
		}
		edge.Schema = oc.schemaConfig.Order
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_node.order_tenant = &nodes[0]
		_spec.Edges = append(_spec.Edges, edge)
	}
	if nodes := oc.mutation.OrderItemsIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   order.OrderItemsTable,
			Columns: []string{order.OrderItemsColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt64,
					Column: orderitem.FieldID,
				},
			},
		}
		edge.Schema = oc.schemaConfig.OrderItem
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges = append(_spec.Edges, edge)
	}
	if nodes := oc.mutation.OrderHoldReasonsIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   order.OrderHoldReasonsTable,
			Columns: []string{order.OrderHoldReasonsColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt64,
					Column: orderholdreason.FieldID,
				},
			},
		}
		edge.Schema = oc.schemaConfig.OrderHoldReason
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges = append(_spec.Edges, edge)
	}
	if nodes := oc.mutation.OrderTaxationsIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   order.OrderTaxationsTable,
			Columns: []string{order.OrderTaxationsColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt64,
					Column: ordertaxation.FieldID,
				},
			},
		}
		edge.Schema = oc.schemaConfig.OrderTaxation
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges = append(_spec.Edges, edge)
	}
	if nodes := oc.mutation.StoresIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: true,
			Table:   order.StoresTable,
			Columns: []string{order.StoresColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt64,
					Column: store.FieldID,
				},
			},
		}
		edge.Schema = oc.schemaConfig.Order
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_node.StoreID = nodes[0]
		_spec.Edges = append(_spec.Edges, edge)
	}
	if nodes := oc.mutation.WarehousesIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: true,
			Table:   order.WarehousesTable,
			Columns: []string{order.WarehousesColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt64,
					Column: warehouse.FieldID,
				},
			},
		}
		edge.Schema = oc.schemaConfig.Order
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_node.WarehouseID = nodes[0]
		_spec.Edges = append(_spec.Edges, edge)
	}
	if nodes := oc.mutation.ChannelsIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2O,
			Inverse: true,
			Table:   order.ChannelsTable,
			Columns: []string{order.ChannelsColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt64,
					Column: channel.FieldID,
				},
			},
		}
		edge.Schema = oc.schemaConfig.Order
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_node.ChannelID = nodes[0]
		_spec.Edges = append(_spec.Edges, edge)
	}
	if nodes := oc.mutation.TrackMappingsIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2M,
			Inverse: false,
			Table:   order.TrackMappingsTable,
			Columns: []string{order.TrackMappingsColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: &sqlgraph.FieldSpec{
					Type:   field.TypeInt64,
					Column: trackmapping.FieldID,
				},
			},
		}
		edge.Schema = oc.schemaConfig.TrackMapping
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges = append(_spec.Edges, edge)
	}
	return _node, _spec
}

// OnConflict allows configuring the `ON CONFLICT` / `ON DUPLICATE KEY` clause
// of the `INSERT` statement. For example:
//
//	client.Order.Create().
//		SetCreatedAt(v).
//		OnConflict(
//			// Update the row with the new values
//			// the was proposed for insertion.
//			sql.ResolveWithNewValues(),
//		).
//		// Override some of the fields with custom
//		// update values.
//		Update(func(u *ent.OrderUpsert) {
//			SetCreatedAt(v+v).
//		}).
//		Exec(ctx)
func (oc *OrderCreate) OnConflict(opts ...sql.ConflictOption) *OrderUpsertOne {
	oc.conflict = opts
	return &OrderUpsertOne{
		create: oc,
	}
}

// OnConflictColumns calls `OnConflict` and configures the columns
// as conflict target. Using this option is equivalent to using:
//
//	client.Order.Create().
//		OnConflict(sql.ConflictColumns(columns...)).
//		Exec(ctx)
func (oc *OrderCreate) OnConflictColumns(columns ...string) *OrderUpsertOne {
	oc.conflict = append(oc.conflict, sql.ConflictColumns(columns...))
	return &OrderUpsertOne{
		create: oc,
	}
}

type (
	// OrderUpsertOne is the builder for "upsert"-ing
	//  one Order node.
	OrderUpsertOne struct {
		create *OrderCreate
	}

	// OrderUpsert is the "OnConflict" setter.
	OrderUpsert struct {
		*sql.UpdateSet
	}
)

// SetUpdatedAt sets the "updated_at" field.
func (u *OrderUpsert) SetUpdatedAt(v time.Time) *OrderUpsert {
	u.Set(order.FieldUpdatedAt, v)
	return u
}

// UpdateUpdatedAt sets the "updated_at" field to the value that was provided on create.
func (u *OrderUpsert) UpdateUpdatedAt() *OrderUpsert {
	u.SetExcluded(order.FieldUpdatedAt)
	return u
}

// SetDeletedAt sets the "deleted_at" field.
func (u *OrderUpsert) SetDeletedAt(v time.Time) *OrderUpsert {
	u.Set(order.FieldDeletedAt, v)
	return u
}

// UpdateDeletedAt sets the "deleted_at" field to the value that was provided on create.
func (u *OrderUpsert) UpdateDeletedAt() *OrderUpsert {
	u.SetExcluded(order.FieldDeletedAt)
	return u
}

// ClearDeletedAt clears the value of the "deleted_at" field.
func (u *OrderUpsert) ClearDeletedAt() *OrderUpsert {
	u.SetNull(order.FieldDeletedAt)
	return u
}

// SetOrderNumber sets the "order_number" field.
func (u *OrderUpsert) SetOrderNumber(v string) *OrderUpsert {
	u.Set(order.FieldOrderNumber, v)
	return u
}

// UpdateOrderNumber sets the "order_number" field to the value that was provided on create.
func (u *OrderUpsert) UpdateOrderNumber() *OrderUpsert {
	u.SetExcluded(order.FieldOrderNumber)
	return u
}

// SetMode sets the "mode" field.
func (u *OrderUpsert) SetMode(v int8) *OrderUpsert {
	u.Set(order.FieldMode, v)
	return u
}

// UpdateMode sets the "mode" field to the value that was provided on create.
func (u *OrderUpsert) UpdateMode() *OrderUpsert {
	u.SetExcluded(order.FieldMode)
	return u
}

// AddMode adds v to the "mode" field.
func (u *OrderUpsert) AddMode(v int8) *OrderUpsert {
	u.Add(order.FieldMode, v)
	return u
}

// SetType sets the "type" field.
func (u *OrderUpsert) SetType(v int8) *OrderUpsert {
	u.Set(order.FieldType, v)
	return u
}

// UpdateType sets the "type" field to the value that was provided on create.
func (u *OrderUpsert) UpdateType() *OrderUpsert {
	u.SetExcluded(order.FieldType)
	return u
}

// AddType adds v to the "type" field.
func (u *OrderUpsert) AddType(v int8) *OrderUpsert {
	u.Add(order.FieldType, v)
	return u
}

// SetOffline sets the "offline" field.
func (u *OrderUpsert) SetOffline(v bool) *OrderUpsert {
	u.Set(order.FieldOffline, v)
	return u
}

// UpdateOffline sets the "offline" field to the value that was provided on create.
func (u *OrderUpsert) UpdateOffline() *OrderUpsert {
	u.SetExcluded(order.FieldOffline)
	return u
}

// SetStoreID sets the "store_id" field.
func (u *OrderUpsert) SetStoreID(v int64) *OrderUpsert {
	u.Set(order.FieldStoreID, v)
	return u
}

// UpdateStoreID sets the "store_id" field to the value that was provided on create.
func (u *OrderUpsert) UpdateStoreID() *OrderUpsert {
	u.SetExcluded(order.FieldStoreID)
	return u
}

// ClearStoreID clears the value of the "store_id" field.
func (u *OrderUpsert) ClearStoreID() *OrderUpsert {
	u.SetNull(order.FieldStoreID)
	return u
}

// SetWarehouseID sets the "warehouse_id" field.
func (u *OrderUpsert) SetWarehouseID(v int64) *OrderUpsert {
	u.Set(order.FieldWarehouseID, v)
	return u
}

// UpdateWarehouseID sets the "warehouse_id" field to the value that was provided on create.
func (u *OrderUpsert) UpdateWarehouseID() *OrderUpsert {
	u.SetExcluded(order.FieldWarehouseID)
	return u
}

// ClearWarehouseID clears the value of the "warehouse_id" field.
func (u *OrderUpsert) ClearWarehouseID() *OrderUpsert {
	u.SetNull(order.FieldWarehouseID)
	return u
}

// SetCustomerCode sets the "customer_code" field.
func (u *OrderUpsert) SetCustomerCode(v string) *OrderUpsert {
	u.Set(order.FieldCustomerCode, v)
	return u
}

// UpdateCustomerCode sets the "customer_code" field to the value that was provided on create.
func (u *OrderUpsert) UpdateCustomerCode() *OrderUpsert {
	u.SetExcluded(order.FieldCustomerCode)
	return u
}

// SetPrepayTariff sets the "prepay_tariff" field.
func (u *OrderUpsert) SetPrepayTariff(v bool) *OrderUpsert {
	u.Set(order.FieldPrepayTariff, v)
	return u
}

// UpdatePrepayTariff sets the "prepay_tariff" field to the value that was provided on create.
func (u *OrderUpsert) UpdatePrepayTariff() *OrderUpsert {
	u.SetExcluded(order.FieldPrepayTariff)
	return u
}

// SetIossNumber sets the "ioss_number" field.
func (u *OrderUpsert) SetIossNumber(v string) *OrderUpsert {
	u.Set(order.FieldIossNumber, v)
	return u
}

// UpdateIossNumber sets the "ioss_number" field to the value that was provided on create.
func (u *OrderUpsert) UpdateIossNumber() *OrderUpsert {
	u.SetExcluded(order.FieldIossNumber)
	return u
}

// SetIossCountryCode sets the "ioss_country_code" field.
func (u *OrderUpsert) SetIossCountryCode(v string) *OrderUpsert {
	u.Set(order.FieldIossCountryCode, v)
	return u
}

// UpdateIossCountryCode sets the "ioss_country_code" field to the value that was provided on create.
func (u *OrderUpsert) UpdateIossCountryCode() *OrderUpsert {
	u.SetExcluded(order.FieldIossCountryCode)
	return u
}

// SetIossNumberType sets the "ioss_number_type" field.
func (u *OrderUpsert) SetIossNumberType(v int8) *OrderUpsert {
	u.Set(order.FieldIossNumberType, v)
	return u
}

// UpdateIossNumberType sets the "ioss_number_type" field to the value that was provided on create.
func (u *OrderUpsert) UpdateIossNumberType() *OrderUpsert {
	u.SetExcluded(order.FieldIossNumberType)
	return u
}

// AddIossNumberType adds v to the "ioss_number_type" field.
func (u *OrderUpsert) AddIossNumberType(v int8) *OrderUpsert {
	u.Add(order.FieldIossNumberType, v)
	return u
}

// SetUkVatNumber sets the "uk_vat_number" field.
func (u *OrderUpsert) SetUkVatNumber(v string) *OrderUpsert {
	u.Set(order.FieldUkVatNumber, v)
	return u
}

// UpdateUkVatNumber sets the "uk_vat_number" field to the value that was provided on create.
func (u *OrderUpsert) UpdateUkVatNumber() *OrderUpsert {
	u.SetExcluded(order.FieldUkVatNumber)
	return u
}

// SetInboundOrderNumber sets the "inbound_order_number" field.
func (u *OrderUpsert) SetInboundOrderNumber(v string) *OrderUpsert {
	u.Set(order.FieldInboundOrderNumber, v)
	return u
}

// UpdateInboundOrderNumber sets the "inbound_order_number" field to the value that was provided on create.
func (u *OrderUpsert) UpdateInboundOrderNumber() *OrderUpsert {
	u.SetExcluded(order.FieldInboundOrderNumber)
	return u
}

// SetStatus sets the "status" field.
func (u *OrderUpsert) SetStatus(v int8) *OrderUpsert {
	u.Set(order.FieldStatus, v)
	return u
}

// UpdateStatus sets the "status" field to the value that was provided on create.
func (u *OrderUpsert) UpdateStatus() *OrderUpsert {
	u.SetExcluded(order.FieldStatus)
	return u
}

// AddStatus adds v to the "status" field.
func (u *OrderUpsert) AddStatus(v int8) *OrderUpsert {
	u.Add(order.FieldStatus, v)
	return u
}

// SetSqsStatus sets the "sqs_status" field.
func (u *OrderUpsert) SetSqsStatus(v bool) *OrderUpsert {
	u.Set(order.FieldSqsStatus, v)
	return u
}

// UpdateSqsStatus sets the "sqs_status" field to the value that was provided on create.
func (u *OrderUpsert) UpdateSqsStatus() *OrderUpsert {
	u.SetExcluded(order.FieldSqsStatus)
	return u
}

// ClearSqsStatus clears the value of the "sqs_status" field.
func (u *OrderUpsert) ClearSqsStatus() *OrderUpsert {
	u.SetNull(order.FieldSqsStatus)
	return u
}

// SetHoldStatus sets the "hold_status" field.
func (u *OrderUpsert) SetHoldStatus(v bool) *OrderUpsert {
	u.Set(order.FieldHoldStatus, v)
	return u
}

// UpdateHoldStatus sets the "hold_status" field to the value that was provided on create.
func (u *OrderUpsert) UpdateHoldStatus() *OrderUpsert {
	u.SetExcluded(order.FieldHoldStatus)
	return u
}

// ClearHoldStatus clears the value of the "hold_status" field.
func (u *OrderUpsert) ClearHoldStatus() *OrderUpsert {
	u.SetNull(order.FieldHoldStatus)
	return u
}

// SetPaymentStatus sets the "payment_status" field.
func (u *OrderUpsert) SetPaymentStatus(v int8) *OrderUpsert {
	u.Set(order.FieldPaymentStatus, v)
	return u
}

// UpdatePaymentStatus sets the "payment_status" field to the value that was provided on create.
func (u *OrderUpsert) UpdatePaymentStatus() *OrderUpsert {
	u.SetExcluded(order.FieldPaymentStatus)
	return u
}

// AddPaymentStatus adds v to the "payment_status" field.
func (u *OrderUpsert) AddPaymentStatus(v int8) *OrderUpsert {
	u.Add(order.FieldPaymentStatus, v)
	return u
}

// ClearPaymentStatus clears the value of the "payment_status" field.
func (u *OrderUpsert) ClearPaymentStatus() *OrderUpsert {
	u.SetNull(order.FieldPaymentStatus)
	return u
}

// SetCancelRequest sets the "cancel_request" field.
func (u *OrderUpsert) SetCancelRequest(v int8) *OrderUpsert {
	u.Set(order.FieldCancelRequest, v)
	return u
}

// UpdateCancelRequest sets the "cancel_request" field to the value that was provided on create.
func (u *OrderUpsert) UpdateCancelRequest() *OrderUpsert {
	u.SetExcluded(order.FieldCancelRequest)
	return u
}

// AddCancelRequest adds v to the "cancel_request" field.
func (u *OrderUpsert) AddCancelRequest(v int8) *OrderUpsert {
	u.Add(order.FieldCancelRequest, v)
	return u
}

// ClearCancelRequest clears the value of the "cancel_request" field.
func (u *OrderUpsert) ClearCancelRequest() *OrderUpsert {
	u.SetNull(order.FieldCancelRequest)
	return u
}

// SetPlatform sets the "platform" field.
func (u *OrderUpsert) SetPlatform(v string) *OrderUpsert {
	u.Set(order.FieldPlatform, v)
	return u
}

// UpdatePlatform sets the "platform" field to the value that was provided on create.
func (u *OrderUpsert) UpdatePlatform() *OrderUpsert {
	u.SetExcluded(order.FieldPlatform)
	return u
}

// SetPlatformOrderID sets the "platform_order_id" field.
func (u *OrderUpsert) SetPlatformOrderID(v string) *OrderUpsert {
	u.Set(order.FieldPlatformOrderID, v)
	return u
}

// UpdatePlatformOrderID sets the "platform_order_id" field to the value that was provided on create.
func (u *OrderUpsert) UpdatePlatformOrderID() *OrderUpsert {
	u.SetExcluded(order.FieldPlatformOrderID)
	return u
}

// ClearPlatformOrderID clears the value of the "platform_order_id" field.
func (u *OrderUpsert) ClearPlatformOrderID() *OrderUpsert {
	u.SetNull(order.FieldPlatformOrderID)
	return u
}

// SetPlatformOrderNo sets the "platform_order_no" field.
func (u *OrderUpsert) SetPlatformOrderNo(v string) *OrderUpsert {
	u.Set(order.FieldPlatformOrderNo, v)
	return u
}

// UpdatePlatformOrderNo sets the "platform_order_no" field to the value that was provided on create.
func (u *OrderUpsert) UpdatePlatformOrderNo() *OrderUpsert {
	u.SetExcluded(order.FieldPlatformOrderNo)
	return u
}

// ClearPlatformOrderNo clears the value of the "platform_order_no" field.
func (u *OrderUpsert) ClearPlatformOrderNo() *OrderUpsert {
	u.SetNull(order.FieldPlatformOrderNo)
	return u
}

// SetPlatformOrderStatusURL sets the "platform_order_status_url" field.
func (u *OrderUpsert) SetPlatformOrderStatusURL(v string) *OrderUpsert {
	u.Set(order.FieldPlatformOrderStatusURL, v)
	return u
}

// UpdatePlatformOrderStatusURL sets the "platform_order_status_url" field to the value that was provided on create.
func (u *OrderUpsert) UpdatePlatformOrderStatusURL() *OrderUpsert {
	u.SetExcluded(order.FieldPlatformOrderStatusURL)
	return u
}

// ClearPlatformOrderStatusURL clears the value of the "platform_order_status_url" field.
func (u *OrderUpsert) ClearPlatformOrderStatusURL() *OrderUpsert {
	u.SetNull(order.FieldPlatformOrderStatusURL)
	return u
}

// SetPlatformStatus sets the "platform_status" field.
func (u *OrderUpsert) SetPlatformStatus(v string) *OrderUpsert {
	u.Set(order.FieldPlatformStatus, v)
	return u
}

// UpdatePlatformStatus sets the "platform_status" field to the value that was provided on create.
func (u *OrderUpsert) UpdatePlatformStatus() *OrderUpsert {
	u.SetExcluded(order.FieldPlatformStatus)
	return u
}

// ClearPlatformStatus clears the value of the "platform_status" field.
func (u *OrderUpsert) ClearPlatformStatus() *OrderUpsert {
	u.SetNull(order.FieldPlatformStatus)
	return u
}

// SetPaidStatus sets the "paid_status" field.
func (u *OrderUpsert) SetPaidStatus(v string) *OrderUpsert {
	u.Set(order.FieldPaidStatus, v)
	return u
}

// UpdatePaidStatus sets the "paid_status" field to the value that was provided on create.
func (u *OrderUpsert) UpdatePaidStatus() *OrderUpsert {
	u.SetExcluded(order.FieldPaidStatus)
	return u
}

// ClearPaidStatus clears the value of the "paid_status" field.
func (u *OrderUpsert) ClearPaidStatus() *OrderUpsert {
	u.SetNull(order.FieldPaidStatus)
	return u
}

// SetFulfillmentPushed sets the "fulfillment_pushed" field.
func (u *OrderUpsert) SetFulfillmentPushed(v bool) *OrderUpsert {
	u.Set(order.FieldFulfillmentPushed, v)
	return u
}

// UpdateFulfillmentPushed sets the "fulfillment_pushed" field to the value that was provided on create.
func (u *OrderUpsert) UpdateFulfillmentPushed() *OrderUpsert {
	u.SetExcluded(order.FieldFulfillmentPushed)
	return u
}

// ClearFulfillmentPushed clears the value of the "fulfillment_pushed" field.
func (u *OrderUpsert) ClearFulfillmentPushed() *OrderUpsert {
	u.SetNull(order.FieldFulfillmentPushed)
	return u
}

// SetFulfillmentStatus sets the "fulfillment_status" field.
func (u *OrderUpsert) SetFulfillmentStatus(v string) *OrderUpsert {
	u.Set(order.FieldFulfillmentStatus, v)
	return u
}

// UpdateFulfillmentStatus sets the "fulfillment_status" field to the value that was provided on create.
func (u *OrderUpsert) UpdateFulfillmentStatus() *OrderUpsert {
	u.SetExcluded(order.FieldFulfillmentStatus)
	return u
}

// ClearFulfillmentStatus clears the value of the "fulfillment_status" field.
func (u *OrderUpsert) ClearFulfillmentStatus() *OrderUpsert {
	u.SetNull(order.FieldFulfillmentStatus)
	return u
}

// SetPlatformCreatedAt sets the "platform_created_at" field.
func (u *OrderUpsert) SetPlatformCreatedAt(v time.Time) *OrderUpsert {
	u.Set(order.FieldPlatformCreatedAt, v)
	return u
}

// UpdatePlatformCreatedAt sets the "platform_created_at" field to the value that was provided on create.
func (u *OrderUpsert) UpdatePlatformCreatedAt() *OrderUpsert {
	u.SetExcluded(order.FieldPlatformCreatedAt)
	return u
}

// ClearPlatformCreatedAt clears the value of the "platform_created_at" field.
func (u *OrderUpsert) ClearPlatformCreatedAt() *OrderUpsert {
	u.SetNull(order.FieldPlatformCreatedAt)
	return u
}

// SetLocationID sets the "location_id" field.
func (u *OrderUpsert) SetLocationID(v string) *OrderUpsert {
	u.Set(order.FieldLocationID, v)
	return u
}

// UpdateLocationID sets the "location_id" field to the value that was provided on create.
func (u *OrderUpsert) UpdateLocationID() *OrderUpsert {
	u.SetExcluded(order.FieldLocationID)
	return u
}

// ClearLocationID clears the value of the "location_id" field.
func (u *OrderUpsert) ClearLocationID() *OrderUpsert {
	u.SetNull(order.FieldLocationID)
	return u
}

// SetTags sets the "tags" field.
func (u *OrderUpsert) SetTags(v string) *OrderUpsert {
	u.Set(order.FieldTags, v)
	return u
}

// UpdateTags sets the "tags" field to the value that was provided on create.
func (u *OrderUpsert) UpdateTags() *OrderUpsert {
	u.SetExcluded(order.FieldTags)
	return u
}

// ClearTags clears the value of the "tags" field.
func (u *OrderUpsert) ClearTags() *OrderUpsert {
	u.SetNull(order.FieldTags)
	return u
}

// SetNote sets the "note" field.
func (u *OrderUpsert) SetNote(v string) *OrderUpsert {
	u.Set(order.FieldNote, v)
	return u
}

// UpdateNote sets the "note" field to the value that was provided on create.
func (u *OrderUpsert) UpdateNote() *OrderUpsert {
	u.SetExcluded(order.FieldNote)
	return u
}

// ClearNote clears the value of the "note" field.
func (u *OrderUpsert) ClearNote() *OrderUpsert {
	u.SetNull(order.FieldNote)
	return u
}

// SetCancelReason sets the "cancel_reason" field.
func (u *OrderUpsert) SetCancelReason(v string) *OrderUpsert {
	u.Set(order.FieldCancelReason, v)
	return u
}

// UpdateCancelReason sets the "cancel_reason" field to the value that was provided on create.
func (u *OrderUpsert) UpdateCancelReason() *OrderUpsert {
	u.SetExcluded(order.FieldCancelReason)
	return u
}

// ClearCancelReason clears the value of the "cancel_reason" field.
func (u *OrderUpsert) ClearCancelReason() *OrderUpsert {
	u.SetNull(order.FieldCancelReason)
	return u
}

// SetCancelledAt sets the "cancelled_at" field.
func (u *OrderUpsert) SetCancelledAt(v time.Time) *OrderUpsert {
	u.Set(order.FieldCancelledAt, v)
	return u
}

// UpdateCancelledAt sets the "cancelled_at" field to the value that was provided on create.
func (u *OrderUpsert) UpdateCancelledAt() *OrderUpsert {
	u.SetExcluded(order.FieldCancelledAt)
	return u
}

// ClearCancelledAt clears the value of the "cancelled_at" field.
func (u *OrderUpsert) ClearCancelledAt() *OrderUpsert {
	u.SetNull(order.FieldCancelledAt)
	return u
}

// SetClosedAt sets the "closed_at" field.
func (u *OrderUpsert) SetClosedAt(v time.Time) *OrderUpsert {
	u.Set(order.FieldClosedAt, v)
	return u
}

// UpdateClosedAt sets the "closed_at" field to the value that was provided on create.
func (u *OrderUpsert) UpdateClosedAt() *OrderUpsert {
	u.SetExcluded(order.FieldClosedAt)
	return u
}

// ClearClosedAt clears the value of the "closed_at" field.
func (u *OrderUpsert) ClearClosedAt() *OrderUpsert {
	u.SetNull(order.FieldClosedAt)
	return u
}

// SetContactEmail sets the "contact_email" field.
func (u *OrderUpsert) SetContactEmail(v string) *OrderUpsert {
	u.Set(order.FieldContactEmail, v)
	return u
}

// UpdateContactEmail sets the "contact_email" field to the value that was provided on create.
func (u *OrderUpsert) UpdateContactEmail() *OrderUpsert {
	u.SetExcluded(order.FieldContactEmail)
	return u
}

// SetContactPhone sets the "contact_phone" field.
func (u *OrderUpsert) SetContactPhone(v string) *OrderUpsert {
	u.Set(order.FieldContactPhone, v)
	return u
}

// UpdateContactPhone sets the "contact_phone" field to the value that was provided on create.
func (u *OrderUpsert) UpdateContactPhone() *OrderUpsert {
	u.SetExcluded(order.FieldContactPhone)
	return u
}

// SetShippingName sets the "shipping_name" field.
func (u *OrderUpsert) SetShippingName(v string) *OrderUpsert {
	u.Set(order.FieldShippingName, v)
	return u
}

// UpdateShippingName sets the "shipping_name" field to the value that was provided on create.
func (u *OrderUpsert) UpdateShippingName() *OrderUpsert {
	u.SetExcluded(order.FieldShippingName)
	return u
}

// SetShippingFirstName sets the "shipping_first_name" field.
func (u *OrderUpsert) SetShippingFirstName(v string) *OrderUpsert {
	u.Set(order.FieldShippingFirstName, v)
	return u
}

// UpdateShippingFirstName sets the "shipping_first_name" field to the value that was provided on create.
func (u *OrderUpsert) UpdateShippingFirstName() *OrderUpsert {
	u.SetExcluded(order.FieldShippingFirstName)
	return u
}

// SetShippingLastName sets the "shipping_last_name" field.
func (u *OrderUpsert) SetShippingLastName(v string) *OrderUpsert {
	u.Set(order.FieldShippingLastName, v)
	return u
}

// UpdateShippingLastName sets the "shipping_last_name" field to the value that was provided on create.
func (u *OrderUpsert) UpdateShippingLastName() *OrderUpsert {
	u.SetExcluded(order.FieldShippingLastName)
	return u
}

// SetShippingCompany sets the "shipping_company" field.
func (u *OrderUpsert) SetShippingCompany(v string) *OrderUpsert {
	u.Set(order.FieldShippingCompany, v)
	return u
}

// UpdateShippingCompany sets the "shipping_company" field to the value that was provided on create.
func (u *OrderUpsert) UpdateShippingCompany() *OrderUpsert {
	u.SetExcluded(order.FieldShippingCompany)
	return u
}

// SetShippingCountry sets the "shipping_country" field.
func (u *OrderUpsert) SetShippingCountry(v string) *OrderUpsert {
	u.Set(order.FieldShippingCountry, v)
	return u
}

// UpdateShippingCountry sets the "shipping_country" field to the value that was provided on create.
func (u *OrderUpsert) UpdateShippingCountry() *OrderUpsert {
	u.SetExcluded(order.FieldShippingCountry)
	return u
}

// SetShippingCountryCode sets the "shipping_country_code" field.
func (u *OrderUpsert) SetShippingCountryCode(v string) *OrderUpsert {
	u.Set(order.FieldShippingCountryCode, v)
	return u
}

// UpdateShippingCountryCode sets the "shipping_country_code" field to the value that was provided on create.
func (u *OrderUpsert) UpdateShippingCountryCode() *OrderUpsert {
	u.SetExcluded(order.FieldShippingCountryCode)
	return u
}

// SetShippingProvince sets the "shipping_province" field.
func (u *OrderUpsert) SetShippingProvince(v string) *OrderUpsert {
	u.Set(order.FieldShippingProvince, v)
	return u
}

// UpdateShippingProvince sets the "shipping_province" field to the value that was provided on create.
func (u *OrderUpsert) UpdateShippingProvince() *OrderUpsert {
	u.SetExcluded(order.FieldShippingProvince)
	return u
}

// SetShippingProvinceCode sets the "shipping_province_code" field.
func (u *OrderUpsert) SetShippingProvinceCode(v string) *OrderUpsert {
	u.Set(order.FieldShippingProvinceCode, v)
	return u
}

// UpdateShippingProvinceCode sets the "shipping_province_code" field to the value that was provided on create.
func (u *OrderUpsert) UpdateShippingProvinceCode() *OrderUpsert {
	u.SetExcluded(order.FieldShippingProvinceCode)
	return u
}

// SetShippingCity sets the "shipping_city" field.
func (u *OrderUpsert) SetShippingCity(v string) *OrderUpsert {
	u.Set(order.FieldShippingCity, v)
	return u
}

// UpdateShippingCity sets the "shipping_city" field to the value that was provided on create.
func (u *OrderUpsert) UpdateShippingCity() *OrderUpsert {
	u.SetExcluded(order.FieldShippingCity)
	return u
}

// SetShippingAddress1 sets the "shipping_address1" field.
func (u *OrderUpsert) SetShippingAddress1(v string) *OrderUpsert {
	u.Set(order.FieldShippingAddress1, v)
	return u
}

// UpdateShippingAddress1 sets the "shipping_address1" field to the value that was provided on create.
func (u *OrderUpsert) UpdateShippingAddress1() *OrderUpsert {
	u.SetExcluded(order.FieldShippingAddress1)
	return u
}

// SetShippingAddress2 sets the "shipping_address2" field.
func (u *OrderUpsert) SetShippingAddress2(v string) *OrderUpsert {
	u.Set(order.FieldShippingAddress2, v)
	return u
}

// UpdateShippingAddress2 sets the "shipping_address2" field to the value that was provided on create.
func (u *OrderUpsert) UpdateShippingAddress2() *OrderUpsert {
	u.SetExcluded(order.FieldShippingAddress2)
	return u
}

// SetShippingZipCode sets the "shipping_zip_code" field.
func (u *OrderUpsert) SetShippingZipCode(v string) *OrderUpsert {
	u.Set(order.FieldShippingZipCode, v)
	return u
}

// UpdateShippingZipCode sets the "shipping_zip_code" field to the value that was provided on create.
func (u *OrderUpsert) UpdateShippingZipCode() *OrderUpsert {
	u.SetExcluded(order.FieldShippingZipCode)
	return u
}

// SetShippingPhone sets the "shipping_phone" field.
func (u *OrderUpsert) SetShippingPhone(v string) *OrderUpsert {
	u.Set(order.FieldShippingPhone, v)
	return u
}

// UpdateShippingPhone sets the "shipping_phone" field to the value that was provided on create.
func (u *OrderUpsert) UpdateShippingPhone() *OrderUpsert {
	u.SetExcluded(order.FieldShippingPhone)
	return u
}

// SetShippingCertificateType sets the "shipping_certificate_type" field.
func (u *OrderUpsert) SetShippingCertificateType(v string) *OrderUpsert {
	u.Set(order.FieldShippingCertificateType, v)
	return u
}

// UpdateShippingCertificateType sets the "shipping_certificate_type" field to the value that was provided on create.
func (u *OrderUpsert) UpdateShippingCertificateType() *OrderUpsert {
	u.SetExcluded(order.FieldShippingCertificateType)
	return u
}

// ClearShippingCertificateType clears the value of the "shipping_certificate_type" field.
func (u *OrderUpsert) ClearShippingCertificateType() *OrderUpsert {
	u.SetNull(order.FieldShippingCertificateType)
	return u
}

// SetShippingCertificateCode sets the "shipping_certificate_code" field.
func (u *OrderUpsert) SetShippingCertificateCode(v string) *OrderUpsert {
	u.Set(order.FieldShippingCertificateCode, v)
	return u
}

// UpdateShippingCertificateCode sets the "shipping_certificate_code" field to the value that was provided on create.
func (u *OrderUpsert) UpdateShippingCertificateCode() *OrderUpsert {
	u.SetExcluded(order.FieldShippingCertificateCode)
	return u
}

// ClearShippingCertificateCode clears the value of the "shipping_certificate_code" field.
func (u *OrderUpsert) ClearShippingCertificateCode() *OrderUpsert {
	u.SetNull(order.FieldShippingCertificateCode)
	return u
}

// SetShippingCredentialsPeriod sets the "shipping_credentials_period" field.
func (u *OrderUpsert) SetShippingCredentialsPeriod(v string) *OrderUpsert {
	u.Set(order.FieldShippingCredentialsPeriod, v)
	return u
}

// UpdateShippingCredentialsPeriod sets the "shipping_credentials_period" field to the value that was provided on create.
func (u *OrderUpsert) UpdateShippingCredentialsPeriod() *OrderUpsert {
	u.SetExcluded(order.FieldShippingCredentialsPeriod)
	return u
}

// ClearShippingCredentialsPeriod clears the value of the "shipping_credentials_period" field.
func (u *OrderUpsert) ClearShippingCredentialsPeriod() *OrderUpsert {
	u.SetNull(order.FieldShippingCredentialsPeriod)
	return u
}

// SetRemark sets the "remark" field.
func (u *OrderUpsert) SetRemark(v string) *OrderUpsert {
	u.Set(order.FieldRemark, v)
	return u
}

// UpdateRemark sets the "remark" field to the value that was provided on create.
func (u *OrderUpsert) UpdateRemark() *OrderUpsert {
	u.SetExcluded(order.FieldRemark)
	return u
}

// ClearRemark clears the value of the "remark" field.
func (u *OrderUpsert) ClearRemark() *OrderUpsert {
	u.SetNull(order.FieldRemark)
	return u
}

// SetPreferShippedType sets the "prefer_shipped_type" field.
func (u *OrderUpsert) SetPreferShippedType(v int8) *OrderUpsert {
	u.Set(order.FieldPreferShippedType, v)
	return u
}

// UpdatePreferShippedType sets the "prefer_shipped_type" field to the value that was provided on create.
func (u *OrderUpsert) UpdatePreferShippedType() *OrderUpsert {
	u.SetExcluded(order.FieldPreferShippedType)
	return u
}

// AddPreferShippedType adds v to the "prefer_shipped_type" field.
func (u *OrderUpsert) AddPreferShippedType(v int8) *OrderUpsert {
	u.Add(order.FieldPreferShippedType, v)
	return u
}

// ClearPreferShippedType clears the value of the "prefer_shipped_type" field.
func (u *OrderUpsert) ClearPreferShippedType() *OrderUpsert {
	u.SetNull(order.FieldPreferShippedType)
	return u
}

// SetPreferChannelID sets the "prefer_channel_id" field.
func (u *OrderUpsert) SetPreferChannelID(v int64) *OrderUpsert {
	u.Set(order.FieldPreferChannelID, v)
	return u
}

// UpdatePreferChannelID sets the "prefer_channel_id" field to the value that was provided on create.
func (u *OrderUpsert) UpdatePreferChannelID() *OrderUpsert {
	u.SetExcluded(order.FieldPreferChannelID)
	return u
}

// AddPreferChannelID adds v to the "prefer_channel_id" field.
func (u *OrderUpsert) AddPreferChannelID(v int64) *OrderUpsert {
	u.Add(order.FieldPreferChannelID, v)
	return u
}

// ClearPreferChannelID clears the value of the "prefer_channel_id" field.
func (u *OrderUpsert) ClearPreferChannelID() *OrderUpsert {
	u.SetNull(order.FieldPreferChannelID)
	return u
}

// SetChannelOptions sets the "channel_options" field.
func (u *OrderUpsert) SetChannelOptions(v string) *OrderUpsert {
	u.Set(order.FieldChannelOptions, v)
	return u
}

// UpdateChannelOptions sets the "channel_options" field to the value that was provided on create.
func (u *OrderUpsert) UpdateChannelOptions() *OrderUpsert {
	u.SetExcluded(order.FieldChannelOptions)
	return u
}

// ClearChannelOptions clears the value of the "channel_options" field.
func (u *OrderUpsert) ClearChannelOptions() *OrderUpsert {
	u.SetNull(order.FieldChannelOptions)
	return u
}

// SetChannelID sets the "channel_id" field.
func (u *OrderUpsert) SetChannelID(v int64) *OrderUpsert {
	u.Set(order.FieldChannelID, v)
	return u
}

// UpdateChannelID sets the "channel_id" field to the value that was provided on create.
func (u *OrderUpsert) UpdateChannelID() *OrderUpsert {
	u.SetExcluded(order.FieldChannelID)
	return u
}

// ClearChannelID clears the value of the "channel_id" field.
func (u *OrderUpsert) ClearChannelID() *OrderUpsert {
	u.SetNull(order.FieldChannelID)
	return u
}

// SetChannelCostID sets the "channel_cost_id" field.
func (u *OrderUpsert) SetChannelCostID(v int64) *OrderUpsert {
	u.Set(order.FieldChannelCostID, v)
	return u
}

// UpdateChannelCostID sets the "channel_cost_id" field to the value that was provided on create.
func (u *OrderUpsert) UpdateChannelCostID() *OrderUpsert {
	u.SetExcluded(order.FieldChannelCostID)
	return u
}

// AddChannelCostID adds v to the "channel_cost_id" field.
func (u *OrderUpsert) AddChannelCostID(v int64) *OrderUpsert {
	u.Add(order.FieldChannelCostID, v)
	return u
}

// ClearChannelCostID clears the value of the "channel_cost_id" field.
func (u *OrderUpsert) ClearChannelCostID() *OrderUpsert {
	u.SetNull(order.FieldChannelCostID)
	return u
}

// SetShipType sets the "ship_type" field.
func (u *OrderUpsert) SetShipType(v int8) *OrderUpsert {
	u.Set(order.FieldShipType, v)
	return u
}

// UpdateShipType sets the "ship_type" field to the value that was provided on create.
func (u *OrderUpsert) UpdateShipType() *OrderUpsert {
	u.SetExcluded(order.FieldShipType)
	return u
}

// AddShipType adds v to the "ship_type" field.
func (u *OrderUpsert) AddShipType(v int8) *OrderUpsert {
	u.Add(order.FieldShipType, v)
	return u
}

// ClearShipType clears the value of the "ship_type" field.
func (u *OrderUpsert) ClearShipType() *OrderUpsert {
	u.SetNull(order.FieldShipType)
	return u
}

// SetTrackingCompany sets the "tracking_company" field.
func (u *OrderUpsert) SetTrackingCompany(v string) *OrderUpsert {
	u.Set(order.FieldTrackingCompany, v)
	return u
}

// UpdateTrackingCompany sets the "tracking_company" field to the value that was provided on create.
func (u *OrderUpsert) UpdateTrackingCompany() *OrderUpsert {
	u.SetExcluded(order.FieldTrackingCompany)
	return u
}

// ClearTrackingCompany clears the value of the "tracking_company" field.
func (u *OrderUpsert) ClearTrackingCompany() *OrderUpsert {
	u.SetNull(order.FieldTrackingCompany)
	return u
}

// SetTrackingNumber sets the "tracking_number" field.
func (u *OrderUpsert) SetTrackingNumber(v string) *OrderUpsert {
	u.Set(order.FieldTrackingNumber, v)
	return u
}

// UpdateTrackingNumber sets the "tracking_number" field to the value that was provided on create.
func (u *OrderUpsert) UpdateTrackingNumber() *OrderUpsert {
	u.SetExcluded(order.FieldTrackingNumber)
	return u
}

// ClearTrackingNumber clears the value of the "tracking_number" field.
func (u *OrderUpsert) ClearTrackingNumber() *OrderUpsert {
	u.SetNull(order.FieldTrackingNumber)
	return u
}

// SetTrackingURL sets the "tracking_url" field.
func (u *OrderUpsert) SetTrackingURL(v string) *OrderUpsert {
	u.Set(order.FieldTrackingURL, v)
	return u
}

// UpdateTrackingURL sets the "tracking_url" field to the value that was provided on create.
func (u *OrderUpsert) UpdateTrackingURL() *OrderUpsert {
	u.SetExcluded(order.FieldTrackingURL)
	return u
}

// ClearTrackingURL clears the value of the "tracking_url" field.
func (u *OrderUpsert) ClearTrackingURL() *OrderUpsert {
	u.SetNull(order.FieldTrackingURL)
	return u
}

// SetWaybillNumber sets the "waybill_number" field.
func (u *OrderUpsert) SetWaybillNumber(v string) *OrderUpsert {
	u.Set(order.FieldWaybillNumber, v)
	return u
}

// UpdateWaybillNumber sets the "waybill_number" field to the value that was provided on create.
func (u *OrderUpsert) UpdateWaybillNumber() *OrderUpsert {
	u.SetExcluded(order.FieldWaybillNumber)
	return u
}

// ClearWaybillNumber clears the value of the "waybill_number" field.
func (u *OrderUpsert) ClearWaybillNumber() *OrderUpsert {
	u.SetNull(order.FieldWaybillNumber)
	return u
}

// SetCourierOrderNumber sets the "courier_order_number" field.
func (u *OrderUpsert) SetCourierOrderNumber(v string) *OrderUpsert {
	u.Set(order.FieldCourierOrderNumber, v)
	return u
}

// UpdateCourierOrderNumber sets the "courier_order_number" field to the value that was provided on create.
func (u *OrderUpsert) UpdateCourierOrderNumber() *OrderUpsert {
	u.SetExcluded(order.FieldCourierOrderNumber)
	return u
}

// ClearCourierOrderNumber clears the value of the "courier_order_number" field.
func (u *OrderUpsert) ClearCourierOrderNumber() *OrderUpsert {
	u.SetNull(order.FieldCourierOrderNumber)
	return u
}

// SetNssCourierOrderNumber sets the "nss_courier_order_number" field.
func (u *OrderUpsert) SetNssCourierOrderNumber(v string) *OrderUpsert {
	u.Set(order.FieldNssCourierOrderNumber, v)
	return u
}

// UpdateNssCourierOrderNumber sets the "nss_courier_order_number" field to the value that was provided on create.
func (u *OrderUpsert) UpdateNssCourierOrderNumber() *OrderUpsert {
	u.SetExcluded(order.FieldNssCourierOrderNumber)
	return u
}

// ClearNssCourierOrderNumber clears the value of the "nss_courier_order_number" field.
func (u *OrderUpsert) ClearNssCourierOrderNumber() *OrderUpsert {
	u.SetNull(order.FieldNssCourierOrderNumber)
	return u
}

// SetNssTrackingNumber sets the "nss_tracking_number" field.
func (u *OrderUpsert) SetNssTrackingNumber(v string) *OrderUpsert {
	u.Set(order.FieldNssTrackingNumber, v)
	return u
}

// UpdateNssTrackingNumber sets the "nss_tracking_number" field to the value that was provided on create.
func (u *OrderUpsert) UpdateNssTrackingNumber() *OrderUpsert {
	u.SetExcluded(order.FieldNssTrackingNumber)
	return u
}

// ClearNssTrackingNumber clears the value of the "nss_tracking_number" field.
func (u *OrderUpsert) ClearNssTrackingNumber() *OrderUpsert {
	u.SetNull(order.FieldNssTrackingNumber)
	return u
}

// SetNssTrackingURL sets the "nss_tracking_url" field.
func (u *OrderUpsert) SetNssTrackingURL(v string) *OrderUpsert {
	u.Set(order.FieldNssTrackingURL, v)
	return u
}

// UpdateNssTrackingURL sets the "nss_tracking_url" field to the value that was provided on create.
func (u *OrderUpsert) UpdateNssTrackingURL() *OrderUpsert {
	u.SetExcluded(order.FieldNssTrackingURL)
	return u
}

// ClearNssTrackingURL clears the value of the "nss_tracking_url" field.
func (u *OrderUpsert) ClearNssTrackingURL() *OrderUpsert {
	u.SetNull(order.FieldNssTrackingURL)
	return u
}

// SetShippingLabelURL sets the "shipping_label_url" field.
func (u *OrderUpsert) SetShippingLabelURL(v string) *OrderUpsert {
	u.Set(order.FieldShippingLabelURL, v)
	return u
}

// UpdateShippingLabelURL sets the "shipping_label_url" field to the value that was provided on create.
func (u *OrderUpsert) UpdateShippingLabelURL() *OrderUpsert {
	u.SetExcluded(order.FieldShippingLabelURL)
	return u
}

// ClearShippingLabelURL clears the value of the "shipping_label_url" field.
func (u *OrderUpsert) ClearShippingLabelURL() *OrderUpsert {
	u.SetNull(order.FieldShippingLabelURL)
	return u
}

// SetShippingLabelPath sets the "shipping_label_path" field.
func (u *OrderUpsert) SetShippingLabelPath(v string) *OrderUpsert {
	u.Set(order.FieldShippingLabelPath, v)
	return u
}

// UpdateShippingLabelPath sets the "shipping_label_path" field to the value that was provided on create.
func (u *OrderUpsert) UpdateShippingLabelPath() *OrderUpsert {
	u.SetExcluded(order.FieldShippingLabelPath)
	return u
}

// ClearShippingLabelPath clears the value of the "shipping_label_path" field.
func (u *OrderUpsert) ClearShippingLabelPath() *OrderUpsert {
	u.SetNull(order.FieldShippingLabelPath)
	return u
}

// SetLabelDataPath sets the "label_data_path" field.
func (u *OrderUpsert) SetLabelDataPath(v string) *OrderUpsert {
	u.Set(order.FieldLabelDataPath, v)
	return u
}

// UpdateLabelDataPath sets the "label_data_path" field to the value that was provided on create.
func (u *OrderUpsert) UpdateLabelDataPath() *OrderUpsert {
	u.SetExcluded(order.FieldLabelDataPath)
	return u
}

// ClearLabelDataPath clears the value of the "label_data_path" field.
func (u *OrderUpsert) ClearLabelDataPath() *OrderUpsert {
	u.SetNull(order.FieldLabelDataPath)
	return u
}

// SetPackageID sets the "package_id" field.
func (u *OrderUpsert) SetPackageID(v string) *OrderUpsert {
	u.Set(order.FieldPackageID, v)
	return u
}

// UpdatePackageID sets the "package_id" field to the value that was provided on create.
func (u *OrderUpsert) UpdatePackageID() *OrderUpsert {
	u.SetExcluded(order.FieldPackageID)
	return u
}

// ClearPackageID clears the value of the "package_id" field.
func (u *OrderUpsert) ClearPackageID() *OrderUpsert {
	u.SetNull(order.FieldPackageID)
	return u
}

// SetShipDate sets the "ship_date" field.
func (u *OrderUpsert) SetShipDate(v time.Time) *OrderUpsert {
	u.Set(order.FieldShipDate, v)
	return u
}

// UpdateShipDate sets the "ship_date" field to the value that was provided on create.
func (u *OrderUpsert) UpdateShipDate() *OrderUpsert {
	u.SetExcluded(order.FieldShipDate)
	return u
}

// ClearShipDate clears the value of the "ship_date" field.
func (u *OrderUpsert) ClearShipDate() *OrderUpsert {
	u.SetNull(order.FieldShipDate)
	return u
}

// SetRequestShippingAt sets the "request_shipping_at" field.
func (u *OrderUpsert) SetRequestShippingAt(v time.Time) *OrderUpsert {
	u.Set(order.FieldRequestShippingAt, v)
	return u
}

// UpdateRequestShippingAt sets the "request_shipping_at" field to the value that was provided on create.
func (u *OrderUpsert) UpdateRequestShippingAt() *OrderUpsert {
	u.SetExcluded(order.FieldRequestShippingAt)
	return u
}

// ClearRequestShippingAt clears the value of the "request_shipping_at" field.
func (u *OrderUpsert) ClearRequestShippingAt() *OrderUpsert {
	u.SetNull(order.FieldRequestShippingAt)
	return u
}

// SetUnshelfRequestedTime sets the "unshelf_requested_time" field.
func (u *OrderUpsert) SetUnshelfRequestedTime(v time.Time) *OrderUpsert {
	u.Set(order.FieldUnshelfRequestedTime, v)
	return u
}

// UpdateUnshelfRequestedTime sets the "unshelf_requested_time" field to the value that was provided on create.
func (u *OrderUpsert) UpdateUnshelfRequestedTime() *OrderUpsert {
	u.SetExcluded(order.FieldUnshelfRequestedTime)
	return u
}

// ClearUnshelfRequestedTime clears the value of the "unshelf_requested_time" field.
func (u *OrderUpsert) ClearUnshelfRequestedTime() *OrderUpsert {
	u.SetNull(order.FieldUnshelfRequestedTime)
	return u
}

// SetContainerCode sets the "container_code" field.
func (u *OrderUpsert) SetContainerCode(v string) *OrderUpsert {
	u.Set(order.FieldContainerCode, v)
	return u
}

// UpdateContainerCode sets the "container_code" field to the value that was provided on create.
func (u *OrderUpsert) UpdateContainerCode() *OrderUpsert {
	u.SetExcluded(order.FieldContainerCode)
	return u
}

// ClearContainerCode clears the value of the "container_code" field.
func (u *OrderUpsert) ClearContainerCode() *OrderUpsert {
	u.SetNull(order.FieldContainerCode)
	return u
}

// SetBasketNumber sets the "basket_number" field.
func (u *OrderUpsert) SetBasketNumber(v string) *OrderUpsert {
	u.Set(order.FieldBasketNumber, v)
	return u
}

// UpdateBasketNumber sets the "basket_number" field to the value that was provided on create.
func (u *OrderUpsert) UpdateBasketNumber() *OrderUpsert {
	u.SetExcluded(order.FieldBasketNumber)
	return u
}

// ClearBasketNumber clears the value of the "basket_number" field.
func (u *OrderUpsert) ClearBasketNumber() *OrderUpsert {
	u.SetNull(order.FieldBasketNumber)
	return u
}

// SetPrintTimes sets the "print_times" field.
func (u *OrderUpsert) SetPrintTimes(v int) *OrderUpsert {
	u.Set(order.FieldPrintTimes, v)
	return u
}

// UpdatePrintTimes sets the "print_times" field to the value that was provided on create.
func (u *OrderUpsert) UpdatePrintTimes() *OrderUpsert {
	u.SetExcluded(order.FieldPrintTimes)
	return u
}

// AddPrintTimes adds v to the "print_times" field.
func (u *OrderUpsert) AddPrintTimes(v int) *OrderUpsert {
	u.Add(order.FieldPrintTimes, v)
	return u
}

// ClearPrintTimes clears the value of the "print_times" field.
func (u *OrderUpsert) ClearPrintTimes() *OrderUpsert {
	u.SetNull(order.FieldPrintTimes)
	return u
}

// SetSortingTrackingNumber sets the "sorting_tracking_number" field.
func (u *OrderUpsert) SetSortingTrackingNumber(v string) *OrderUpsert {
	u.Set(order.FieldSortingTrackingNumber, v)
	return u
}

// UpdateSortingTrackingNumber sets the "sorting_tracking_number" field to the value that was provided on create.
func (u *OrderUpsert) UpdateSortingTrackingNumber() *OrderUpsert {
	u.SetExcluded(order.FieldSortingTrackingNumber)
	return u
}

// ClearSortingTrackingNumber clears the value of the "sorting_tracking_number" field.
func (u *OrderUpsert) ClearSortingTrackingNumber() *OrderUpsert {
	u.SetNull(order.FieldSortingTrackingNumber)
	return u
}

// SetSortingPort sets the "sorting_port" field.
func (u *OrderUpsert) SetSortingPort(v int32) *OrderUpsert {
	u.Set(order.FieldSortingPort, v)
	return u
}

// UpdateSortingPort sets the "sorting_port" field to the value that was provided on create.
func (u *OrderUpsert) UpdateSortingPort() *OrderUpsert {
	u.SetExcluded(order.FieldSortingPort)
	return u
}

// AddSortingPort adds v to the "sorting_port" field.
func (u *OrderUpsert) AddSortingPort(v int32) *OrderUpsert {
	u.Add(order.FieldSortingPort, v)
	return u
}

// ClearSortingPort clears the value of the "sorting_port" field.
func (u *OrderUpsert) ClearSortingPort() *OrderUpsert {
	u.SetNull(order.FieldSortingPort)
	return u
}

// SetSortingLength sets the "sorting_length" field.
func (u *OrderUpsert) SetSortingLength(v int) *OrderUpsert {
	u.Set(order.FieldSortingLength, v)
	return u
}

// UpdateSortingLength sets the "sorting_length" field to the value that was provided on create.
func (u *OrderUpsert) UpdateSortingLength() *OrderUpsert {
	u.SetExcluded(order.FieldSortingLength)
	return u
}

// AddSortingLength adds v to the "sorting_length" field.
func (u *OrderUpsert) AddSortingLength(v int) *OrderUpsert {
	u.Add(order.FieldSortingLength, v)
	return u
}

// ClearSortingLength clears the value of the "sorting_length" field.
func (u *OrderUpsert) ClearSortingLength() *OrderUpsert {
	u.SetNull(order.FieldSortingLength)
	return u
}

// SetSortingWidth sets the "sorting_width" field.
func (u *OrderUpsert) SetSortingWidth(v int) *OrderUpsert {
	u.Set(order.FieldSortingWidth, v)
	return u
}

// UpdateSortingWidth sets the "sorting_width" field to the value that was provided on create.
func (u *OrderUpsert) UpdateSortingWidth() *OrderUpsert {
	u.SetExcluded(order.FieldSortingWidth)
	return u
}

// AddSortingWidth adds v to the "sorting_width" field.
func (u *OrderUpsert) AddSortingWidth(v int) *OrderUpsert {
	u.Add(order.FieldSortingWidth, v)
	return u
}

// ClearSortingWidth clears the value of the "sorting_width" field.
func (u *OrderUpsert) ClearSortingWidth() *OrderUpsert {
	u.SetNull(order.FieldSortingWidth)
	return u
}

// SetSortingHeight sets the "sorting_height" field.
func (u *OrderUpsert) SetSortingHeight(v int) *OrderUpsert {
	u.Set(order.FieldSortingHeight, v)
	return u
}

// UpdateSortingHeight sets the "sorting_height" field to the value that was provided on create.
func (u *OrderUpsert) UpdateSortingHeight() *OrderUpsert {
	u.SetExcluded(order.FieldSortingHeight)
	return u
}

// AddSortingHeight adds v to the "sorting_height" field.
func (u *OrderUpsert) AddSortingHeight(v int) *OrderUpsert {
	u.Add(order.FieldSortingHeight, v)
	return u
}

// ClearSortingHeight clears the value of the "sorting_height" field.
func (u *OrderUpsert) ClearSortingHeight() *OrderUpsert {
	u.SetNull(order.FieldSortingHeight)
	return u
}

// SetSortingWeight sets the "sorting_weight" field.
func (u *OrderUpsert) SetSortingWeight(v int) *OrderUpsert {
	u.Set(order.FieldSortingWeight, v)
	return u
}

// UpdateSortingWeight sets the "sorting_weight" field to the value that was provided on create.
func (u *OrderUpsert) UpdateSortingWeight() *OrderUpsert {
	u.SetExcluded(order.FieldSortingWeight)
	return u
}

// AddSortingWeight adds v to the "sorting_weight" field.
func (u *OrderUpsert) AddSortingWeight(v int) *OrderUpsert {
	u.Add(order.FieldSortingWeight, v)
	return u
}

// ClearSortingWeight clears the value of the "sorting_weight" field.
func (u *OrderUpsert) ClearSortingWeight() *OrderUpsert {
	u.SetNull(order.FieldSortingWeight)
	return u
}

// SetEstimatedWeight sets the "estimated_weight" field.
func (u *OrderUpsert) SetEstimatedWeight(v int) *OrderUpsert {
	u.Set(order.FieldEstimatedWeight, v)
	return u
}

// UpdateEstimatedWeight sets the "estimated_weight" field to the value that was provided on create.
func (u *OrderUpsert) UpdateEstimatedWeight() *OrderUpsert {
	u.SetExcluded(order.FieldEstimatedWeight)
	return u
}

// AddEstimatedWeight adds v to the "estimated_weight" field.
func (u *OrderUpsert) AddEstimatedWeight(v int) *OrderUpsert {
	u.Add(order.FieldEstimatedWeight, v)
	return u
}

// ClearEstimatedWeight clears the value of the "estimated_weight" field.
func (u *OrderUpsert) ClearEstimatedWeight() *OrderUpsert {
	u.SetNull(order.FieldEstimatedWeight)
	return u
}

// SetCheckoutActualWeight sets the "checkout_actual_weight" field.
func (u *OrderUpsert) SetCheckoutActualWeight(v int) *OrderUpsert {
	u.Set(order.FieldCheckoutActualWeight, v)
	return u
}

// UpdateCheckoutActualWeight sets the "checkout_actual_weight" field to the value that was provided on create.
func (u *OrderUpsert) UpdateCheckoutActualWeight() *OrderUpsert {
	u.SetExcluded(order.FieldCheckoutActualWeight)
	return u
}

// AddCheckoutActualWeight adds v to the "checkout_actual_weight" field.
func (u *OrderUpsert) AddCheckoutActualWeight(v int) *OrderUpsert {
	u.Add(order.FieldCheckoutActualWeight, v)
	return u
}

// ClearCheckoutActualWeight clears the value of the "checkout_actual_weight" field.
func (u *OrderUpsert) ClearCheckoutActualWeight() *OrderUpsert {
	u.SetNull(order.FieldCheckoutActualWeight)
	return u
}

// SetVolumeWeight sets the "volume_weight" field.
func (u *OrderUpsert) SetVolumeWeight(v int) *OrderUpsert {
	u.Set(order.FieldVolumeWeight, v)
	return u
}

// UpdateVolumeWeight sets the "volume_weight" field to the value that was provided on create.
func (u *OrderUpsert) UpdateVolumeWeight() *OrderUpsert {
	u.SetExcluded(order.FieldVolumeWeight)
	return u
}

// AddVolumeWeight adds v to the "volume_weight" field.
func (u *OrderUpsert) AddVolumeWeight(v int) *OrderUpsert {
	u.Add(order.FieldVolumeWeight, v)
	return u
}

// ClearVolumeWeight clears the value of the "volume_weight" field.
func (u *OrderUpsert) ClearVolumeWeight() *OrderUpsert {
	u.SetNull(order.FieldVolumeWeight)
	return u
}

// SetCourierWeight sets the "courier_weight" field.
func (u *OrderUpsert) SetCourierWeight(v int) *OrderUpsert {
	u.Set(order.FieldCourierWeight, v)
	return u
}

// UpdateCourierWeight sets the "courier_weight" field to the value that was provided on create.
func (u *OrderUpsert) UpdateCourierWeight() *OrderUpsert {
	u.SetExcluded(order.FieldCourierWeight)
	return u
}

// AddCourierWeight adds v to the "courier_weight" field.
func (u *OrderUpsert) AddCourierWeight(v int) *OrderUpsert {
	u.Add(order.FieldCourierWeight, v)
	return u
}

// ClearCourierWeight clears the value of the "courier_weight" field.
func (u *OrderUpsert) ClearCourierWeight() *OrderUpsert {
	u.SetNull(order.FieldCourierWeight)
	return u
}

// SetDeclaredValueInUsd sets the "declared_value_in_usd" field.
func (u *OrderUpsert) SetDeclaredValueInUsd(v float64) *OrderUpsert {
	u.Set(order.FieldDeclaredValueInUsd, v)
	return u
}

// UpdateDeclaredValueInUsd sets the "declared_value_in_usd" field to the value that was provided on create.
func (u *OrderUpsert) UpdateDeclaredValueInUsd() *OrderUpsert {
	u.SetExcluded(order.FieldDeclaredValueInUsd)
	return u
}

// AddDeclaredValueInUsd adds v to the "declared_value_in_usd" field.
func (u *OrderUpsert) AddDeclaredValueInUsd(v float64) *OrderUpsert {
	u.Add(order.FieldDeclaredValueInUsd, v)
	return u
}

// ClearDeclaredValueInUsd clears the value of the "declared_value_in_usd" field.
func (u *OrderUpsert) ClearDeclaredValueInUsd() *OrderUpsert {
	u.SetNull(order.FieldDeclaredValueInUsd)
	return u
}

// SetDeclaredValueInEur sets the "declared_value_in_eur" field.
func (u *OrderUpsert) SetDeclaredValueInEur(v float64) *OrderUpsert {
	u.Set(order.FieldDeclaredValueInEur, v)
	return u
}

// UpdateDeclaredValueInEur sets the "declared_value_in_eur" field to the value that was provided on create.
func (u *OrderUpsert) UpdateDeclaredValueInEur() *OrderUpsert {
	u.SetExcluded(order.FieldDeclaredValueInEur)
	return u
}

// AddDeclaredValueInEur adds v to the "declared_value_in_eur" field.
func (u *OrderUpsert) AddDeclaredValueInEur(v float64) *OrderUpsert {
	u.Add(order.FieldDeclaredValueInEur, v)
	return u
}

// ClearDeclaredValueInEur clears the value of the "declared_value_in_eur" field.
func (u *OrderUpsert) ClearDeclaredValueInEur() *OrderUpsert {
	u.SetNull(order.FieldDeclaredValueInEur)
	return u
}

// SetTotalItemsPrice sets the "total_items_price" field.
func (u *OrderUpsert) SetTotalItemsPrice(v float64) *OrderUpsert {
	u.Set(order.FieldTotalItemsPrice, v)
	return u
}

// UpdateTotalItemsPrice sets the "total_items_price" field to the value that was provided on create.
func (u *OrderUpsert) UpdateTotalItemsPrice() *OrderUpsert {
	u.SetExcluded(order.FieldTotalItemsPrice)
	return u
}

// AddTotalItemsPrice adds v to the "total_items_price" field.
func (u *OrderUpsert) AddTotalItemsPrice(v float64) *OrderUpsert {
	u.Add(order.FieldTotalItemsPrice, v)
	return u
}

// ClearTotalItemsPrice clears the value of the "total_items_price" field.
func (u *OrderUpsert) ClearTotalItemsPrice() *OrderUpsert {
	u.SetNull(order.FieldTotalItemsPrice)
	return u
}

// SetCurrency sets the "currency" field.
func (u *OrderUpsert) SetCurrency(v string) *OrderUpsert {
	u.Set(order.FieldCurrency, v)
	return u
}

// UpdateCurrency sets the "currency" field to the value that was provided on create.
func (u *OrderUpsert) UpdateCurrency() *OrderUpsert {
	u.SetExcluded(order.FieldCurrency)
	return u
}

// ClearCurrency clears the value of the "currency" field.
func (u *OrderUpsert) ClearCurrency() *OrderUpsert {
	u.SetNull(order.FieldCurrency)
	return u
}

// SetDeliveryCost sets the "delivery_cost" field.
func (u *OrderUpsert) SetDeliveryCost(v float64) *OrderUpsert {
	u.Set(order.FieldDeliveryCost, v)
	return u
}

// UpdateDeliveryCost sets the "delivery_cost" field to the value that was provided on create.
func (u *OrderUpsert) UpdateDeliveryCost() *OrderUpsert {
	u.SetExcluded(order.FieldDeliveryCost)
	return u
}

// AddDeliveryCost adds v to the "delivery_cost" field.
func (u *OrderUpsert) AddDeliveryCost(v float64) *OrderUpsert {
	u.Add(order.FieldDeliveryCost, v)
	return u
}

// SetMiscFee sets the "misc_fee" field.
func (u *OrderUpsert) SetMiscFee(v float64) *OrderUpsert {
	u.Set(order.FieldMiscFee, v)
	return u
}

// UpdateMiscFee sets the "misc_fee" field to the value that was provided on create.
func (u *OrderUpsert) UpdateMiscFee() *OrderUpsert {
	u.SetExcluded(order.FieldMiscFee)
	return u
}

// AddMiscFee adds v to the "misc_fee" field.
func (u *OrderUpsert) AddMiscFee(v float64) *OrderUpsert {
	u.Add(order.FieldMiscFee, v)
	return u
}

// SetFuelFee sets the "fuel_fee" field.
func (u *OrderUpsert) SetFuelFee(v float64) *OrderUpsert {
	u.Set(order.FieldFuelFee, v)
	return u
}

// UpdateFuelFee sets the "fuel_fee" field to the value that was provided on create.
func (u *OrderUpsert) UpdateFuelFee() *OrderUpsert {
	u.SetExcluded(order.FieldFuelFee)
	return u
}

// AddFuelFee adds v to the "fuel_fee" field.
func (u *OrderUpsert) AddFuelFee(v float64) *OrderUpsert {
	u.Add(order.FieldFuelFee, v)
	return u
}

// SetRegistrationFee sets the "registration_fee" field.
func (u *OrderUpsert) SetRegistrationFee(v float64) *OrderUpsert {
	u.Set(order.FieldRegistrationFee, v)
	return u
}

// UpdateRegistrationFee sets the "registration_fee" field to the value that was provided on create.
func (u *OrderUpsert) UpdateRegistrationFee() *OrderUpsert {
	u.SetExcluded(order.FieldRegistrationFee)
	return u
}

// AddRegistrationFee adds v to the "registration_fee" field.
func (u *OrderUpsert) AddRegistrationFee(v float64) *OrderUpsert {
	u.Add(order.FieldRegistrationFee, v)
	return u
}

// SetProcessingFee sets the "processing_fee" field.
func (u *OrderUpsert) SetProcessingFee(v float64) *OrderUpsert {
	u.Set(order.FieldProcessingFee, v)
	return u
}

// UpdateProcessingFee sets the "processing_fee" field to the value that was provided on create.
func (u *OrderUpsert) UpdateProcessingFee() *OrderUpsert {
	u.SetExcluded(order.FieldProcessingFee)
	return u
}

// AddProcessingFee adds v to the "processing_fee" field.
func (u *OrderUpsert) AddProcessingFee(v float64) *OrderUpsert {
	u.Add(order.FieldProcessingFee, v)
	return u
}

// SetPackageFee sets the "package_fee" field.
func (u *OrderUpsert) SetPackageFee(v float64) *OrderUpsert {
	u.Set(order.FieldPackageFee, v)
	return u
}

// UpdatePackageFee sets the "package_fee" field to the value that was provided on create.
func (u *OrderUpsert) UpdatePackageFee() *OrderUpsert {
	u.SetExcluded(order.FieldPackageFee)
	return u
}

// AddPackageFee adds v to the "package_fee" field.
func (u *OrderUpsert) AddPackageFee(v float64) *OrderUpsert {
	u.Add(order.FieldPackageFee, v)
	return u
}

// SetHandlingFee sets the "handling_fee" field.
func (u *OrderUpsert) SetHandlingFee(v float64) *OrderUpsert {
	u.Set(order.FieldHandlingFee, v)
	return u
}

// UpdateHandlingFee sets the "handling_fee" field to the value that was provided on create.
func (u *OrderUpsert) UpdateHandlingFee() *OrderUpsert {
	u.SetExcluded(order.FieldHandlingFee)
	return u
}

// AddHandlingFee adds v to the "handling_fee" field.
func (u *OrderUpsert) AddHandlingFee(v float64) *OrderUpsert {
	u.Add(order.FieldHandlingFee, v)
	return u
}

// SetVat sets the "vat" field.
func (u *OrderUpsert) SetVat(v float64) *OrderUpsert {
	u.Set(order.FieldVat, v)
	return u
}

// UpdateVat sets the "vat" field to the value that was provided on create.
func (u *OrderUpsert) UpdateVat() *OrderUpsert {
	u.SetExcluded(order.FieldVat)
	return u
}

// AddVat adds v to the "vat" field.
func (u *OrderUpsert) AddVat(v float64) *OrderUpsert {
	u.Add(order.FieldVat, v)
	return u
}

// SetEstimatedCost sets the "estimated_cost" field.
func (u *OrderUpsert) SetEstimatedCost(v float64) *OrderUpsert {
	u.Set(order.FieldEstimatedCost, v)
	return u
}

// UpdateEstimatedCost sets the "estimated_cost" field to the value that was provided on create.
func (u *OrderUpsert) UpdateEstimatedCost() *OrderUpsert {
	u.SetExcluded(order.FieldEstimatedCost)
	return u
}

// AddEstimatedCost adds v to the "estimated_cost" field.
func (u *OrderUpsert) AddEstimatedCost(v float64) *OrderUpsert {
	u.Add(order.FieldEstimatedCost, v)
	return u
}

// SetEstimatedCurrency sets the "estimated_currency" field.
func (u *OrderUpsert) SetEstimatedCurrency(v string) *OrderUpsert {
	u.Set(order.FieldEstimatedCurrency, v)
	return u
}

// UpdateEstimatedCurrency sets the "estimated_currency" field to the value that was provided on create.
func (u *OrderUpsert) UpdateEstimatedCurrency() *OrderUpsert {
	u.SetExcluded(order.FieldEstimatedCurrency)
	return u
}

// SetReceivablesAmount sets the "receivables_amount" field.
func (u *OrderUpsert) SetReceivablesAmount(v float64) *OrderUpsert {
	u.Set(order.FieldReceivablesAmount, v)
	return u
}

// UpdateReceivablesAmount sets the "receivables_amount" field to the value that was provided on create.
func (u *OrderUpsert) UpdateReceivablesAmount() *OrderUpsert {
	u.SetExcluded(order.FieldReceivablesAmount)
	return u
}

// AddReceivablesAmount adds v to the "receivables_amount" field.
func (u *OrderUpsert) AddReceivablesAmount(v float64) *OrderUpsert {
	u.Add(order.FieldReceivablesAmount, v)
	return u
}

// SetReceivablesCurrency sets the "receivables_currency" field.
func (u *OrderUpsert) SetReceivablesCurrency(v string) *OrderUpsert {
	u.Set(order.FieldReceivablesCurrency, v)
	return u
}

// UpdateReceivablesCurrency sets the "receivables_currency" field to the value that was provided on create.
func (u *OrderUpsert) UpdateReceivablesCurrency() *OrderUpsert {
	u.SetExcluded(order.FieldReceivablesCurrency)
	return u
}

// SetNotAcceptPlatformUpdate sets the "not_accept_platform_update" field.
func (u *OrderUpsert) SetNotAcceptPlatformUpdate(v bool) *OrderUpsert {
	u.Set(order.FieldNotAcceptPlatformUpdate, v)
	return u
}

// UpdateNotAcceptPlatformUpdate sets the "not_accept_platform_update" field to the value that was provided on create.
func (u *OrderUpsert) UpdateNotAcceptPlatformUpdate() *OrderUpsert {
	u.SetExcluded(order.FieldNotAcceptPlatformUpdate)
	return u
}

// SetNotAcceptPlatformUpdateItem sets the "not_accept_platform_update_item" field.
func (u *OrderUpsert) SetNotAcceptPlatformUpdateItem(v bool) *OrderUpsert {
	u.Set(order.FieldNotAcceptPlatformUpdateItem, v)
	return u
}

// UpdateNotAcceptPlatformUpdateItem sets the "not_accept_platform_update_item" field to the value that was provided on create.
func (u *OrderUpsert) UpdateNotAcceptPlatformUpdateItem() *OrderUpsert {
	u.SetExcluded(order.FieldNotAcceptPlatformUpdateItem)
	return u
}

// SetJdPushedStatus sets the "jd_pushed_status" field.
func (u *OrderUpsert) SetJdPushedStatus(v string) *OrderUpsert {
	u.Set(order.FieldJdPushedStatus, v)
	return u
}

// UpdateJdPushedStatus sets the "jd_pushed_status" field to the value that was provided on create.
func (u *OrderUpsert) UpdateJdPushedStatus() *OrderUpsert {
	u.SetExcluded(order.FieldJdPushedStatus)
	return u
}

// UpdateNewValues updates the mutable fields using the new values that were set on create except the ID field.
// Using this option is equivalent to using:
//
//	client.Order.Create().
//		OnConflict(
//			sql.ResolveWithNewValues(),
//			sql.ResolveWith(func(u *sql.UpdateSet) {
//				u.SetIgnore(order.FieldID)
//			}),
//		).
//		Exec(ctx)
func (u *OrderUpsertOne) UpdateNewValues() *OrderUpsertOne {
	u.create.conflict = append(u.create.conflict, sql.ResolveWithNewValues())
	u.create.conflict = append(u.create.conflict, sql.ResolveWith(func(s *sql.UpdateSet) {
		if _, exists := u.create.mutation.ID(); exists {
			s.SetIgnore(order.FieldID)
		}
		if _, exists := u.create.mutation.CreatedAt(); exists {
			s.SetIgnore(order.FieldCreatedAt)
		}
	}))
	return u
}

// Ignore sets each column to itself in case of conflict.
// Using this option is equivalent to using:
//
//	client.Order.Create().
//	    OnConflict(sql.ResolveWithIgnore()).
//	    Exec(ctx)
func (u *OrderUpsertOne) Ignore() *OrderUpsertOne {
	u.create.conflict = append(u.create.conflict, sql.ResolveWithIgnore())
	return u
}

// DoNothing configures the conflict_action to `DO NOTHING`.
// Supported only by SQLite and PostgreSQL.
func (u *OrderUpsertOne) DoNothing() *OrderUpsertOne {
	u.create.conflict = append(u.create.conflict, sql.DoNothing())
	return u
}

// Update allows overriding fields `UPDATE` values. See the OrderCreate.OnConflict
// documentation for more info.
func (u *OrderUpsertOne) Update(set func(*OrderUpsert)) *OrderUpsertOne {
	u.create.conflict = append(u.create.conflict, sql.ResolveWith(func(update *sql.UpdateSet) {
		set(&OrderUpsert{UpdateSet: update})
	}))
	return u
}

// SetUpdatedAt sets the "updated_at" field.
func (u *OrderUpsertOne) SetUpdatedAt(v time.Time) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetUpdatedAt(v)
	})
}

// UpdateUpdatedAt sets the "updated_at" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateUpdatedAt() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateUpdatedAt()
	})
}

// SetDeletedAt sets the "deleted_at" field.
func (u *OrderUpsertOne) SetDeletedAt(v time.Time) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetDeletedAt(v)
	})
}

// UpdateDeletedAt sets the "deleted_at" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateDeletedAt() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateDeletedAt()
	})
}

// ClearDeletedAt clears the value of the "deleted_at" field.
func (u *OrderUpsertOne) ClearDeletedAt() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearDeletedAt()
	})
}

// SetOrderNumber sets the "order_number" field.
func (u *OrderUpsertOne) SetOrderNumber(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetOrderNumber(v)
	})
}

// UpdateOrderNumber sets the "order_number" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateOrderNumber() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateOrderNumber()
	})
}

// SetMode sets the "mode" field.
func (u *OrderUpsertOne) SetMode(v int8) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetMode(v)
	})
}

// AddMode adds v to the "mode" field.
func (u *OrderUpsertOne) AddMode(v int8) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.AddMode(v)
	})
}

// UpdateMode sets the "mode" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateMode() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateMode()
	})
}

// SetType sets the "type" field.
func (u *OrderUpsertOne) SetType(v int8) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetType(v)
	})
}

// AddType adds v to the "type" field.
func (u *OrderUpsertOne) AddType(v int8) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.AddType(v)
	})
}

// UpdateType sets the "type" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateType() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateType()
	})
}

// SetOffline sets the "offline" field.
func (u *OrderUpsertOne) SetOffline(v bool) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetOffline(v)
	})
}

// UpdateOffline sets the "offline" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateOffline() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateOffline()
	})
}

// SetStoreID sets the "store_id" field.
func (u *OrderUpsertOne) SetStoreID(v int64) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetStoreID(v)
	})
}

// UpdateStoreID sets the "store_id" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateStoreID() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateStoreID()
	})
}

// ClearStoreID clears the value of the "store_id" field.
func (u *OrderUpsertOne) ClearStoreID() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearStoreID()
	})
}

// SetWarehouseID sets the "warehouse_id" field.
func (u *OrderUpsertOne) SetWarehouseID(v int64) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetWarehouseID(v)
	})
}

// UpdateWarehouseID sets the "warehouse_id" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateWarehouseID() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateWarehouseID()
	})
}

// ClearWarehouseID clears the value of the "warehouse_id" field.
func (u *OrderUpsertOne) ClearWarehouseID() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearWarehouseID()
	})
}

// SetCustomerCode sets the "customer_code" field.
func (u *OrderUpsertOne) SetCustomerCode(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetCustomerCode(v)
	})
}

// UpdateCustomerCode sets the "customer_code" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateCustomerCode() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateCustomerCode()
	})
}

// SetPrepayTariff sets the "prepay_tariff" field.
func (u *OrderUpsertOne) SetPrepayTariff(v bool) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetPrepayTariff(v)
	})
}

// UpdatePrepayTariff sets the "prepay_tariff" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdatePrepayTariff() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdatePrepayTariff()
	})
}

// SetIossNumber sets the "ioss_number" field.
func (u *OrderUpsertOne) SetIossNumber(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetIossNumber(v)
	})
}

// UpdateIossNumber sets the "ioss_number" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateIossNumber() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateIossNumber()
	})
}

// SetIossCountryCode sets the "ioss_country_code" field.
func (u *OrderUpsertOne) SetIossCountryCode(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetIossCountryCode(v)
	})
}

// UpdateIossCountryCode sets the "ioss_country_code" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateIossCountryCode() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateIossCountryCode()
	})
}

// SetIossNumberType sets the "ioss_number_type" field.
func (u *OrderUpsertOne) SetIossNumberType(v int8) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetIossNumberType(v)
	})
}

// AddIossNumberType adds v to the "ioss_number_type" field.
func (u *OrderUpsertOne) AddIossNumberType(v int8) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.AddIossNumberType(v)
	})
}

// UpdateIossNumberType sets the "ioss_number_type" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateIossNumberType() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateIossNumberType()
	})
}

// SetUkVatNumber sets the "uk_vat_number" field.
func (u *OrderUpsertOne) SetUkVatNumber(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetUkVatNumber(v)
	})
}

// UpdateUkVatNumber sets the "uk_vat_number" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateUkVatNumber() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateUkVatNumber()
	})
}

// SetInboundOrderNumber sets the "inbound_order_number" field.
func (u *OrderUpsertOne) SetInboundOrderNumber(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetInboundOrderNumber(v)
	})
}

// UpdateInboundOrderNumber sets the "inbound_order_number" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateInboundOrderNumber() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateInboundOrderNumber()
	})
}

// SetStatus sets the "status" field.
func (u *OrderUpsertOne) SetStatus(v int8) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetStatus(v)
	})
}

// AddStatus adds v to the "status" field.
func (u *OrderUpsertOne) AddStatus(v int8) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.AddStatus(v)
	})
}

// UpdateStatus sets the "status" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateStatus() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateStatus()
	})
}

// SetSqsStatus sets the "sqs_status" field.
func (u *OrderUpsertOne) SetSqsStatus(v bool) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetSqsStatus(v)
	})
}

// UpdateSqsStatus sets the "sqs_status" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateSqsStatus() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateSqsStatus()
	})
}

// ClearSqsStatus clears the value of the "sqs_status" field.
func (u *OrderUpsertOne) ClearSqsStatus() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearSqsStatus()
	})
}

// SetHoldStatus sets the "hold_status" field.
func (u *OrderUpsertOne) SetHoldStatus(v bool) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetHoldStatus(v)
	})
}

// UpdateHoldStatus sets the "hold_status" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateHoldStatus() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateHoldStatus()
	})
}

// ClearHoldStatus clears the value of the "hold_status" field.
func (u *OrderUpsertOne) ClearHoldStatus() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearHoldStatus()
	})
}

// SetPaymentStatus sets the "payment_status" field.
func (u *OrderUpsertOne) SetPaymentStatus(v int8) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetPaymentStatus(v)
	})
}

// AddPaymentStatus adds v to the "payment_status" field.
func (u *OrderUpsertOne) AddPaymentStatus(v int8) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.AddPaymentStatus(v)
	})
}

// UpdatePaymentStatus sets the "payment_status" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdatePaymentStatus() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdatePaymentStatus()
	})
}

// ClearPaymentStatus clears the value of the "payment_status" field.
func (u *OrderUpsertOne) ClearPaymentStatus() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearPaymentStatus()
	})
}

// SetCancelRequest sets the "cancel_request" field.
func (u *OrderUpsertOne) SetCancelRequest(v int8) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetCancelRequest(v)
	})
}

// AddCancelRequest adds v to the "cancel_request" field.
func (u *OrderUpsertOne) AddCancelRequest(v int8) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.AddCancelRequest(v)
	})
}

// UpdateCancelRequest sets the "cancel_request" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateCancelRequest() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateCancelRequest()
	})
}

// ClearCancelRequest clears the value of the "cancel_request" field.
func (u *OrderUpsertOne) ClearCancelRequest() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearCancelRequest()
	})
}

// SetPlatform sets the "platform" field.
func (u *OrderUpsertOne) SetPlatform(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetPlatform(v)
	})
}

// UpdatePlatform sets the "platform" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdatePlatform() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdatePlatform()
	})
}

// SetPlatformOrderID sets the "platform_order_id" field.
func (u *OrderUpsertOne) SetPlatformOrderID(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetPlatformOrderID(v)
	})
}

// UpdatePlatformOrderID sets the "platform_order_id" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdatePlatformOrderID() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdatePlatformOrderID()
	})
}

// ClearPlatformOrderID clears the value of the "platform_order_id" field.
func (u *OrderUpsertOne) ClearPlatformOrderID() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearPlatformOrderID()
	})
}

// SetPlatformOrderNo sets the "platform_order_no" field.
func (u *OrderUpsertOne) SetPlatformOrderNo(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetPlatformOrderNo(v)
	})
}

// UpdatePlatformOrderNo sets the "platform_order_no" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdatePlatformOrderNo() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdatePlatformOrderNo()
	})
}

// ClearPlatformOrderNo clears the value of the "platform_order_no" field.
func (u *OrderUpsertOne) ClearPlatformOrderNo() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearPlatformOrderNo()
	})
}

// SetPlatformOrderStatusURL sets the "platform_order_status_url" field.
func (u *OrderUpsertOne) SetPlatformOrderStatusURL(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetPlatformOrderStatusURL(v)
	})
}

// UpdatePlatformOrderStatusURL sets the "platform_order_status_url" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdatePlatformOrderStatusURL() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdatePlatformOrderStatusURL()
	})
}

// ClearPlatformOrderStatusURL clears the value of the "platform_order_status_url" field.
func (u *OrderUpsertOne) ClearPlatformOrderStatusURL() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearPlatformOrderStatusURL()
	})
}

// SetPlatformStatus sets the "platform_status" field.
func (u *OrderUpsertOne) SetPlatformStatus(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetPlatformStatus(v)
	})
}

// UpdatePlatformStatus sets the "platform_status" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdatePlatformStatus() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdatePlatformStatus()
	})
}

// ClearPlatformStatus clears the value of the "platform_status" field.
func (u *OrderUpsertOne) ClearPlatformStatus() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearPlatformStatus()
	})
}

// SetPaidStatus sets the "paid_status" field.
func (u *OrderUpsertOne) SetPaidStatus(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetPaidStatus(v)
	})
}

// UpdatePaidStatus sets the "paid_status" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdatePaidStatus() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdatePaidStatus()
	})
}

// ClearPaidStatus clears the value of the "paid_status" field.
func (u *OrderUpsertOne) ClearPaidStatus() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearPaidStatus()
	})
}

// SetFulfillmentPushed sets the "fulfillment_pushed" field.
func (u *OrderUpsertOne) SetFulfillmentPushed(v bool) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetFulfillmentPushed(v)
	})
}

// UpdateFulfillmentPushed sets the "fulfillment_pushed" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateFulfillmentPushed() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateFulfillmentPushed()
	})
}

// ClearFulfillmentPushed clears the value of the "fulfillment_pushed" field.
func (u *OrderUpsertOne) ClearFulfillmentPushed() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearFulfillmentPushed()
	})
}

// SetFulfillmentStatus sets the "fulfillment_status" field.
func (u *OrderUpsertOne) SetFulfillmentStatus(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetFulfillmentStatus(v)
	})
}

// UpdateFulfillmentStatus sets the "fulfillment_status" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateFulfillmentStatus() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateFulfillmentStatus()
	})
}

// ClearFulfillmentStatus clears the value of the "fulfillment_status" field.
func (u *OrderUpsertOne) ClearFulfillmentStatus() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearFulfillmentStatus()
	})
}

// SetPlatformCreatedAt sets the "platform_created_at" field.
func (u *OrderUpsertOne) SetPlatformCreatedAt(v time.Time) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetPlatformCreatedAt(v)
	})
}

// UpdatePlatformCreatedAt sets the "platform_created_at" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdatePlatformCreatedAt() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdatePlatformCreatedAt()
	})
}

// ClearPlatformCreatedAt clears the value of the "platform_created_at" field.
func (u *OrderUpsertOne) ClearPlatformCreatedAt() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearPlatformCreatedAt()
	})
}

// SetLocationID sets the "location_id" field.
func (u *OrderUpsertOne) SetLocationID(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetLocationID(v)
	})
}

// UpdateLocationID sets the "location_id" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateLocationID() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateLocationID()
	})
}

// ClearLocationID clears the value of the "location_id" field.
func (u *OrderUpsertOne) ClearLocationID() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearLocationID()
	})
}

// SetTags sets the "tags" field.
func (u *OrderUpsertOne) SetTags(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetTags(v)
	})
}

// UpdateTags sets the "tags" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateTags() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateTags()
	})
}

// ClearTags clears the value of the "tags" field.
func (u *OrderUpsertOne) ClearTags() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearTags()
	})
}

// SetNote sets the "note" field.
func (u *OrderUpsertOne) SetNote(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetNote(v)
	})
}

// UpdateNote sets the "note" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateNote() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateNote()
	})
}

// ClearNote clears the value of the "note" field.
func (u *OrderUpsertOne) ClearNote() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearNote()
	})
}

// SetCancelReason sets the "cancel_reason" field.
func (u *OrderUpsertOne) SetCancelReason(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetCancelReason(v)
	})
}

// UpdateCancelReason sets the "cancel_reason" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateCancelReason() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateCancelReason()
	})
}

// ClearCancelReason clears the value of the "cancel_reason" field.
func (u *OrderUpsertOne) ClearCancelReason() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearCancelReason()
	})
}

// SetCancelledAt sets the "cancelled_at" field.
func (u *OrderUpsertOne) SetCancelledAt(v time.Time) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetCancelledAt(v)
	})
}

// UpdateCancelledAt sets the "cancelled_at" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateCancelledAt() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateCancelledAt()
	})
}

// ClearCancelledAt clears the value of the "cancelled_at" field.
func (u *OrderUpsertOne) ClearCancelledAt() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearCancelledAt()
	})
}

// SetClosedAt sets the "closed_at" field.
func (u *OrderUpsertOne) SetClosedAt(v time.Time) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetClosedAt(v)
	})
}

// UpdateClosedAt sets the "closed_at" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateClosedAt() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateClosedAt()
	})
}

// ClearClosedAt clears the value of the "closed_at" field.
func (u *OrderUpsertOne) ClearClosedAt() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearClosedAt()
	})
}

// SetContactEmail sets the "contact_email" field.
func (u *OrderUpsertOne) SetContactEmail(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetContactEmail(v)
	})
}

// UpdateContactEmail sets the "contact_email" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateContactEmail() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateContactEmail()
	})
}

// SetContactPhone sets the "contact_phone" field.
func (u *OrderUpsertOne) SetContactPhone(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetContactPhone(v)
	})
}

// UpdateContactPhone sets the "contact_phone" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateContactPhone() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateContactPhone()
	})
}

// SetShippingName sets the "shipping_name" field.
func (u *OrderUpsertOne) SetShippingName(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetShippingName(v)
	})
}

// UpdateShippingName sets the "shipping_name" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateShippingName() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShippingName()
	})
}

// SetShippingFirstName sets the "shipping_first_name" field.
func (u *OrderUpsertOne) SetShippingFirstName(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetShippingFirstName(v)
	})
}

// UpdateShippingFirstName sets the "shipping_first_name" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateShippingFirstName() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShippingFirstName()
	})
}

// SetShippingLastName sets the "shipping_last_name" field.
func (u *OrderUpsertOne) SetShippingLastName(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetShippingLastName(v)
	})
}

// UpdateShippingLastName sets the "shipping_last_name" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateShippingLastName() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShippingLastName()
	})
}

// SetShippingCompany sets the "shipping_company" field.
func (u *OrderUpsertOne) SetShippingCompany(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetShippingCompany(v)
	})
}

// UpdateShippingCompany sets the "shipping_company" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateShippingCompany() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShippingCompany()
	})
}

// SetShippingCountry sets the "shipping_country" field.
func (u *OrderUpsertOne) SetShippingCountry(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetShippingCountry(v)
	})
}

// UpdateShippingCountry sets the "shipping_country" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateShippingCountry() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShippingCountry()
	})
}

// SetShippingCountryCode sets the "shipping_country_code" field.
func (u *OrderUpsertOne) SetShippingCountryCode(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetShippingCountryCode(v)
	})
}

// UpdateShippingCountryCode sets the "shipping_country_code" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateShippingCountryCode() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShippingCountryCode()
	})
}

// SetShippingProvince sets the "shipping_province" field.
func (u *OrderUpsertOne) SetShippingProvince(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetShippingProvince(v)
	})
}

// UpdateShippingProvince sets the "shipping_province" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateShippingProvince() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShippingProvince()
	})
}

// SetShippingProvinceCode sets the "shipping_province_code" field.
func (u *OrderUpsertOne) SetShippingProvinceCode(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetShippingProvinceCode(v)
	})
}

// UpdateShippingProvinceCode sets the "shipping_province_code" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateShippingProvinceCode() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShippingProvinceCode()
	})
}

// SetShippingCity sets the "shipping_city" field.
func (u *OrderUpsertOne) SetShippingCity(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetShippingCity(v)
	})
}

// UpdateShippingCity sets the "shipping_city" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateShippingCity() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShippingCity()
	})
}

// SetShippingAddress1 sets the "shipping_address1" field.
func (u *OrderUpsertOne) SetShippingAddress1(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetShippingAddress1(v)
	})
}

// UpdateShippingAddress1 sets the "shipping_address1" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateShippingAddress1() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShippingAddress1()
	})
}

// SetShippingAddress2 sets the "shipping_address2" field.
func (u *OrderUpsertOne) SetShippingAddress2(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetShippingAddress2(v)
	})
}

// UpdateShippingAddress2 sets the "shipping_address2" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateShippingAddress2() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShippingAddress2()
	})
}

// SetShippingZipCode sets the "shipping_zip_code" field.
func (u *OrderUpsertOne) SetShippingZipCode(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetShippingZipCode(v)
	})
}

// UpdateShippingZipCode sets the "shipping_zip_code" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateShippingZipCode() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShippingZipCode()
	})
}

// SetShippingPhone sets the "shipping_phone" field.
func (u *OrderUpsertOne) SetShippingPhone(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetShippingPhone(v)
	})
}

// UpdateShippingPhone sets the "shipping_phone" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateShippingPhone() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShippingPhone()
	})
}

// SetShippingCertificateType sets the "shipping_certificate_type" field.
func (u *OrderUpsertOne) SetShippingCertificateType(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetShippingCertificateType(v)
	})
}

// UpdateShippingCertificateType sets the "shipping_certificate_type" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateShippingCertificateType() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShippingCertificateType()
	})
}

// ClearShippingCertificateType clears the value of the "shipping_certificate_type" field.
func (u *OrderUpsertOne) ClearShippingCertificateType() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearShippingCertificateType()
	})
}

// SetShippingCertificateCode sets the "shipping_certificate_code" field.
func (u *OrderUpsertOne) SetShippingCertificateCode(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetShippingCertificateCode(v)
	})
}

// UpdateShippingCertificateCode sets the "shipping_certificate_code" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateShippingCertificateCode() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShippingCertificateCode()
	})
}

// ClearShippingCertificateCode clears the value of the "shipping_certificate_code" field.
func (u *OrderUpsertOne) ClearShippingCertificateCode() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearShippingCertificateCode()
	})
}

// SetShippingCredentialsPeriod sets the "shipping_credentials_period" field.
func (u *OrderUpsertOne) SetShippingCredentialsPeriod(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetShippingCredentialsPeriod(v)
	})
}

// UpdateShippingCredentialsPeriod sets the "shipping_credentials_period" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateShippingCredentialsPeriod() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShippingCredentialsPeriod()
	})
}

// ClearShippingCredentialsPeriod clears the value of the "shipping_credentials_period" field.
func (u *OrderUpsertOne) ClearShippingCredentialsPeriod() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearShippingCredentialsPeriod()
	})
}

// SetRemark sets the "remark" field.
func (u *OrderUpsertOne) SetRemark(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetRemark(v)
	})
}

// UpdateRemark sets the "remark" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateRemark() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateRemark()
	})
}

// ClearRemark clears the value of the "remark" field.
func (u *OrderUpsertOne) ClearRemark() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearRemark()
	})
}

// SetPreferShippedType sets the "prefer_shipped_type" field.
func (u *OrderUpsertOne) SetPreferShippedType(v int8) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetPreferShippedType(v)
	})
}

// AddPreferShippedType adds v to the "prefer_shipped_type" field.
func (u *OrderUpsertOne) AddPreferShippedType(v int8) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.AddPreferShippedType(v)
	})
}

// UpdatePreferShippedType sets the "prefer_shipped_type" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdatePreferShippedType() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdatePreferShippedType()
	})
}

// ClearPreferShippedType clears the value of the "prefer_shipped_type" field.
func (u *OrderUpsertOne) ClearPreferShippedType() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearPreferShippedType()
	})
}

// SetPreferChannelID sets the "prefer_channel_id" field.
func (u *OrderUpsertOne) SetPreferChannelID(v int64) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetPreferChannelID(v)
	})
}

// AddPreferChannelID adds v to the "prefer_channel_id" field.
func (u *OrderUpsertOne) AddPreferChannelID(v int64) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.AddPreferChannelID(v)
	})
}

// UpdatePreferChannelID sets the "prefer_channel_id" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdatePreferChannelID() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdatePreferChannelID()
	})
}

// ClearPreferChannelID clears the value of the "prefer_channel_id" field.
func (u *OrderUpsertOne) ClearPreferChannelID() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearPreferChannelID()
	})
}

// SetChannelOptions sets the "channel_options" field.
func (u *OrderUpsertOne) SetChannelOptions(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetChannelOptions(v)
	})
}

// UpdateChannelOptions sets the "channel_options" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateChannelOptions() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateChannelOptions()
	})
}

// ClearChannelOptions clears the value of the "channel_options" field.
func (u *OrderUpsertOne) ClearChannelOptions() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearChannelOptions()
	})
}

// SetChannelID sets the "channel_id" field.
func (u *OrderUpsertOne) SetChannelID(v int64) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetChannelID(v)
	})
}

// UpdateChannelID sets the "channel_id" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateChannelID() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateChannelID()
	})
}

// ClearChannelID clears the value of the "channel_id" field.
func (u *OrderUpsertOne) ClearChannelID() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearChannelID()
	})
}

// SetChannelCostID sets the "channel_cost_id" field.
func (u *OrderUpsertOne) SetChannelCostID(v int64) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetChannelCostID(v)
	})
}

// AddChannelCostID adds v to the "channel_cost_id" field.
func (u *OrderUpsertOne) AddChannelCostID(v int64) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.AddChannelCostID(v)
	})
}

// UpdateChannelCostID sets the "channel_cost_id" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateChannelCostID() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateChannelCostID()
	})
}

// ClearChannelCostID clears the value of the "channel_cost_id" field.
func (u *OrderUpsertOne) ClearChannelCostID() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearChannelCostID()
	})
}

// SetShipType sets the "ship_type" field.
func (u *OrderUpsertOne) SetShipType(v int8) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetShipType(v)
	})
}

// AddShipType adds v to the "ship_type" field.
func (u *OrderUpsertOne) AddShipType(v int8) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.AddShipType(v)
	})
}

// UpdateShipType sets the "ship_type" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateShipType() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShipType()
	})
}

// ClearShipType clears the value of the "ship_type" field.
func (u *OrderUpsertOne) ClearShipType() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearShipType()
	})
}

// SetTrackingCompany sets the "tracking_company" field.
func (u *OrderUpsertOne) SetTrackingCompany(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetTrackingCompany(v)
	})
}

// UpdateTrackingCompany sets the "tracking_company" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateTrackingCompany() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateTrackingCompany()
	})
}

// ClearTrackingCompany clears the value of the "tracking_company" field.
func (u *OrderUpsertOne) ClearTrackingCompany() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearTrackingCompany()
	})
}

// SetTrackingNumber sets the "tracking_number" field.
func (u *OrderUpsertOne) SetTrackingNumber(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetTrackingNumber(v)
	})
}

// UpdateTrackingNumber sets the "tracking_number" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateTrackingNumber() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateTrackingNumber()
	})
}

// ClearTrackingNumber clears the value of the "tracking_number" field.
func (u *OrderUpsertOne) ClearTrackingNumber() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearTrackingNumber()
	})
}

// SetTrackingURL sets the "tracking_url" field.
func (u *OrderUpsertOne) SetTrackingURL(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetTrackingURL(v)
	})
}

// UpdateTrackingURL sets the "tracking_url" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateTrackingURL() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateTrackingURL()
	})
}

// ClearTrackingURL clears the value of the "tracking_url" field.
func (u *OrderUpsertOne) ClearTrackingURL() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearTrackingURL()
	})
}

// SetWaybillNumber sets the "waybill_number" field.
func (u *OrderUpsertOne) SetWaybillNumber(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetWaybillNumber(v)
	})
}

// UpdateWaybillNumber sets the "waybill_number" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateWaybillNumber() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateWaybillNumber()
	})
}

// ClearWaybillNumber clears the value of the "waybill_number" field.
func (u *OrderUpsertOne) ClearWaybillNumber() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearWaybillNumber()
	})
}

// SetCourierOrderNumber sets the "courier_order_number" field.
func (u *OrderUpsertOne) SetCourierOrderNumber(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetCourierOrderNumber(v)
	})
}

// UpdateCourierOrderNumber sets the "courier_order_number" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateCourierOrderNumber() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateCourierOrderNumber()
	})
}

// ClearCourierOrderNumber clears the value of the "courier_order_number" field.
func (u *OrderUpsertOne) ClearCourierOrderNumber() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearCourierOrderNumber()
	})
}

// SetNssCourierOrderNumber sets the "nss_courier_order_number" field.
func (u *OrderUpsertOne) SetNssCourierOrderNumber(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetNssCourierOrderNumber(v)
	})
}

// UpdateNssCourierOrderNumber sets the "nss_courier_order_number" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateNssCourierOrderNumber() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateNssCourierOrderNumber()
	})
}

// ClearNssCourierOrderNumber clears the value of the "nss_courier_order_number" field.
func (u *OrderUpsertOne) ClearNssCourierOrderNumber() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearNssCourierOrderNumber()
	})
}

// SetNssTrackingNumber sets the "nss_tracking_number" field.
func (u *OrderUpsertOne) SetNssTrackingNumber(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetNssTrackingNumber(v)
	})
}

// UpdateNssTrackingNumber sets the "nss_tracking_number" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateNssTrackingNumber() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateNssTrackingNumber()
	})
}

// ClearNssTrackingNumber clears the value of the "nss_tracking_number" field.
func (u *OrderUpsertOne) ClearNssTrackingNumber() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearNssTrackingNumber()
	})
}

// SetNssTrackingURL sets the "nss_tracking_url" field.
func (u *OrderUpsertOne) SetNssTrackingURL(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetNssTrackingURL(v)
	})
}

// UpdateNssTrackingURL sets the "nss_tracking_url" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateNssTrackingURL() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateNssTrackingURL()
	})
}

// ClearNssTrackingURL clears the value of the "nss_tracking_url" field.
func (u *OrderUpsertOne) ClearNssTrackingURL() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearNssTrackingURL()
	})
}

// SetShippingLabelURL sets the "shipping_label_url" field.
func (u *OrderUpsertOne) SetShippingLabelURL(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetShippingLabelURL(v)
	})
}

// UpdateShippingLabelURL sets the "shipping_label_url" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateShippingLabelURL() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShippingLabelURL()
	})
}

// ClearShippingLabelURL clears the value of the "shipping_label_url" field.
func (u *OrderUpsertOne) ClearShippingLabelURL() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearShippingLabelURL()
	})
}

// SetShippingLabelPath sets the "shipping_label_path" field.
func (u *OrderUpsertOne) SetShippingLabelPath(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetShippingLabelPath(v)
	})
}

// UpdateShippingLabelPath sets the "shipping_label_path" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateShippingLabelPath() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShippingLabelPath()
	})
}

// ClearShippingLabelPath clears the value of the "shipping_label_path" field.
func (u *OrderUpsertOne) ClearShippingLabelPath() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearShippingLabelPath()
	})
}

// SetLabelDataPath sets the "label_data_path" field.
func (u *OrderUpsertOne) SetLabelDataPath(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetLabelDataPath(v)
	})
}

// UpdateLabelDataPath sets the "label_data_path" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateLabelDataPath() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateLabelDataPath()
	})
}

// ClearLabelDataPath clears the value of the "label_data_path" field.
func (u *OrderUpsertOne) ClearLabelDataPath() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearLabelDataPath()
	})
}

// SetPackageID sets the "package_id" field.
func (u *OrderUpsertOne) SetPackageID(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetPackageID(v)
	})
}

// UpdatePackageID sets the "package_id" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdatePackageID() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdatePackageID()
	})
}

// ClearPackageID clears the value of the "package_id" field.
func (u *OrderUpsertOne) ClearPackageID() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearPackageID()
	})
}

// SetShipDate sets the "ship_date" field.
func (u *OrderUpsertOne) SetShipDate(v time.Time) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetShipDate(v)
	})
}

// UpdateShipDate sets the "ship_date" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateShipDate() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShipDate()
	})
}

// ClearShipDate clears the value of the "ship_date" field.
func (u *OrderUpsertOne) ClearShipDate() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearShipDate()
	})
}

// SetRequestShippingAt sets the "request_shipping_at" field.
func (u *OrderUpsertOne) SetRequestShippingAt(v time.Time) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetRequestShippingAt(v)
	})
}

// UpdateRequestShippingAt sets the "request_shipping_at" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateRequestShippingAt() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateRequestShippingAt()
	})
}

// ClearRequestShippingAt clears the value of the "request_shipping_at" field.
func (u *OrderUpsertOne) ClearRequestShippingAt() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearRequestShippingAt()
	})
}

// SetUnshelfRequestedTime sets the "unshelf_requested_time" field.
func (u *OrderUpsertOne) SetUnshelfRequestedTime(v time.Time) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetUnshelfRequestedTime(v)
	})
}

// UpdateUnshelfRequestedTime sets the "unshelf_requested_time" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateUnshelfRequestedTime() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateUnshelfRequestedTime()
	})
}

// ClearUnshelfRequestedTime clears the value of the "unshelf_requested_time" field.
func (u *OrderUpsertOne) ClearUnshelfRequestedTime() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearUnshelfRequestedTime()
	})
}

// SetContainerCode sets the "container_code" field.
func (u *OrderUpsertOne) SetContainerCode(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetContainerCode(v)
	})
}

// UpdateContainerCode sets the "container_code" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateContainerCode() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateContainerCode()
	})
}

// ClearContainerCode clears the value of the "container_code" field.
func (u *OrderUpsertOne) ClearContainerCode() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearContainerCode()
	})
}

// SetBasketNumber sets the "basket_number" field.
func (u *OrderUpsertOne) SetBasketNumber(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetBasketNumber(v)
	})
}

// UpdateBasketNumber sets the "basket_number" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateBasketNumber() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateBasketNumber()
	})
}

// ClearBasketNumber clears the value of the "basket_number" field.
func (u *OrderUpsertOne) ClearBasketNumber() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearBasketNumber()
	})
}

// SetPrintTimes sets the "print_times" field.
func (u *OrderUpsertOne) SetPrintTimes(v int) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetPrintTimes(v)
	})
}

// AddPrintTimes adds v to the "print_times" field.
func (u *OrderUpsertOne) AddPrintTimes(v int) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.AddPrintTimes(v)
	})
}

// UpdatePrintTimes sets the "print_times" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdatePrintTimes() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdatePrintTimes()
	})
}

// ClearPrintTimes clears the value of the "print_times" field.
func (u *OrderUpsertOne) ClearPrintTimes() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearPrintTimes()
	})
}

// SetSortingTrackingNumber sets the "sorting_tracking_number" field.
func (u *OrderUpsertOne) SetSortingTrackingNumber(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetSortingTrackingNumber(v)
	})
}

// UpdateSortingTrackingNumber sets the "sorting_tracking_number" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateSortingTrackingNumber() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateSortingTrackingNumber()
	})
}

// ClearSortingTrackingNumber clears the value of the "sorting_tracking_number" field.
func (u *OrderUpsertOne) ClearSortingTrackingNumber() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearSortingTrackingNumber()
	})
}

// SetSortingPort sets the "sorting_port" field.
func (u *OrderUpsertOne) SetSortingPort(v int32) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetSortingPort(v)
	})
}

// AddSortingPort adds v to the "sorting_port" field.
func (u *OrderUpsertOne) AddSortingPort(v int32) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.AddSortingPort(v)
	})
}

// UpdateSortingPort sets the "sorting_port" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateSortingPort() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateSortingPort()
	})
}

// ClearSortingPort clears the value of the "sorting_port" field.
func (u *OrderUpsertOne) ClearSortingPort() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearSortingPort()
	})
}

// SetSortingLength sets the "sorting_length" field.
func (u *OrderUpsertOne) SetSortingLength(v int) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetSortingLength(v)
	})
}

// AddSortingLength adds v to the "sorting_length" field.
func (u *OrderUpsertOne) AddSortingLength(v int) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.AddSortingLength(v)
	})
}

// UpdateSortingLength sets the "sorting_length" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateSortingLength() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateSortingLength()
	})
}

// ClearSortingLength clears the value of the "sorting_length" field.
func (u *OrderUpsertOne) ClearSortingLength() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearSortingLength()
	})
}

// SetSortingWidth sets the "sorting_width" field.
func (u *OrderUpsertOne) SetSortingWidth(v int) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetSortingWidth(v)
	})
}

// AddSortingWidth adds v to the "sorting_width" field.
func (u *OrderUpsertOne) AddSortingWidth(v int) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.AddSortingWidth(v)
	})
}

// UpdateSortingWidth sets the "sorting_width" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateSortingWidth() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateSortingWidth()
	})
}

// ClearSortingWidth clears the value of the "sorting_width" field.
func (u *OrderUpsertOne) ClearSortingWidth() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearSortingWidth()
	})
}

// SetSortingHeight sets the "sorting_height" field.
func (u *OrderUpsertOne) SetSortingHeight(v int) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetSortingHeight(v)
	})
}

// AddSortingHeight adds v to the "sorting_height" field.
func (u *OrderUpsertOne) AddSortingHeight(v int) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.AddSortingHeight(v)
	})
}

// UpdateSortingHeight sets the "sorting_height" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateSortingHeight() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateSortingHeight()
	})
}

// ClearSortingHeight clears the value of the "sorting_height" field.
func (u *OrderUpsertOne) ClearSortingHeight() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearSortingHeight()
	})
}

// SetSortingWeight sets the "sorting_weight" field.
func (u *OrderUpsertOne) SetSortingWeight(v int) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetSortingWeight(v)
	})
}

// AddSortingWeight adds v to the "sorting_weight" field.
func (u *OrderUpsertOne) AddSortingWeight(v int) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.AddSortingWeight(v)
	})
}

// UpdateSortingWeight sets the "sorting_weight" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateSortingWeight() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateSortingWeight()
	})
}

// ClearSortingWeight clears the value of the "sorting_weight" field.
func (u *OrderUpsertOne) ClearSortingWeight() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearSortingWeight()
	})
}

// SetEstimatedWeight sets the "estimated_weight" field.
func (u *OrderUpsertOne) SetEstimatedWeight(v int) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetEstimatedWeight(v)
	})
}

// AddEstimatedWeight adds v to the "estimated_weight" field.
func (u *OrderUpsertOne) AddEstimatedWeight(v int) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.AddEstimatedWeight(v)
	})
}

// UpdateEstimatedWeight sets the "estimated_weight" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateEstimatedWeight() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateEstimatedWeight()
	})
}

// ClearEstimatedWeight clears the value of the "estimated_weight" field.
func (u *OrderUpsertOne) ClearEstimatedWeight() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearEstimatedWeight()
	})
}

// SetCheckoutActualWeight sets the "checkout_actual_weight" field.
func (u *OrderUpsertOne) SetCheckoutActualWeight(v int) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetCheckoutActualWeight(v)
	})
}

// AddCheckoutActualWeight adds v to the "checkout_actual_weight" field.
func (u *OrderUpsertOne) AddCheckoutActualWeight(v int) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.AddCheckoutActualWeight(v)
	})
}

// UpdateCheckoutActualWeight sets the "checkout_actual_weight" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateCheckoutActualWeight() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateCheckoutActualWeight()
	})
}

// ClearCheckoutActualWeight clears the value of the "checkout_actual_weight" field.
func (u *OrderUpsertOne) ClearCheckoutActualWeight() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearCheckoutActualWeight()
	})
}

// SetVolumeWeight sets the "volume_weight" field.
func (u *OrderUpsertOne) SetVolumeWeight(v int) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetVolumeWeight(v)
	})
}

// AddVolumeWeight adds v to the "volume_weight" field.
func (u *OrderUpsertOne) AddVolumeWeight(v int) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.AddVolumeWeight(v)
	})
}

// UpdateVolumeWeight sets the "volume_weight" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateVolumeWeight() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateVolumeWeight()
	})
}

// ClearVolumeWeight clears the value of the "volume_weight" field.
func (u *OrderUpsertOne) ClearVolumeWeight() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearVolumeWeight()
	})
}

// SetCourierWeight sets the "courier_weight" field.
func (u *OrderUpsertOne) SetCourierWeight(v int) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetCourierWeight(v)
	})
}

// AddCourierWeight adds v to the "courier_weight" field.
func (u *OrderUpsertOne) AddCourierWeight(v int) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.AddCourierWeight(v)
	})
}

// UpdateCourierWeight sets the "courier_weight" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateCourierWeight() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateCourierWeight()
	})
}

// ClearCourierWeight clears the value of the "courier_weight" field.
func (u *OrderUpsertOne) ClearCourierWeight() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearCourierWeight()
	})
}

// SetDeclaredValueInUsd sets the "declared_value_in_usd" field.
func (u *OrderUpsertOne) SetDeclaredValueInUsd(v float64) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetDeclaredValueInUsd(v)
	})
}

// AddDeclaredValueInUsd adds v to the "declared_value_in_usd" field.
func (u *OrderUpsertOne) AddDeclaredValueInUsd(v float64) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.AddDeclaredValueInUsd(v)
	})
}

// UpdateDeclaredValueInUsd sets the "declared_value_in_usd" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateDeclaredValueInUsd() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateDeclaredValueInUsd()
	})
}

// ClearDeclaredValueInUsd clears the value of the "declared_value_in_usd" field.
func (u *OrderUpsertOne) ClearDeclaredValueInUsd() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearDeclaredValueInUsd()
	})
}

// SetDeclaredValueInEur sets the "declared_value_in_eur" field.
func (u *OrderUpsertOne) SetDeclaredValueInEur(v float64) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetDeclaredValueInEur(v)
	})
}

// AddDeclaredValueInEur adds v to the "declared_value_in_eur" field.
func (u *OrderUpsertOne) AddDeclaredValueInEur(v float64) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.AddDeclaredValueInEur(v)
	})
}

// UpdateDeclaredValueInEur sets the "declared_value_in_eur" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateDeclaredValueInEur() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateDeclaredValueInEur()
	})
}

// ClearDeclaredValueInEur clears the value of the "declared_value_in_eur" field.
func (u *OrderUpsertOne) ClearDeclaredValueInEur() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearDeclaredValueInEur()
	})
}

// SetTotalItemsPrice sets the "total_items_price" field.
func (u *OrderUpsertOne) SetTotalItemsPrice(v float64) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetTotalItemsPrice(v)
	})
}

// AddTotalItemsPrice adds v to the "total_items_price" field.
func (u *OrderUpsertOne) AddTotalItemsPrice(v float64) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.AddTotalItemsPrice(v)
	})
}

// UpdateTotalItemsPrice sets the "total_items_price" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateTotalItemsPrice() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateTotalItemsPrice()
	})
}

// ClearTotalItemsPrice clears the value of the "total_items_price" field.
func (u *OrderUpsertOne) ClearTotalItemsPrice() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearTotalItemsPrice()
	})
}

// SetCurrency sets the "currency" field.
func (u *OrderUpsertOne) SetCurrency(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetCurrency(v)
	})
}

// UpdateCurrency sets the "currency" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateCurrency() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateCurrency()
	})
}

// ClearCurrency clears the value of the "currency" field.
func (u *OrderUpsertOne) ClearCurrency() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.ClearCurrency()
	})
}

// SetDeliveryCost sets the "delivery_cost" field.
func (u *OrderUpsertOne) SetDeliveryCost(v float64) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetDeliveryCost(v)
	})
}

// AddDeliveryCost adds v to the "delivery_cost" field.
func (u *OrderUpsertOne) AddDeliveryCost(v float64) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.AddDeliveryCost(v)
	})
}

// UpdateDeliveryCost sets the "delivery_cost" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateDeliveryCost() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateDeliveryCost()
	})
}

// SetMiscFee sets the "misc_fee" field.
func (u *OrderUpsertOne) SetMiscFee(v float64) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetMiscFee(v)
	})
}

// AddMiscFee adds v to the "misc_fee" field.
func (u *OrderUpsertOne) AddMiscFee(v float64) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.AddMiscFee(v)
	})
}

// UpdateMiscFee sets the "misc_fee" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateMiscFee() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateMiscFee()
	})
}

// SetFuelFee sets the "fuel_fee" field.
func (u *OrderUpsertOne) SetFuelFee(v float64) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetFuelFee(v)
	})
}

// AddFuelFee adds v to the "fuel_fee" field.
func (u *OrderUpsertOne) AddFuelFee(v float64) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.AddFuelFee(v)
	})
}

// UpdateFuelFee sets the "fuel_fee" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateFuelFee() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateFuelFee()
	})
}

// SetRegistrationFee sets the "registration_fee" field.
func (u *OrderUpsertOne) SetRegistrationFee(v float64) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetRegistrationFee(v)
	})
}

// AddRegistrationFee adds v to the "registration_fee" field.
func (u *OrderUpsertOne) AddRegistrationFee(v float64) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.AddRegistrationFee(v)
	})
}

// UpdateRegistrationFee sets the "registration_fee" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateRegistrationFee() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateRegistrationFee()
	})
}

// SetProcessingFee sets the "processing_fee" field.
func (u *OrderUpsertOne) SetProcessingFee(v float64) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetProcessingFee(v)
	})
}

// AddProcessingFee adds v to the "processing_fee" field.
func (u *OrderUpsertOne) AddProcessingFee(v float64) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.AddProcessingFee(v)
	})
}

// UpdateProcessingFee sets the "processing_fee" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateProcessingFee() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateProcessingFee()
	})
}

// SetPackageFee sets the "package_fee" field.
func (u *OrderUpsertOne) SetPackageFee(v float64) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetPackageFee(v)
	})
}

// AddPackageFee adds v to the "package_fee" field.
func (u *OrderUpsertOne) AddPackageFee(v float64) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.AddPackageFee(v)
	})
}

// UpdatePackageFee sets the "package_fee" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdatePackageFee() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdatePackageFee()
	})
}

// SetHandlingFee sets the "handling_fee" field.
func (u *OrderUpsertOne) SetHandlingFee(v float64) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetHandlingFee(v)
	})
}

// AddHandlingFee adds v to the "handling_fee" field.
func (u *OrderUpsertOne) AddHandlingFee(v float64) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.AddHandlingFee(v)
	})
}

// UpdateHandlingFee sets the "handling_fee" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateHandlingFee() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateHandlingFee()
	})
}

// SetVat sets the "vat" field.
func (u *OrderUpsertOne) SetVat(v float64) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetVat(v)
	})
}

// AddVat adds v to the "vat" field.
func (u *OrderUpsertOne) AddVat(v float64) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.AddVat(v)
	})
}

// UpdateVat sets the "vat" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateVat() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateVat()
	})
}

// SetEstimatedCost sets the "estimated_cost" field.
func (u *OrderUpsertOne) SetEstimatedCost(v float64) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetEstimatedCost(v)
	})
}

// AddEstimatedCost adds v to the "estimated_cost" field.
func (u *OrderUpsertOne) AddEstimatedCost(v float64) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.AddEstimatedCost(v)
	})
}

// UpdateEstimatedCost sets the "estimated_cost" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateEstimatedCost() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateEstimatedCost()
	})
}

// SetEstimatedCurrency sets the "estimated_currency" field.
func (u *OrderUpsertOne) SetEstimatedCurrency(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetEstimatedCurrency(v)
	})
}

// UpdateEstimatedCurrency sets the "estimated_currency" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateEstimatedCurrency() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateEstimatedCurrency()
	})
}

// SetReceivablesAmount sets the "receivables_amount" field.
func (u *OrderUpsertOne) SetReceivablesAmount(v float64) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetReceivablesAmount(v)
	})
}

// AddReceivablesAmount adds v to the "receivables_amount" field.
func (u *OrderUpsertOne) AddReceivablesAmount(v float64) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.AddReceivablesAmount(v)
	})
}

// UpdateReceivablesAmount sets the "receivables_amount" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateReceivablesAmount() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateReceivablesAmount()
	})
}

// SetReceivablesCurrency sets the "receivables_currency" field.
func (u *OrderUpsertOne) SetReceivablesCurrency(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetReceivablesCurrency(v)
	})
}

// UpdateReceivablesCurrency sets the "receivables_currency" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateReceivablesCurrency() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateReceivablesCurrency()
	})
}

// SetNotAcceptPlatformUpdate sets the "not_accept_platform_update" field.
func (u *OrderUpsertOne) SetNotAcceptPlatformUpdate(v bool) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetNotAcceptPlatformUpdate(v)
	})
}

// UpdateNotAcceptPlatformUpdate sets the "not_accept_platform_update" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateNotAcceptPlatformUpdate() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateNotAcceptPlatformUpdate()
	})
}

// SetNotAcceptPlatformUpdateItem sets the "not_accept_platform_update_item" field.
func (u *OrderUpsertOne) SetNotAcceptPlatformUpdateItem(v bool) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetNotAcceptPlatformUpdateItem(v)
	})
}

// UpdateNotAcceptPlatformUpdateItem sets the "not_accept_platform_update_item" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateNotAcceptPlatformUpdateItem() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateNotAcceptPlatformUpdateItem()
	})
}

// SetJdPushedStatus sets the "jd_pushed_status" field.
func (u *OrderUpsertOne) SetJdPushedStatus(v string) *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.SetJdPushedStatus(v)
	})
}

// UpdateJdPushedStatus sets the "jd_pushed_status" field to the value that was provided on create.
func (u *OrderUpsertOne) UpdateJdPushedStatus() *OrderUpsertOne {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateJdPushedStatus()
	})
}

// Exec executes the query.
func (u *OrderUpsertOne) Exec(ctx context.Context) error {
	if len(u.create.conflict) == 0 {
		return errors.New("gen: missing options for OrderCreate.OnConflict")
	}
	return u.create.Exec(ctx)
}

// ExecX is like Exec, but panics if an error occurs.
func (u *OrderUpsertOne) ExecX(ctx context.Context) {
	if err := u.create.Exec(ctx); err != nil {
		panic(err)
	}
}

// Exec executes the UPSERT query and returns the inserted/updated ID.
func (u *OrderUpsertOne) ID(ctx context.Context) (id int64, err error) {
	node, err := u.create.Save(ctx)
	if err != nil {
		return id, err
	}
	return node.ID, nil
}

// IDX is like ID, but panics if an error occurs.
func (u *OrderUpsertOne) IDX(ctx context.Context) int64 {
	id, err := u.ID(ctx)
	if err != nil {
		panic(err)
	}
	return id
}

// OrderCreateBulk is the builder for creating many Order entities in bulk.
type OrderCreateBulk struct {
	config
	builders []*OrderCreate
	conflict []sql.ConflictOption
}

// Save creates the Order entities in the database.
func (ocb *OrderCreateBulk) Save(ctx context.Context) ([]*Order, error) {
	specs := make([]*sqlgraph.CreateSpec, len(ocb.builders))
	nodes := make([]*Order, len(ocb.builders))
	mutators := make([]Mutator, len(ocb.builders))
	for i := range ocb.builders {
		func(i int, root context.Context) {
			builder := ocb.builders[i]
			builder.defaults()
			var mut Mutator = MutateFunc(func(ctx context.Context, m Mutation) (Value, error) {
				mutation, ok := m.(*OrderMutation)
				if !ok {
					return nil, fmt.Errorf("unexpected mutation type %T", m)
				}
				if err := builder.check(); err != nil {
					return nil, err
				}
				builder.mutation = mutation
				nodes[i], specs[i] = builder.createSpec()
				var err error
				if i < len(mutators)-1 {
					_, err = mutators[i+1].Mutate(root, ocb.builders[i+1].mutation)
				} else {
					spec := &sqlgraph.BatchCreateSpec{Nodes: specs}
					spec.OnConflict = ocb.conflict
					// Invoke the actual operation on the latest mutation in the chain.
					if err = sqlgraph.BatchCreate(ctx, ocb.driver, spec); err != nil {
						if sqlgraph.IsConstraintError(err) {
							err = &ConstraintError{msg: err.Error(), wrap: err}
						}
					}
				}
				if err != nil {
					return nil, err
				}
				mutation.id = &nodes[i].ID
				if specs[i].ID.Value != nil && nodes[i].ID == 0 {
					id := specs[i].ID.Value.(int64)
					nodes[i].ID = int64(id)
				}
				mutation.done = true
				return nodes[i], nil
			})
			for i := len(builder.hooks) - 1; i >= 0; i-- {
				mut = builder.hooks[i](mut)
			}
			mutators[i] = mut
		}(i, ctx)
	}
	if len(mutators) > 0 {
		if _, err := mutators[0].Mutate(ctx, ocb.builders[0].mutation); err != nil {
			return nil, err
		}
	}
	return nodes, nil
}

// SaveX is like Save, but panics if an error occurs.
func (ocb *OrderCreateBulk) SaveX(ctx context.Context) []*Order {
	v, err := ocb.Save(ctx)
	if err != nil {
		panic(err)
	}
	return v
}

// Exec executes the query.
func (ocb *OrderCreateBulk) Exec(ctx context.Context) error {
	_, err := ocb.Save(ctx)
	return err
}

// ExecX is like Exec, but panics if an error occurs.
func (ocb *OrderCreateBulk) ExecX(ctx context.Context) {
	if err := ocb.Exec(ctx); err != nil {
		panic(err)
	}
}

// OnConflict allows configuring the `ON CONFLICT` / `ON DUPLICATE KEY` clause
// of the `INSERT` statement. For example:
//
//	client.Order.CreateBulk(builders...).
//		OnConflict(
//			// Update the row with the new values
//			// the was proposed for insertion.
//			sql.ResolveWithNewValues(),
//		).
//		// Override some of the fields with custom
//		// update values.
//		Update(func(u *ent.OrderUpsert) {
//			SetCreatedAt(v+v).
//		}).
//		Exec(ctx)
func (ocb *OrderCreateBulk) OnConflict(opts ...sql.ConflictOption) *OrderUpsertBulk {
	ocb.conflict = opts
	return &OrderUpsertBulk{
		create: ocb,
	}
}

// OnConflictColumns calls `OnConflict` and configures the columns
// as conflict target. Using this option is equivalent to using:
//
//	client.Order.Create().
//		OnConflict(sql.ConflictColumns(columns...)).
//		Exec(ctx)
func (ocb *OrderCreateBulk) OnConflictColumns(columns ...string) *OrderUpsertBulk {
	ocb.conflict = append(ocb.conflict, sql.ConflictColumns(columns...))
	return &OrderUpsertBulk{
		create: ocb,
	}
}

// OrderUpsertBulk is the builder for "upsert"-ing
// a bulk of Order nodes.
type OrderUpsertBulk struct {
	create *OrderCreateBulk
}

// UpdateNewValues updates the mutable fields using the new values that
// were set on create. Using this option is equivalent to using:
//
//	client.Order.Create().
//		OnConflict(
//			sql.ResolveWithNewValues(),
//			sql.ResolveWith(func(u *sql.UpdateSet) {
//				u.SetIgnore(order.FieldID)
//			}),
//		).
//		Exec(ctx)
func (u *OrderUpsertBulk) UpdateNewValues() *OrderUpsertBulk {
	u.create.conflict = append(u.create.conflict, sql.ResolveWithNewValues())
	u.create.conflict = append(u.create.conflict, sql.ResolveWith(func(s *sql.UpdateSet) {
		for _, b := range u.create.builders {
			if _, exists := b.mutation.ID(); exists {
				s.SetIgnore(order.FieldID)
			}
			if _, exists := b.mutation.CreatedAt(); exists {
				s.SetIgnore(order.FieldCreatedAt)
			}
		}
	}))
	return u
}

// Ignore sets each column to itself in case of conflict.
// Using this option is equivalent to using:
//
//	client.Order.Create().
//		OnConflict(sql.ResolveWithIgnore()).
//		Exec(ctx)
func (u *OrderUpsertBulk) Ignore() *OrderUpsertBulk {
	u.create.conflict = append(u.create.conflict, sql.ResolveWithIgnore())
	return u
}

// DoNothing configures the conflict_action to `DO NOTHING`.
// Supported only by SQLite and PostgreSQL.
func (u *OrderUpsertBulk) DoNothing() *OrderUpsertBulk {
	u.create.conflict = append(u.create.conflict, sql.DoNothing())
	return u
}

// Update allows overriding fields `UPDATE` values. See the OrderCreateBulk.OnConflict
// documentation for more info.
func (u *OrderUpsertBulk) Update(set func(*OrderUpsert)) *OrderUpsertBulk {
	u.create.conflict = append(u.create.conflict, sql.ResolveWith(func(update *sql.UpdateSet) {
		set(&OrderUpsert{UpdateSet: update})
	}))
	return u
}

// SetUpdatedAt sets the "updated_at" field.
func (u *OrderUpsertBulk) SetUpdatedAt(v time.Time) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetUpdatedAt(v)
	})
}

// UpdateUpdatedAt sets the "updated_at" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateUpdatedAt() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateUpdatedAt()
	})
}

// SetDeletedAt sets the "deleted_at" field.
func (u *OrderUpsertBulk) SetDeletedAt(v time.Time) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetDeletedAt(v)
	})
}

// UpdateDeletedAt sets the "deleted_at" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateDeletedAt() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateDeletedAt()
	})
}

// ClearDeletedAt clears the value of the "deleted_at" field.
func (u *OrderUpsertBulk) ClearDeletedAt() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearDeletedAt()
	})
}

// SetOrderNumber sets the "order_number" field.
func (u *OrderUpsertBulk) SetOrderNumber(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetOrderNumber(v)
	})
}

// UpdateOrderNumber sets the "order_number" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateOrderNumber() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateOrderNumber()
	})
}

// SetMode sets the "mode" field.
func (u *OrderUpsertBulk) SetMode(v int8) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetMode(v)
	})
}

// AddMode adds v to the "mode" field.
func (u *OrderUpsertBulk) AddMode(v int8) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.AddMode(v)
	})
}

// UpdateMode sets the "mode" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateMode() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateMode()
	})
}

// SetType sets the "type" field.
func (u *OrderUpsertBulk) SetType(v int8) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetType(v)
	})
}

// AddType adds v to the "type" field.
func (u *OrderUpsertBulk) AddType(v int8) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.AddType(v)
	})
}

// UpdateType sets the "type" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateType() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateType()
	})
}

// SetOffline sets the "offline" field.
func (u *OrderUpsertBulk) SetOffline(v bool) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetOffline(v)
	})
}

// UpdateOffline sets the "offline" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateOffline() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateOffline()
	})
}

// SetStoreID sets the "store_id" field.
func (u *OrderUpsertBulk) SetStoreID(v int64) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetStoreID(v)
	})
}

// UpdateStoreID sets the "store_id" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateStoreID() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateStoreID()
	})
}

// ClearStoreID clears the value of the "store_id" field.
func (u *OrderUpsertBulk) ClearStoreID() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearStoreID()
	})
}

// SetWarehouseID sets the "warehouse_id" field.
func (u *OrderUpsertBulk) SetWarehouseID(v int64) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetWarehouseID(v)
	})
}

// UpdateWarehouseID sets the "warehouse_id" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateWarehouseID() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateWarehouseID()
	})
}

// ClearWarehouseID clears the value of the "warehouse_id" field.
func (u *OrderUpsertBulk) ClearWarehouseID() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearWarehouseID()
	})
}

// SetCustomerCode sets the "customer_code" field.
func (u *OrderUpsertBulk) SetCustomerCode(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetCustomerCode(v)
	})
}

// UpdateCustomerCode sets the "customer_code" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateCustomerCode() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateCustomerCode()
	})
}

// SetPrepayTariff sets the "prepay_tariff" field.
func (u *OrderUpsertBulk) SetPrepayTariff(v bool) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetPrepayTariff(v)
	})
}

// UpdatePrepayTariff sets the "prepay_tariff" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdatePrepayTariff() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdatePrepayTariff()
	})
}

// SetIossNumber sets the "ioss_number" field.
func (u *OrderUpsertBulk) SetIossNumber(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetIossNumber(v)
	})
}

// UpdateIossNumber sets the "ioss_number" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateIossNumber() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateIossNumber()
	})
}

// SetIossCountryCode sets the "ioss_country_code" field.
func (u *OrderUpsertBulk) SetIossCountryCode(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetIossCountryCode(v)
	})
}

// UpdateIossCountryCode sets the "ioss_country_code" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateIossCountryCode() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateIossCountryCode()
	})
}

// SetIossNumberType sets the "ioss_number_type" field.
func (u *OrderUpsertBulk) SetIossNumberType(v int8) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetIossNumberType(v)
	})
}

// AddIossNumberType adds v to the "ioss_number_type" field.
func (u *OrderUpsertBulk) AddIossNumberType(v int8) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.AddIossNumberType(v)
	})
}

// UpdateIossNumberType sets the "ioss_number_type" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateIossNumberType() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateIossNumberType()
	})
}

// SetUkVatNumber sets the "uk_vat_number" field.
func (u *OrderUpsertBulk) SetUkVatNumber(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetUkVatNumber(v)
	})
}

// UpdateUkVatNumber sets the "uk_vat_number" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateUkVatNumber() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateUkVatNumber()
	})
}

// SetInboundOrderNumber sets the "inbound_order_number" field.
func (u *OrderUpsertBulk) SetInboundOrderNumber(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetInboundOrderNumber(v)
	})
}

// UpdateInboundOrderNumber sets the "inbound_order_number" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateInboundOrderNumber() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateInboundOrderNumber()
	})
}

// SetStatus sets the "status" field.
func (u *OrderUpsertBulk) SetStatus(v int8) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetStatus(v)
	})
}

// AddStatus adds v to the "status" field.
func (u *OrderUpsertBulk) AddStatus(v int8) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.AddStatus(v)
	})
}

// UpdateStatus sets the "status" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateStatus() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateStatus()
	})
}

// SetSqsStatus sets the "sqs_status" field.
func (u *OrderUpsertBulk) SetSqsStatus(v bool) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetSqsStatus(v)
	})
}

// UpdateSqsStatus sets the "sqs_status" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateSqsStatus() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateSqsStatus()
	})
}

// ClearSqsStatus clears the value of the "sqs_status" field.
func (u *OrderUpsertBulk) ClearSqsStatus() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearSqsStatus()
	})
}

// SetHoldStatus sets the "hold_status" field.
func (u *OrderUpsertBulk) SetHoldStatus(v bool) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetHoldStatus(v)
	})
}

// UpdateHoldStatus sets the "hold_status" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateHoldStatus() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateHoldStatus()
	})
}

// ClearHoldStatus clears the value of the "hold_status" field.
func (u *OrderUpsertBulk) ClearHoldStatus() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearHoldStatus()
	})
}

// SetPaymentStatus sets the "payment_status" field.
func (u *OrderUpsertBulk) SetPaymentStatus(v int8) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetPaymentStatus(v)
	})
}

// AddPaymentStatus adds v to the "payment_status" field.
func (u *OrderUpsertBulk) AddPaymentStatus(v int8) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.AddPaymentStatus(v)
	})
}

// UpdatePaymentStatus sets the "payment_status" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdatePaymentStatus() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdatePaymentStatus()
	})
}

// ClearPaymentStatus clears the value of the "payment_status" field.
func (u *OrderUpsertBulk) ClearPaymentStatus() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearPaymentStatus()
	})
}

// SetCancelRequest sets the "cancel_request" field.
func (u *OrderUpsertBulk) SetCancelRequest(v int8) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetCancelRequest(v)
	})
}

// AddCancelRequest adds v to the "cancel_request" field.
func (u *OrderUpsertBulk) AddCancelRequest(v int8) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.AddCancelRequest(v)
	})
}

// UpdateCancelRequest sets the "cancel_request" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateCancelRequest() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateCancelRequest()
	})
}

// ClearCancelRequest clears the value of the "cancel_request" field.
func (u *OrderUpsertBulk) ClearCancelRequest() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearCancelRequest()
	})
}

// SetPlatform sets the "platform" field.
func (u *OrderUpsertBulk) SetPlatform(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetPlatform(v)
	})
}

// UpdatePlatform sets the "platform" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdatePlatform() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdatePlatform()
	})
}

// SetPlatformOrderID sets the "platform_order_id" field.
func (u *OrderUpsertBulk) SetPlatformOrderID(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetPlatformOrderID(v)
	})
}

// UpdatePlatformOrderID sets the "platform_order_id" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdatePlatformOrderID() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdatePlatformOrderID()
	})
}

// ClearPlatformOrderID clears the value of the "platform_order_id" field.
func (u *OrderUpsertBulk) ClearPlatformOrderID() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearPlatformOrderID()
	})
}

// SetPlatformOrderNo sets the "platform_order_no" field.
func (u *OrderUpsertBulk) SetPlatformOrderNo(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetPlatformOrderNo(v)
	})
}

// UpdatePlatformOrderNo sets the "platform_order_no" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdatePlatformOrderNo() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdatePlatformOrderNo()
	})
}

// ClearPlatformOrderNo clears the value of the "platform_order_no" field.
func (u *OrderUpsertBulk) ClearPlatformOrderNo() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearPlatformOrderNo()
	})
}

// SetPlatformOrderStatusURL sets the "platform_order_status_url" field.
func (u *OrderUpsertBulk) SetPlatformOrderStatusURL(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetPlatformOrderStatusURL(v)
	})
}

// UpdatePlatformOrderStatusURL sets the "platform_order_status_url" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdatePlatformOrderStatusURL() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdatePlatformOrderStatusURL()
	})
}

// ClearPlatformOrderStatusURL clears the value of the "platform_order_status_url" field.
func (u *OrderUpsertBulk) ClearPlatformOrderStatusURL() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearPlatformOrderStatusURL()
	})
}

// SetPlatformStatus sets the "platform_status" field.
func (u *OrderUpsertBulk) SetPlatformStatus(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetPlatformStatus(v)
	})
}

// UpdatePlatformStatus sets the "platform_status" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdatePlatformStatus() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdatePlatformStatus()
	})
}

// ClearPlatformStatus clears the value of the "platform_status" field.
func (u *OrderUpsertBulk) ClearPlatformStatus() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearPlatformStatus()
	})
}

// SetPaidStatus sets the "paid_status" field.
func (u *OrderUpsertBulk) SetPaidStatus(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetPaidStatus(v)
	})
}

// UpdatePaidStatus sets the "paid_status" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdatePaidStatus() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdatePaidStatus()
	})
}

// ClearPaidStatus clears the value of the "paid_status" field.
func (u *OrderUpsertBulk) ClearPaidStatus() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearPaidStatus()
	})
}

// SetFulfillmentPushed sets the "fulfillment_pushed" field.
func (u *OrderUpsertBulk) SetFulfillmentPushed(v bool) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetFulfillmentPushed(v)
	})
}

// UpdateFulfillmentPushed sets the "fulfillment_pushed" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateFulfillmentPushed() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateFulfillmentPushed()
	})
}

// ClearFulfillmentPushed clears the value of the "fulfillment_pushed" field.
func (u *OrderUpsertBulk) ClearFulfillmentPushed() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearFulfillmentPushed()
	})
}

// SetFulfillmentStatus sets the "fulfillment_status" field.
func (u *OrderUpsertBulk) SetFulfillmentStatus(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetFulfillmentStatus(v)
	})
}

// UpdateFulfillmentStatus sets the "fulfillment_status" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateFulfillmentStatus() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateFulfillmentStatus()
	})
}

// ClearFulfillmentStatus clears the value of the "fulfillment_status" field.
func (u *OrderUpsertBulk) ClearFulfillmentStatus() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearFulfillmentStatus()
	})
}

// SetPlatformCreatedAt sets the "platform_created_at" field.
func (u *OrderUpsertBulk) SetPlatformCreatedAt(v time.Time) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetPlatformCreatedAt(v)
	})
}

// UpdatePlatformCreatedAt sets the "platform_created_at" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdatePlatformCreatedAt() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdatePlatformCreatedAt()
	})
}

// ClearPlatformCreatedAt clears the value of the "platform_created_at" field.
func (u *OrderUpsertBulk) ClearPlatformCreatedAt() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearPlatformCreatedAt()
	})
}

// SetLocationID sets the "location_id" field.
func (u *OrderUpsertBulk) SetLocationID(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetLocationID(v)
	})
}

// UpdateLocationID sets the "location_id" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateLocationID() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateLocationID()
	})
}

// ClearLocationID clears the value of the "location_id" field.
func (u *OrderUpsertBulk) ClearLocationID() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearLocationID()
	})
}

// SetTags sets the "tags" field.
func (u *OrderUpsertBulk) SetTags(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetTags(v)
	})
}

// UpdateTags sets the "tags" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateTags() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateTags()
	})
}

// ClearTags clears the value of the "tags" field.
func (u *OrderUpsertBulk) ClearTags() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearTags()
	})
}

// SetNote sets the "note" field.
func (u *OrderUpsertBulk) SetNote(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetNote(v)
	})
}

// UpdateNote sets the "note" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateNote() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateNote()
	})
}

// ClearNote clears the value of the "note" field.
func (u *OrderUpsertBulk) ClearNote() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearNote()
	})
}

// SetCancelReason sets the "cancel_reason" field.
func (u *OrderUpsertBulk) SetCancelReason(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetCancelReason(v)
	})
}

// UpdateCancelReason sets the "cancel_reason" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateCancelReason() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateCancelReason()
	})
}

// ClearCancelReason clears the value of the "cancel_reason" field.
func (u *OrderUpsertBulk) ClearCancelReason() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearCancelReason()
	})
}

// SetCancelledAt sets the "cancelled_at" field.
func (u *OrderUpsertBulk) SetCancelledAt(v time.Time) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetCancelledAt(v)
	})
}

// UpdateCancelledAt sets the "cancelled_at" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateCancelledAt() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateCancelledAt()
	})
}

// ClearCancelledAt clears the value of the "cancelled_at" field.
func (u *OrderUpsertBulk) ClearCancelledAt() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearCancelledAt()
	})
}

// SetClosedAt sets the "closed_at" field.
func (u *OrderUpsertBulk) SetClosedAt(v time.Time) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetClosedAt(v)
	})
}

// UpdateClosedAt sets the "closed_at" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateClosedAt() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateClosedAt()
	})
}

// ClearClosedAt clears the value of the "closed_at" field.
func (u *OrderUpsertBulk) ClearClosedAt() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearClosedAt()
	})
}

// SetContactEmail sets the "contact_email" field.
func (u *OrderUpsertBulk) SetContactEmail(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetContactEmail(v)
	})
}

// UpdateContactEmail sets the "contact_email" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateContactEmail() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateContactEmail()
	})
}

// SetContactPhone sets the "contact_phone" field.
func (u *OrderUpsertBulk) SetContactPhone(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetContactPhone(v)
	})
}

// UpdateContactPhone sets the "contact_phone" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateContactPhone() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateContactPhone()
	})
}

// SetShippingName sets the "shipping_name" field.
func (u *OrderUpsertBulk) SetShippingName(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetShippingName(v)
	})
}

// UpdateShippingName sets the "shipping_name" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateShippingName() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShippingName()
	})
}

// SetShippingFirstName sets the "shipping_first_name" field.
func (u *OrderUpsertBulk) SetShippingFirstName(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetShippingFirstName(v)
	})
}

// UpdateShippingFirstName sets the "shipping_first_name" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateShippingFirstName() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShippingFirstName()
	})
}

// SetShippingLastName sets the "shipping_last_name" field.
func (u *OrderUpsertBulk) SetShippingLastName(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetShippingLastName(v)
	})
}

// UpdateShippingLastName sets the "shipping_last_name" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateShippingLastName() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShippingLastName()
	})
}

// SetShippingCompany sets the "shipping_company" field.
func (u *OrderUpsertBulk) SetShippingCompany(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetShippingCompany(v)
	})
}

// UpdateShippingCompany sets the "shipping_company" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateShippingCompany() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShippingCompany()
	})
}

// SetShippingCountry sets the "shipping_country" field.
func (u *OrderUpsertBulk) SetShippingCountry(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetShippingCountry(v)
	})
}

// UpdateShippingCountry sets the "shipping_country" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateShippingCountry() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShippingCountry()
	})
}

// SetShippingCountryCode sets the "shipping_country_code" field.
func (u *OrderUpsertBulk) SetShippingCountryCode(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetShippingCountryCode(v)
	})
}

// UpdateShippingCountryCode sets the "shipping_country_code" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateShippingCountryCode() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShippingCountryCode()
	})
}

// SetShippingProvince sets the "shipping_province" field.
func (u *OrderUpsertBulk) SetShippingProvince(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetShippingProvince(v)
	})
}

// UpdateShippingProvince sets the "shipping_province" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateShippingProvince() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShippingProvince()
	})
}

// SetShippingProvinceCode sets the "shipping_province_code" field.
func (u *OrderUpsertBulk) SetShippingProvinceCode(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetShippingProvinceCode(v)
	})
}

// UpdateShippingProvinceCode sets the "shipping_province_code" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateShippingProvinceCode() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShippingProvinceCode()
	})
}

// SetShippingCity sets the "shipping_city" field.
func (u *OrderUpsertBulk) SetShippingCity(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetShippingCity(v)
	})
}

// UpdateShippingCity sets the "shipping_city" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateShippingCity() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShippingCity()
	})
}

// SetShippingAddress1 sets the "shipping_address1" field.
func (u *OrderUpsertBulk) SetShippingAddress1(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetShippingAddress1(v)
	})
}

// UpdateShippingAddress1 sets the "shipping_address1" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateShippingAddress1() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShippingAddress1()
	})
}

// SetShippingAddress2 sets the "shipping_address2" field.
func (u *OrderUpsertBulk) SetShippingAddress2(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetShippingAddress2(v)
	})
}

// UpdateShippingAddress2 sets the "shipping_address2" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateShippingAddress2() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShippingAddress2()
	})
}

// SetShippingZipCode sets the "shipping_zip_code" field.
func (u *OrderUpsertBulk) SetShippingZipCode(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetShippingZipCode(v)
	})
}

// UpdateShippingZipCode sets the "shipping_zip_code" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateShippingZipCode() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShippingZipCode()
	})
}

// SetShippingPhone sets the "shipping_phone" field.
func (u *OrderUpsertBulk) SetShippingPhone(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetShippingPhone(v)
	})
}

// UpdateShippingPhone sets the "shipping_phone" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateShippingPhone() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShippingPhone()
	})
}

// SetShippingCertificateType sets the "shipping_certificate_type" field.
func (u *OrderUpsertBulk) SetShippingCertificateType(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetShippingCertificateType(v)
	})
}

// UpdateShippingCertificateType sets the "shipping_certificate_type" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateShippingCertificateType() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShippingCertificateType()
	})
}

// ClearShippingCertificateType clears the value of the "shipping_certificate_type" field.
func (u *OrderUpsertBulk) ClearShippingCertificateType() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearShippingCertificateType()
	})
}

// SetShippingCertificateCode sets the "shipping_certificate_code" field.
func (u *OrderUpsertBulk) SetShippingCertificateCode(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetShippingCertificateCode(v)
	})
}

// UpdateShippingCertificateCode sets the "shipping_certificate_code" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateShippingCertificateCode() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShippingCertificateCode()
	})
}

// ClearShippingCertificateCode clears the value of the "shipping_certificate_code" field.
func (u *OrderUpsertBulk) ClearShippingCertificateCode() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearShippingCertificateCode()
	})
}

// SetShippingCredentialsPeriod sets the "shipping_credentials_period" field.
func (u *OrderUpsertBulk) SetShippingCredentialsPeriod(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetShippingCredentialsPeriod(v)
	})
}

// UpdateShippingCredentialsPeriod sets the "shipping_credentials_period" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateShippingCredentialsPeriod() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShippingCredentialsPeriod()
	})
}

// ClearShippingCredentialsPeriod clears the value of the "shipping_credentials_period" field.
func (u *OrderUpsertBulk) ClearShippingCredentialsPeriod() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearShippingCredentialsPeriod()
	})
}

// SetRemark sets the "remark" field.
func (u *OrderUpsertBulk) SetRemark(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetRemark(v)
	})
}

// UpdateRemark sets the "remark" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateRemark() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateRemark()
	})
}

// ClearRemark clears the value of the "remark" field.
func (u *OrderUpsertBulk) ClearRemark() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearRemark()
	})
}

// SetPreferShippedType sets the "prefer_shipped_type" field.
func (u *OrderUpsertBulk) SetPreferShippedType(v int8) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetPreferShippedType(v)
	})
}

// AddPreferShippedType adds v to the "prefer_shipped_type" field.
func (u *OrderUpsertBulk) AddPreferShippedType(v int8) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.AddPreferShippedType(v)
	})
}

// UpdatePreferShippedType sets the "prefer_shipped_type" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdatePreferShippedType() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdatePreferShippedType()
	})
}

// ClearPreferShippedType clears the value of the "prefer_shipped_type" field.
func (u *OrderUpsertBulk) ClearPreferShippedType() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearPreferShippedType()
	})
}

// SetPreferChannelID sets the "prefer_channel_id" field.
func (u *OrderUpsertBulk) SetPreferChannelID(v int64) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetPreferChannelID(v)
	})
}

// AddPreferChannelID adds v to the "prefer_channel_id" field.
func (u *OrderUpsertBulk) AddPreferChannelID(v int64) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.AddPreferChannelID(v)
	})
}

// UpdatePreferChannelID sets the "prefer_channel_id" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdatePreferChannelID() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdatePreferChannelID()
	})
}

// ClearPreferChannelID clears the value of the "prefer_channel_id" field.
func (u *OrderUpsertBulk) ClearPreferChannelID() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearPreferChannelID()
	})
}

// SetChannelOptions sets the "channel_options" field.
func (u *OrderUpsertBulk) SetChannelOptions(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetChannelOptions(v)
	})
}

// UpdateChannelOptions sets the "channel_options" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateChannelOptions() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateChannelOptions()
	})
}

// ClearChannelOptions clears the value of the "channel_options" field.
func (u *OrderUpsertBulk) ClearChannelOptions() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearChannelOptions()
	})
}

// SetChannelID sets the "channel_id" field.
func (u *OrderUpsertBulk) SetChannelID(v int64) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetChannelID(v)
	})
}

// UpdateChannelID sets the "channel_id" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateChannelID() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateChannelID()
	})
}

// ClearChannelID clears the value of the "channel_id" field.
func (u *OrderUpsertBulk) ClearChannelID() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearChannelID()
	})
}

// SetChannelCostID sets the "channel_cost_id" field.
func (u *OrderUpsertBulk) SetChannelCostID(v int64) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetChannelCostID(v)
	})
}

// AddChannelCostID adds v to the "channel_cost_id" field.
func (u *OrderUpsertBulk) AddChannelCostID(v int64) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.AddChannelCostID(v)
	})
}

// UpdateChannelCostID sets the "channel_cost_id" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateChannelCostID() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateChannelCostID()
	})
}

// ClearChannelCostID clears the value of the "channel_cost_id" field.
func (u *OrderUpsertBulk) ClearChannelCostID() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearChannelCostID()
	})
}

// SetShipType sets the "ship_type" field.
func (u *OrderUpsertBulk) SetShipType(v int8) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetShipType(v)
	})
}

// AddShipType adds v to the "ship_type" field.
func (u *OrderUpsertBulk) AddShipType(v int8) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.AddShipType(v)
	})
}

// UpdateShipType sets the "ship_type" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateShipType() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShipType()
	})
}

// ClearShipType clears the value of the "ship_type" field.
func (u *OrderUpsertBulk) ClearShipType() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearShipType()
	})
}

// SetTrackingCompany sets the "tracking_company" field.
func (u *OrderUpsertBulk) SetTrackingCompany(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetTrackingCompany(v)
	})
}

// UpdateTrackingCompany sets the "tracking_company" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateTrackingCompany() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateTrackingCompany()
	})
}

// ClearTrackingCompany clears the value of the "tracking_company" field.
func (u *OrderUpsertBulk) ClearTrackingCompany() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearTrackingCompany()
	})
}

// SetTrackingNumber sets the "tracking_number" field.
func (u *OrderUpsertBulk) SetTrackingNumber(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetTrackingNumber(v)
	})
}

// UpdateTrackingNumber sets the "tracking_number" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateTrackingNumber() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateTrackingNumber()
	})
}

// ClearTrackingNumber clears the value of the "tracking_number" field.
func (u *OrderUpsertBulk) ClearTrackingNumber() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearTrackingNumber()
	})
}

// SetTrackingURL sets the "tracking_url" field.
func (u *OrderUpsertBulk) SetTrackingURL(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetTrackingURL(v)
	})
}

// UpdateTrackingURL sets the "tracking_url" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateTrackingURL() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateTrackingURL()
	})
}

// ClearTrackingURL clears the value of the "tracking_url" field.
func (u *OrderUpsertBulk) ClearTrackingURL() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearTrackingURL()
	})
}

// SetWaybillNumber sets the "waybill_number" field.
func (u *OrderUpsertBulk) SetWaybillNumber(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetWaybillNumber(v)
	})
}

// UpdateWaybillNumber sets the "waybill_number" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateWaybillNumber() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateWaybillNumber()
	})
}

// ClearWaybillNumber clears the value of the "waybill_number" field.
func (u *OrderUpsertBulk) ClearWaybillNumber() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearWaybillNumber()
	})
}

// SetCourierOrderNumber sets the "courier_order_number" field.
func (u *OrderUpsertBulk) SetCourierOrderNumber(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetCourierOrderNumber(v)
	})
}

// UpdateCourierOrderNumber sets the "courier_order_number" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateCourierOrderNumber() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateCourierOrderNumber()
	})
}

// ClearCourierOrderNumber clears the value of the "courier_order_number" field.
func (u *OrderUpsertBulk) ClearCourierOrderNumber() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearCourierOrderNumber()
	})
}

// SetNssCourierOrderNumber sets the "nss_courier_order_number" field.
func (u *OrderUpsertBulk) SetNssCourierOrderNumber(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetNssCourierOrderNumber(v)
	})
}

// UpdateNssCourierOrderNumber sets the "nss_courier_order_number" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateNssCourierOrderNumber() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateNssCourierOrderNumber()
	})
}

// ClearNssCourierOrderNumber clears the value of the "nss_courier_order_number" field.
func (u *OrderUpsertBulk) ClearNssCourierOrderNumber() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearNssCourierOrderNumber()
	})
}

// SetNssTrackingNumber sets the "nss_tracking_number" field.
func (u *OrderUpsertBulk) SetNssTrackingNumber(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetNssTrackingNumber(v)
	})
}

// UpdateNssTrackingNumber sets the "nss_tracking_number" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateNssTrackingNumber() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateNssTrackingNumber()
	})
}

// ClearNssTrackingNumber clears the value of the "nss_tracking_number" field.
func (u *OrderUpsertBulk) ClearNssTrackingNumber() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearNssTrackingNumber()
	})
}

// SetNssTrackingURL sets the "nss_tracking_url" field.
func (u *OrderUpsertBulk) SetNssTrackingURL(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetNssTrackingURL(v)
	})
}

// UpdateNssTrackingURL sets the "nss_tracking_url" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateNssTrackingURL() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateNssTrackingURL()
	})
}

// ClearNssTrackingURL clears the value of the "nss_tracking_url" field.
func (u *OrderUpsertBulk) ClearNssTrackingURL() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearNssTrackingURL()
	})
}

// SetShippingLabelURL sets the "shipping_label_url" field.
func (u *OrderUpsertBulk) SetShippingLabelURL(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetShippingLabelURL(v)
	})
}

// UpdateShippingLabelURL sets the "shipping_label_url" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateShippingLabelURL() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShippingLabelURL()
	})
}

// ClearShippingLabelURL clears the value of the "shipping_label_url" field.
func (u *OrderUpsertBulk) ClearShippingLabelURL() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearShippingLabelURL()
	})
}

// SetShippingLabelPath sets the "shipping_label_path" field.
func (u *OrderUpsertBulk) SetShippingLabelPath(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetShippingLabelPath(v)
	})
}

// UpdateShippingLabelPath sets the "shipping_label_path" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateShippingLabelPath() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShippingLabelPath()
	})
}

// ClearShippingLabelPath clears the value of the "shipping_label_path" field.
func (u *OrderUpsertBulk) ClearShippingLabelPath() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearShippingLabelPath()
	})
}

// SetLabelDataPath sets the "label_data_path" field.
func (u *OrderUpsertBulk) SetLabelDataPath(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetLabelDataPath(v)
	})
}

// UpdateLabelDataPath sets the "label_data_path" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateLabelDataPath() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateLabelDataPath()
	})
}

// ClearLabelDataPath clears the value of the "label_data_path" field.
func (u *OrderUpsertBulk) ClearLabelDataPath() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearLabelDataPath()
	})
}

// SetPackageID sets the "package_id" field.
func (u *OrderUpsertBulk) SetPackageID(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetPackageID(v)
	})
}

// UpdatePackageID sets the "package_id" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdatePackageID() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdatePackageID()
	})
}

// ClearPackageID clears the value of the "package_id" field.
func (u *OrderUpsertBulk) ClearPackageID() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearPackageID()
	})
}

// SetShipDate sets the "ship_date" field.
func (u *OrderUpsertBulk) SetShipDate(v time.Time) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetShipDate(v)
	})
}

// UpdateShipDate sets the "ship_date" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateShipDate() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateShipDate()
	})
}

// ClearShipDate clears the value of the "ship_date" field.
func (u *OrderUpsertBulk) ClearShipDate() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearShipDate()
	})
}

// SetRequestShippingAt sets the "request_shipping_at" field.
func (u *OrderUpsertBulk) SetRequestShippingAt(v time.Time) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetRequestShippingAt(v)
	})
}

// UpdateRequestShippingAt sets the "request_shipping_at" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateRequestShippingAt() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateRequestShippingAt()
	})
}

// ClearRequestShippingAt clears the value of the "request_shipping_at" field.
func (u *OrderUpsertBulk) ClearRequestShippingAt() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearRequestShippingAt()
	})
}

// SetUnshelfRequestedTime sets the "unshelf_requested_time" field.
func (u *OrderUpsertBulk) SetUnshelfRequestedTime(v time.Time) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetUnshelfRequestedTime(v)
	})
}

// UpdateUnshelfRequestedTime sets the "unshelf_requested_time" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateUnshelfRequestedTime() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateUnshelfRequestedTime()
	})
}

// ClearUnshelfRequestedTime clears the value of the "unshelf_requested_time" field.
func (u *OrderUpsertBulk) ClearUnshelfRequestedTime() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearUnshelfRequestedTime()
	})
}

// SetContainerCode sets the "container_code" field.
func (u *OrderUpsertBulk) SetContainerCode(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetContainerCode(v)
	})
}

// UpdateContainerCode sets the "container_code" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateContainerCode() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateContainerCode()
	})
}

// ClearContainerCode clears the value of the "container_code" field.
func (u *OrderUpsertBulk) ClearContainerCode() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearContainerCode()
	})
}

// SetBasketNumber sets the "basket_number" field.
func (u *OrderUpsertBulk) SetBasketNumber(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetBasketNumber(v)
	})
}

// UpdateBasketNumber sets the "basket_number" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateBasketNumber() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateBasketNumber()
	})
}

// ClearBasketNumber clears the value of the "basket_number" field.
func (u *OrderUpsertBulk) ClearBasketNumber() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearBasketNumber()
	})
}

// SetPrintTimes sets the "print_times" field.
func (u *OrderUpsertBulk) SetPrintTimes(v int) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetPrintTimes(v)
	})
}

// AddPrintTimes adds v to the "print_times" field.
func (u *OrderUpsertBulk) AddPrintTimes(v int) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.AddPrintTimes(v)
	})
}

// UpdatePrintTimes sets the "print_times" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdatePrintTimes() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdatePrintTimes()
	})
}

// ClearPrintTimes clears the value of the "print_times" field.
func (u *OrderUpsertBulk) ClearPrintTimes() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearPrintTimes()
	})
}

// SetSortingTrackingNumber sets the "sorting_tracking_number" field.
func (u *OrderUpsertBulk) SetSortingTrackingNumber(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetSortingTrackingNumber(v)
	})
}

// UpdateSortingTrackingNumber sets the "sorting_tracking_number" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateSortingTrackingNumber() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateSortingTrackingNumber()
	})
}

// ClearSortingTrackingNumber clears the value of the "sorting_tracking_number" field.
func (u *OrderUpsertBulk) ClearSortingTrackingNumber() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearSortingTrackingNumber()
	})
}

// SetSortingPort sets the "sorting_port" field.
func (u *OrderUpsertBulk) SetSortingPort(v int32) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetSortingPort(v)
	})
}

// AddSortingPort adds v to the "sorting_port" field.
func (u *OrderUpsertBulk) AddSortingPort(v int32) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.AddSortingPort(v)
	})
}

// UpdateSortingPort sets the "sorting_port" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateSortingPort() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateSortingPort()
	})
}

// ClearSortingPort clears the value of the "sorting_port" field.
func (u *OrderUpsertBulk) ClearSortingPort() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearSortingPort()
	})
}

// SetSortingLength sets the "sorting_length" field.
func (u *OrderUpsertBulk) SetSortingLength(v int) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetSortingLength(v)
	})
}

// AddSortingLength adds v to the "sorting_length" field.
func (u *OrderUpsertBulk) AddSortingLength(v int) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.AddSortingLength(v)
	})
}

// UpdateSortingLength sets the "sorting_length" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateSortingLength() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateSortingLength()
	})
}

// ClearSortingLength clears the value of the "sorting_length" field.
func (u *OrderUpsertBulk) ClearSortingLength() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearSortingLength()
	})
}

// SetSortingWidth sets the "sorting_width" field.
func (u *OrderUpsertBulk) SetSortingWidth(v int) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetSortingWidth(v)
	})
}

// AddSortingWidth adds v to the "sorting_width" field.
func (u *OrderUpsertBulk) AddSortingWidth(v int) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.AddSortingWidth(v)
	})
}

// UpdateSortingWidth sets the "sorting_width" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateSortingWidth() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateSortingWidth()
	})
}

// ClearSortingWidth clears the value of the "sorting_width" field.
func (u *OrderUpsertBulk) ClearSortingWidth() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearSortingWidth()
	})
}

// SetSortingHeight sets the "sorting_height" field.
func (u *OrderUpsertBulk) SetSortingHeight(v int) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetSortingHeight(v)
	})
}

// AddSortingHeight adds v to the "sorting_height" field.
func (u *OrderUpsertBulk) AddSortingHeight(v int) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.AddSortingHeight(v)
	})
}

// UpdateSortingHeight sets the "sorting_height" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateSortingHeight() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateSortingHeight()
	})
}

// ClearSortingHeight clears the value of the "sorting_height" field.
func (u *OrderUpsertBulk) ClearSortingHeight() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearSortingHeight()
	})
}

// SetSortingWeight sets the "sorting_weight" field.
func (u *OrderUpsertBulk) SetSortingWeight(v int) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetSortingWeight(v)
	})
}

// AddSortingWeight adds v to the "sorting_weight" field.
func (u *OrderUpsertBulk) AddSortingWeight(v int) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.AddSortingWeight(v)
	})
}

// UpdateSortingWeight sets the "sorting_weight" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateSortingWeight() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateSortingWeight()
	})
}

// ClearSortingWeight clears the value of the "sorting_weight" field.
func (u *OrderUpsertBulk) ClearSortingWeight() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearSortingWeight()
	})
}

// SetEstimatedWeight sets the "estimated_weight" field.
func (u *OrderUpsertBulk) SetEstimatedWeight(v int) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetEstimatedWeight(v)
	})
}

// AddEstimatedWeight adds v to the "estimated_weight" field.
func (u *OrderUpsertBulk) AddEstimatedWeight(v int) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.AddEstimatedWeight(v)
	})
}

// UpdateEstimatedWeight sets the "estimated_weight" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateEstimatedWeight() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateEstimatedWeight()
	})
}

// ClearEstimatedWeight clears the value of the "estimated_weight" field.
func (u *OrderUpsertBulk) ClearEstimatedWeight() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearEstimatedWeight()
	})
}

// SetCheckoutActualWeight sets the "checkout_actual_weight" field.
func (u *OrderUpsertBulk) SetCheckoutActualWeight(v int) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetCheckoutActualWeight(v)
	})
}

// AddCheckoutActualWeight adds v to the "checkout_actual_weight" field.
func (u *OrderUpsertBulk) AddCheckoutActualWeight(v int) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.AddCheckoutActualWeight(v)
	})
}

// UpdateCheckoutActualWeight sets the "checkout_actual_weight" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateCheckoutActualWeight() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateCheckoutActualWeight()
	})
}

// ClearCheckoutActualWeight clears the value of the "checkout_actual_weight" field.
func (u *OrderUpsertBulk) ClearCheckoutActualWeight() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearCheckoutActualWeight()
	})
}

// SetVolumeWeight sets the "volume_weight" field.
func (u *OrderUpsertBulk) SetVolumeWeight(v int) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetVolumeWeight(v)
	})
}

// AddVolumeWeight adds v to the "volume_weight" field.
func (u *OrderUpsertBulk) AddVolumeWeight(v int) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.AddVolumeWeight(v)
	})
}

// UpdateVolumeWeight sets the "volume_weight" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateVolumeWeight() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateVolumeWeight()
	})
}

// ClearVolumeWeight clears the value of the "volume_weight" field.
func (u *OrderUpsertBulk) ClearVolumeWeight() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearVolumeWeight()
	})
}

// SetCourierWeight sets the "courier_weight" field.
func (u *OrderUpsertBulk) SetCourierWeight(v int) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetCourierWeight(v)
	})
}

// AddCourierWeight adds v to the "courier_weight" field.
func (u *OrderUpsertBulk) AddCourierWeight(v int) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.AddCourierWeight(v)
	})
}

// UpdateCourierWeight sets the "courier_weight" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateCourierWeight() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateCourierWeight()
	})
}

// ClearCourierWeight clears the value of the "courier_weight" field.
func (u *OrderUpsertBulk) ClearCourierWeight() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearCourierWeight()
	})
}

// SetDeclaredValueInUsd sets the "declared_value_in_usd" field.
func (u *OrderUpsertBulk) SetDeclaredValueInUsd(v float64) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetDeclaredValueInUsd(v)
	})
}

// AddDeclaredValueInUsd adds v to the "declared_value_in_usd" field.
func (u *OrderUpsertBulk) AddDeclaredValueInUsd(v float64) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.AddDeclaredValueInUsd(v)
	})
}

// UpdateDeclaredValueInUsd sets the "declared_value_in_usd" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateDeclaredValueInUsd() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateDeclaredValueInUsd()
	})
}

// ClearDeclaredValueInUsd clears the value of the "declared_value_in_usd" field.
func (u *OrderUpsertBulk) ClearDeclaredValueInUsd() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearDeclaredValueInUsd()
	})
}

// SetDeclaredValueInEur sets the "declared_value_in_eur" field.
func (u *OrderUpsertBulk) SetDeclaredValueInEur(v float64) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetDeclaredValueInEur(v)
	})
}

// AddDeclaredValueInEur adds v to the "declared_value_in_eur" field.
func (u *OrderUpsertBulk) AddDeclaredValueInEur(v float64) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.AddDeclaredValueInEur(v)
	})
}

// UpdateDeclaredValueInEur sets the "declared_value_in_eur" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateDeclaredValueInEur() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateDeclaredValueInEur()
	})
}

// ClearDeclaredValueInEur clears the value of the "declared_value_in_eur" field.
func (u *OrderUpsertBulk) ClearDeclaredValueInEur() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearDeclaredValueInEur()
	})
}

// SetTotalItemsPrice sets the "total_items_price" field.
func (u *OrderUpsertBulk) SetTotalItemsPrice(v float64) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetTotalItemsPrice(v)
	})
}

// AddTotalItemsPrice adds v to the "total_items_price" field.
func (u *OrderUpsertBulk) AddTotalItemsPrice(v float64) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.AddTotalItemsPrice(v)
	})
}

// UpdateTotalItemsPrice sets the "total_items_price" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateTotalItemsPrice() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateTotalItemsPrice()
	})
}

// ClearTotalItemsPrice clears the value of the "total_items_price" field.
func (u *OrderUpsertBulk) ClearTotalItemsPrice() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearTotalItemsPrice()
	})
}

// SetCurrency sets the "currency" field.
func (u *OrderUpsertBulk) SetCurrency(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetCurrency(v)
	})
}

// UpdateCurrency sets the "currency" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateCurrency() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateCurrency()
	})
}

// ClearCurrency clears the value of the "currency" field.
func (u *OrderUpsertBulk) ClearCurrency() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.ClearCurrency()
	})
}

// SetDeliveryCost sets the "delivery_cost" field.
func (u *OrderUpsertBulk) SetDeliveryCost(v float64) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetDeliveryCost(v)
	})
}

// AddDeliveryCost adds v to the "delivery_cost" field.
func (u *OrderUpsertBulk) AddDeliveryCost(v float64) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.AddDeliveryCost(v)
	})
}

// UpdateDeliveryCost sets the "delivery_cost" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateDeliveryCost() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateDeliveryCost()
	})
}

// SetMiscFee sets the "misc_fee" field.
func (u *OrderUpsertBulk) SetMiscFee(v float64) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetMiscFee(v)
	})
}

// AddMiscFee adds v to the "misc_fee" field.
func (u *OrderUpsertBulk) AddMiscFee(v float64) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.AddMiscFee(v)
	})
}

// UpdateMiscFee sets the "misc_fee" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateMiscFee() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateMiscFee()
	})
}

// SetFuelFee sets the "fuel_fee" field.
func (u *OrderUpsertBulk) SetFuelFee(v float64) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetFuelFee(v)
	})
}

// AddFuelFee adds v to the "fuel_fee" field.
func (u *OrderUpsertBulk) AddFuelFee(v float64) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.AddFuelFee(v)
	})
}

// UpdateFuelFee sets the "fuel_fee" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateFuelFee() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateFuelFee()
	})
}

// SetRegistrationFee sets the "registration_fee" field.
func (u *OrderUpsertBulk) SetRegistrationFee(v float64) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetRegistrationFee(v)
	})
}

// AddRegistrationFee adds v to the "registration_fee" field.
func (u *OrderUpsertBulk) AddRegistrationFee(v float64) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.AddRegistrationFee(v)
	})
}

// UpdateRegistrationFee sets the "registration_fee" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateRegistrationFee() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateRegistrationFee()
	})
}

// SetProcessingFee sets the "processing_fee" field.
func (u *OrderUpsertBulk) SetProcessingFee(v float64) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetProcessingFee(v)
	})
}

// AddProcessingFee adds v to the "processing_fee" field.
func (u *OrderUpsertBulk) AddProcessingFee(v float64) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.AddProcessingFee(v)
	})
}

// UpdateProcessingFee sets the "processing_fee" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateProcessingFee() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateProcessingFee()
	})
}

// SetPackageFee sets the "package_fee" field.
func (u *OrderUpsertBulk) SetPackageFee(v float64) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetPackageFee(v)
	})
}

// AddPackageFee adds v to the "package_fee" field.
func (u *OrderUpsertBulk) AddPackageFee(v float64) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.AddPackageFee(v)
	})
}

// UpdatePackageFee sets the "package_fee" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdatePackageFee() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdatePackageFee()
	})
}

// SetHandlingFee sets the "handling_fee" field.
func (u *OrderUpsertBulk) SetHandlingFee(v float64) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetHandlingFee(v)
	})
}

// AddHandlingFee adds v to the "handling_fee" field.
func (u *OrderUpsertBulk) AddHandlingFee(v float64) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.AddHandlingFee(v)
	})
}

// UpdateHandlingFee sets the "handling_fee" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateHandlingFee() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateHandlingFee()
	})
}

// SetVat sets the "vat" field.
func (u *OrderUpsertBulk) SetVat(v float64) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetVat(v)
	})
}

// AddVat adds v to the "vat" field.
func (u *OrderUpsertBulk) AddVat(v float64) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.AddVat(v)
	})
}

// UpdateVat sets the "vat" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateVat() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateVat()
	})
}

// SetEstimatedCost sets the "estimated_cost" field.
func (u *OrderUpsertBulk) SetEstimatedCost(v float64) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetEstimatedCost(v)
	})
}

// AddEstimatedCost adds v to the "estimated_cost" field.
func (u *OrderUpsertBulk) AddEstimatedCost(v float64) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.AddEstimatedCost(v)
	})
}

// UpdateEstimatedCost sets the "estimated_cost" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateEstimatedCost() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateEstimatedCost()
	})
}

// SetEstimatedCurrency sets the "estimated_currency" field.
func (u *OrderUpsertBulk) SetEstimatedCurrency(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetEstimatedCurrency(v)
	})
}

// UpdateEstimatedCurrency sets the "estimated_currency" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateEstimatedCurrency() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateEstimatedCurrency()
	})
}

// SetReceivablesAmount sets the "receivables_amount" field.
func (u *OrderUpsertBulk) SetReceivablesAmount(v float64) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetReceivablesAmount(v)
	})
}

// AddReceivablesAmount adds v to the "receivables_amount" field.
func (u *OrderUpsertBulk) AddReceivablesAmount(v float64) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.AddReceivablesAmount(v)
	})
}

// UpdateReceivablesAmount sets the "receivables_amount" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateReceivablesAmount() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateReceivablesAmount()
	})
}

// SetReceivablesCurrency sets the "receivables_currency" field.
func (u *OrderUpsertBulk) SetReceivablesCurrency(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetReceivablesCurrency(v)
	})
}

// UpdateReceivablesCurrency sets the "receivables_currency" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateReceivablesCurrency() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateReceivablesCurrency()
	})
}

// SetNotAcceptPlatformUpdate sets the "not_accept_platform_update" field.
func (u *OrderUpsertBulk) SetNotAcceptPlatformUpdate(v bool) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetNotAcceptPlatformUpdate(v)
	})
}

// UpdateNotAcceptPlatformUpdate sets the "not_accept_platform_update" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateNotAcceptPlatformUpdate() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateNotAcceptPlatformUpdate()
	})
}

// SetNotAcceptPlatformUpdateItem sets the "not_accept_platform_update_item" field.
func (u *OrderUpsertBulk) SetNotAcceptPlatformUpdateItem(v bool) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetNotAcceptPlatformUpdateItem(v)
	})
}

// UpdateNotAcceptPlatformUpdateItem sets the "not_accept_platform_update_item" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateNotAcceptPlatformUpdateItem() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateNotAcceptPlatformUpdateItem()
	})
}

// SetJdPushedStatus sets the "jd_pushed_status" field.
func (u *OrderUpsertBulk) SetJdPushedStatus(v string) *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.SetJdPushedStatus(v)
	})
}

// UpdateJdPushedStatus sets the "jd_pushed_status" field to the value that was provided on create.
func (u *OrderUpsertBulk) UpdateJdPushedStatus() *OrderUpsertBulk {
	return u.Update(func(s *OrderUpsert) {
		s.UpdateJdPushedStatus()
	})
}

// Exec executes the query.
func (u *OrderUpsertBulk) Exec(ctx context.Context) error {
	for i, b := range u.create.builders {
		if len(b.conflict) != 0 {
			return fmt.Errorf("gen: OnConflict was set for builder %d. Set it on the OrderCreateBulk instead", i)
		}
	}
	if len(u.create.conflict) == 0 {
		return errors.New("gen: missing options for OrderCreateBulk.OnConflict")
	}
	return u.create.Exec(ctx)
}

// ExecX is like Exec, but panics if an error occurs.
func (u *OrderUpsertBulk) ExecX(ctx context.Context) {
	if err := u.create.Exec(ctx); err != nil {
		panic(err)
	}
}
