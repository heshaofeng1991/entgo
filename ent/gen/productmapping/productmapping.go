// Code generated by ent, DO NOT EDIT.

package productmapping

import (
	"time"
)

const (
	// Label holds the string label denoting the productmapping type in the database.
	Label = "product_mapping"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldPlatformProductID holds the string denoting the platform_product_id field in the database.
	FieldPlatformProductID = "platform_product_id"
	// FieldProductID holds the string denoting the product_id field in the database.
	FieldProductID = "product_id"
	// FieldQty holds the string denoting the qty field in the database.
	FieldQty = "qty"
	// FieldCreatedBy holds the string denoting the created_by field in the database.
	FieldCreatedBy = "created_by"
	// EdgePlatformProducts holds the string denoting the platform_products edge name in mutations.
	EdgePlatformProducts = "platform_products"
	// EdgeProducts holds the string denoting the products edge name in mutations.
	EdgeProducts = "products"
	// Table holds the table name of the productmapping in the database.
	Table = "product_mappings"
	// PlatformProductsTable is the table that holds the platform_products relation/edge.
	PlatformProductsTable = "product_mappings"
	// PlatformProductsInverseTable is the table name for the PlatformProduct entity.
	// It exists in this package in order to avoid circular dependency with the "platformproduct" package.
	PlatformProductsInverseTable = "platform_products"
	// PlatformProductsColumn is the table column denoting the platform_products relation/edge.
	PlatformProductsColumn = "platform_product_id"
	// ProductsTable is the table that holds the products relation/edge.
	ProductsTable = "product_mappings"
	// ProductsInverseTable is the table name for the Product entity.
	// It exists in this package in order to avoid circular dependency with the "product" package.
	ProductsInverseTable = "products"
	// ProductsColumn is the table column denoting the products relation/edge.
	ProductsColumn = "product_id"
)

// Columns holds all SQL columns for productmapping fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldPlatformProductID,
	FieldProductID,
	FieldQty,
	FieldCreatedBy,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultPlatformProductID holds the default value on creation for the "platform_product_id" field.
	DefaultPlatformProductID int64
	// DefaultProductID holds the default value on creation for the "product_id" field.
	DefaultProductID int64
)
