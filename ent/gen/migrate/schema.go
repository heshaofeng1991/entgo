// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AnnouncementsColumns holds the columns for the "announcements" table.
	AnnouncementsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "title", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "content", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "text"}},
		{Name: "status", Type: field.TypeInt, Default: 1, SchemaType: map[string]string{"mysql": "tinyint"}},
		{Name: "index", Type: field.TypeInt, Default: 0, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "expiration", Type: field.TypeTime},
		{Name: "effective_time", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeInt64, Nullable: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
	}
	// AnnouncementsTable holds the schema information for the "announcements" table.
	AnnouncementsTable = &schema.Table{
		Name:       "announcements",
		Columns:    AnnouncementsColumns,
		PrimaryKey: []*schema.Column{AnnouncementsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "announcements_users_announcements",
				Columns:    []*schema.Column{AnnouncementsColumns[10]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AttributesColumns holds the columns for the "attributes" table.
	AttributesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"mysql": "int unsigned"}},
		{Name: "type", Type: field.TypeInt8, Default: 1, SchemaType: map[string]string{"mysql": "tinyint(4)"}},
		{Name: "value", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(32)"}},
		{Name: "description", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "status", Type: field.TypeInt8, Default: 1, SchemaType: map[string]string{"mysql": "tinyint(4)"}},
		{Name: "created_at", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "updated_at", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
	}
	// AttributesTable holds the schema information for the "attributes" table.
	AttributesTable = &schema.Table{
		Name:       "attributes",
		Columns:    AttributesColumns,
		PrimaryKey: []*schema.Column{AttributesColumns[0]},
	}
	// ChannelsColumns holds the columns for the "channels" table.
	ChannelsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "warehouse_id", Type: field.TypeInt64, Default: 0, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "courier_platform", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(32)"}},
		{Name: "name", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "code", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "type", Type: field.TypeInt8, SchemaType: map[string]string{"mysql": "tinyint(4)"}},
		{Name: "quotation_currency", Type: field.TypeString, Default: "RMB", SchemaType: map[string]string{"mysql": "char(3)"}},
		{Name: "volume_factor", Type: field.TypeInt32, Default: 0, SchemaType: map[string]string{"mysql": "int(11)"}},
		{Name: "en_name", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "display_name", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "has_tracking_number", Type: field.TypeInt8, Default: 1, SchemaType: map[string]string{"mysql": "tinyint(4)"}},
		{Name: "min_normal_days", Type: field.TypeInt32, Default: 0, SchemaType: map[string]string{"mysql": "int(11)"}},
		{Name: "max_normal_days", Type: field.TypeInt32, Default: 0, SchemaType: map[string]string{"mysql": "int(11)"}},
		{Name: "max_weight", Type: field.TypeInt, Default: 0, SchemaType: map[string]string{"mysql": "int"}},
		{Name: "max_length", Type: field.TypeInt, Default: 0, SchemaType: map[string]string{"mysql": "int"}},
		{Name: "min_length", Type: field.TypeInt, Default: 0, SchemaType: map[string]string{"mysql": "int"}},
		{Name: "max_three_side_sum", Type: field.TypeInt, Default: 0, SchemaType: map[string]string{"mysql": "int"}},
		{Name: "description", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(512)"}},
		{Name: "sorting_port", Type: field.TypeInt32, Default: 0, SchemaType: map[string]string{"mysql": "int(11)"}},
		{Name: "prepay_tariff", Type: field.TypeBool, Default: false},
		{Name: "status", Type: field.TypeInt8, Default: 0, SchemaType: map[string]string{"mysql": "tinyint(4)"}},
		{Name: "test", Type: field.TypeBool, Default: false},
		{Name: "options", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "json"}},
		{Name: "exclude_attributes", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "json"}},
		{Name: "battery", Type: field.TypeInt8, SchemaType: map[string]string{"mysql": "tinyint(1)"}},
		{Name: "virtual", Type: field.TypeInt8, Default: 1, SchemaType: map[string]string{"mysql": "tinyint(1)"}},
		{Name: "channel_type", Type: field.TypeInt8, Default: 1, SchemaType: map[string]string{"mysql": "tinyint(4)"}},
		{Name: "deliver_duty", Type: field.TypeString, Default: "ddu", SchemaType: map[string]string{"mysql": "varchar(20)"}},
		{Name: "special", Type: field.TypeInt8, Default: 0, SchemaType: map[string]string{"mysql": "tinyint(1)"}},
	}
	// ChannelsTable holds the schema information for the "channels" table.
	ChannelsTable = &schema.Table{
		Name:       "channels",
		Columns:    ChannelsColumns,
		PrimaryKey: []*schema.Column{ChannelsColumns[0]},
	}
	// ChannelCostsColumns holds the columns for the "channel_costs" table.
	ChannelCostsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "channel_cost_batch_id", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "int(11)"}},
		{Name: "mode", Type: field.TypeInt8, Default: 1, SchemaType: map[string]string{"mysql": "tinyint(4)"}},
		{Name: "country_code", Type: field.TypeString, SchemaType: map[string]string{"mysql": "char(2)"}},
		{Name: "zone", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "start_weight", Type: field.TypeInt, SchemaType: map[string]string{"mysql": "int(11)"}},
		{Name: "end_weight", Type: field.TypeInt, SchemaType: map[string]string{"mysql": "int(11)"}},
		{Name: "first_weight", Type: field.TypeInt, Default: 0, SchemaType: map[string]string{"mysql": "int(11)"}},
		{Name: "first_weight_fee", Type: field.TypeFloat64, Default: 0, SchemaType: map[string]string{"mysql": "decimal(10,2)"}},
		{Name: "unit_weight", Type: field.TypeInt, SchemaType: map[string]string{"mysql": "int(11)"}},
		{Name: "unit_weight_fee", Type: field.TypeFloat64, Nullable: true, Default: 0, SchemaType: map[string]string{"mysql": "decimal(15,5)"}},
		{Name: "fuel_fee", Type: field.TypeFloat64, Default: 0, SchemaType: map[string]string{"mysql": "decimal(10,2)"}},
		{Name: "processing_fee", Type: field.TypeFloat64, Default: 0, SchemaType: map[string]string{"mysql": "decimal(10,2)"}},
		{Name: "registration_fee", Type: field.TypeFloat64, Default: 0, SchemaType: map[string]string{"mysql": "decimal(10,2)"}},
		{Name: "misc_fee", Type: field.TypeFloat64, Default: 0, SchemaType: map[string]string{"mysql": "decimal(10,2)"}},
		{Name: "min_normal_days", Type: field.TypeInt, Default: 0, SchemaType: map[string]string{"mysql": "int(11)"}},
		{Name: "max_normal_days", Type: field.TypeInt, Default: 0, SchemaType: map[string]string{"mysql": "int(11)"}},
		{Name: "status", Type: field.TypeInt8, Default: 1, SchemaType: map[string]string{"mysql": "tinyint(4)"}},
		{Name: "average_days", Type: field.TypeInt, Default: 0, SchemaType: map[string]string{"mysql": "int(11)"}},
		{Name: "channel_id", Type: field.TypeInt64, Nullable: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
	}
	// ChannelCostsTable holds the schema information for the "channel_costs" table.
	ChannelCostsTable = &schema.Table{
		Name:       "channel_costs",
		Columns:    ChannelCostsColumns,
		PrimaryKey: []*schema.Column{ChannelCostsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "channel_costs_channels_channel_costs",
				Columns:    []*schema.Column{ChannelCostsColumns[22]},
				RefColumns: []*schema.Column{ChannelsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ChannelCostBatchesColumns holds the columns for the "channel_cost_batches" table.
	ChannelCostBatchesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "channel_id", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "bigint(20)"}},
		{Name: "effective_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "expiry_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "status", Type: field.TypeBool, Default: true},
	}
	// ChannelCostBatchesTable holds the schema information for the "channel_cost_batches" table.
	ChannelCostBatchesTable = &schema.Table{
		Name:       "channel_cost_batches",
		Columns:    ChannelCostBatchesColumns,
		PrimaryKey: []*schema.Column{ChannelCostBatchesColumns[0]},
	}
	// ChannelOptionsColumns holds the columns for the "channel_options" table.
	ChannelOptionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"mysql": "int unsigned"}},
		{Name: "order_id", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "channel_id", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "country_code", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "created_at", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "updated_at", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
	}
	// ChannelOptionsTable holds the schema information for the "channel_options" table.
	ChannelOptionsTable = &schema.Table{
		Name:       "channel_options",
		Columns:    ChannelOptionsColumns,
		PrimaryKey: []*schema.Column{ChannelOptionsColumns[0]},
	}
	// ChannelRecommendsColumns holds the columns for the "channel_recommends" table.
	ChannelRecommendsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "country_code", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "channel_id", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "int(10)unsigned"}},
		{Name: "is_recommended", Type: field.TypeInt8, Default: 0, SchemaType: map[string]string{"mysql": "tinyint(4)"}},
		{Name: "status", Type: field.TypeInt8, Default: 1, SchemaType: map[string]string{"mysql": "tinyint(4)"}},
		{Name: "value", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(32)"}},
	}
	// ChannelRecommendsTable holds the schema information for the "channel_recommends" table.
	ChannelRecommendsTable = &schema.Table{
		Name:       "channel_recommends",
		Columns:    ChannelRecommendsColumns,
		PrimaryKey: []*schema.Column{ChannelRecommendsColumns[0]},
	}
	// ChannelVolumeFactorsColumns holds the columns for the "channel_volume_factors" table.
	ChannelVolumeFactorsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "country_code", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "channel_id", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "int(10)unsigned"}},
		{Name: "volume_factor", Type: field.TypeInt, Default: 0, SchemaType: map[string]string{"mysql": "int"}},
		{Name: "status", Type: field.TypeInt8, Default: 1, SchemaType: map[string]string{"mysql": "tinyint(4)"}},
	}
	// ChannelVolumeFactorsTable holds the schema information for the "channel_volume_factors" table.
	ChannelVolumeFactorsTable = &schema.Table{
		Name:       "channel_volume_factors",
		Columns:    ChannelVolumeFactorsColumns,
		PrimaryKey: []*schema.Column{ChannelVolumeFactorsColumns[0]},
	}
	// CountriesColumns holds the columns for the "countries" table.
	CountriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "code", Type: field.TypeString, SchemaType: map[string]string{"mysql": "char(2)"}},
		{Name: "cn_name", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "en_name", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(255)"}},
	}
	// CountriesTable holds the schema information for the "countries" table.
	CountriesTable = &schema.Table{
		Name:       "countries",
		Columns:    CountriesColumns,
		PrimaryKey: []*schema.Column{CountriesColumns[0]},
	}
	// CountryZonesColumns holds the columns for the "country_zones" table.
	CountryZonesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "channel_id", Type: field.TypeInt64, Default: 0, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "country_code", Type: field.TypeString, SchemaType: map[string]string{"mysql": "char(2)"}},
		{Name: "zip_code", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(32)"}},
		{Name: "start_zip_code", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(32)"}},
		{Name: "end_zip_code", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(32)"}},
		{Name: "zone", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(64)"}},
	}
	// CountryZonesTable holds the schema information for the "country_zones" table.
	CountryZonesTable = &schema.Table{
		Name:       "country_zones",
		Columns:    CountryZonesColumns,
		PrimaryKey: []*schema.Column{CountryZonesColumns[0]},
	}
	// CourierOrdersColumns holds the columns for the "courier_orders" table.
	CourierOrdersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "order_id", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "int unsigned"}},
		{Name: "order_number", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "courier_platform", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(32)"}},
		{Name: "shipping_method_code", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "shipping_method_name", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "tracking_url", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(512)"}},
		{Name: "tracking_number", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "waybill_number", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "courier_order_number", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "shipping_label_url", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(512)"}},
		{Name: "total_items_price", Type: field.TypeFloat64, Default: 0, SchemaType: map[string]string{"mysql": "decimal(15,3)"}},
		{Name: "currency", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "char(3)"}},
		{Name: "package_count", Type: field.TypeInt, Default: 1, SchemaType: map[string]string{"mysql": "int"}},
		{Name: "weight", Type: field.TypeInt, Default: 0, SchemaType: map[string]string{"mysql": "float(9,0)"}},
		{Name: "receiver_address", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "json"}},
		{Name: "sender_address", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "json"}},
		{Name: "items", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "json"}},
		{Name: "request_data", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "json"}},
		{Name: "response_data", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "json"}},
		{Name: "result_code", Type: field.TypeString, Nullable: true, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "message", Type: field.TypeString, Nullable: true, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "en_message", Type: field.TypeString, Nullable: true, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "status", Type: field.TypeString, Default: "N", SchemaType: map[string]string{"mysql": "varchar(2)"}},
	}
	// CourierOrdersTable holds the schema information for the "courier_orders" table.
	CourierOrdersTable = &schema.Table{
		Name:       "courier_orders",
		Columns:    CourierOrdersColumns,
		PrimaryKey: []*schema.Column{CourierOrdersColumns[0]},
	}
	// CustomerConfigsColumns holds the columns for the "customer_configs" table.
	CustomerConfigsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "channel_id", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "int(10)unsigned"}},
		{Name: "exclude_country_code", Type: field.TypeString, SchemaType: map[string]string{"mysql": "json"}},
		{Name: "status", Type: field.TypeInt8, Default: 1, SchemaType: map[string]string{"mysql": "tinyint(4)"}},
		{Name: "customer_config_tenant", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
	}
	// CustomerConfigsTable holds the schema information for the "customer_configs" table.
	CustomerConfigsTable = &schema.Table{
		Name:       "customer_configs",
		Columns:    CustomerConfigsColumns,
		PrimaryKey: []*schema.Column{CustomerConfigsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "customer_configs_tenants_tenant",
				Columns:    []*schema.Column{CustomerConfigsColumns[7]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// InboundsColumns holds the columns for the "inbounds" table.
	InboundsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "customer_order_id", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "customer_code", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "tracking_number", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "warehouse_id", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647, SchemaType: map[string]string{"mysql": "text"}},
		{Name: "estimated_arrival", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "ship_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "status", Type: field.TypeInt8, Default: 1, SchemaType: map[string]string{"mysql": "tinyint(4)"}},
		{Name: "type", Type: field.TypeInt8, Default: 0, SchemaType: map[string]string{"mysql": "tinyint(4)"}},
		{Name: "is_pickup", Type: field.TypeInt8, Default: 0, SchemaType: map[string]string{"mysql": "tinyint(1)"}},
		{Name: "shipping_mark_url", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "varchar(512)"}},
		{Name: "pickup_order_id", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "carrier_name", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "inbound_order_number", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "inbound_tenant", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
	}
	// InboundsTable holds the schema information for the "inbounds" table.
	InboundsTable = &schema.Table{
		Name:       "inbounds",
		Columns:    InboundsColumns,
		PrimaryKey: []*schema.Column{InboundsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "inbounds_tenants_tenant",
				Columns:    []*schema.Column{InboundsColumns[18]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// InboundItemsColumns holds the columns for the "inbound_items" table.
	InboundItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "product_id", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "product_name", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "sku", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "barcode", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "qty", Type: field.TypeInt, SchemaType: map[string]string{"mysql": "int(11)"}},
		{Name: "status", Type: field.TypeInt8, Default: 1, SchemaType: map[string]string{"mysql": "tinyint(4)"}},
		{Name: "customer_code", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "inbound_id", Type: field.TypeInt64, Nullable: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "inbound_item_tenant", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
	}
	// InboundItemsTable holds the schema information for the "inbound_items" table.
	InboundItemsTable = &schema.Table{
		Name:       "inbound_items",
		Columns:    InboundItemsColumns,
		PrimaryKey: []*schema.Column{InboundItemsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "inbound_items_inbounds_inbound_items",
				Columns:    []*schema.Column{InboundItemsColumns[11]},
				RefColumns: []*schema.Column{InboundsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "inbound_items_tenants_tenant",
				Columns:    []*schema.Column{InboundItemsColumns[12]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// InventoriesColumns holds the columns for the "inventories" table.
	InventoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "warehouse_id", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "int unsigned"}},
		{Name: "storage_qty", Type: field.TypeInt32, Default: 0, SchemaType: map[string]string{"mysql": "int"}},
		{Name: "available_qty", Type: field.TypeInt32, Default: 0, SchemaType: map[string]string{"mysql": "int"}},
		{Name: "prepare_ship_qty", Type: field.TypeInt32, Default: 0, SchemaType: map[string]string{"mysql": "int"}},
		{Name: "prepare_shelve_qty", Type: field.TypeInt32, Default: 0, SchemaType: map[string]string{"mysql": "int"}},
		{Name: "quicktron_storage_qty", Type: field.TypeInt32, Default: 0, SchemaType: map[string]string{"mysql": "int"}},
		{Name: "quicktron_available_qty", Type: field.TypeInt32, Default: 0, SchemaType: map[string]string{"mysql": "int"}},
		{Name: "quicktron_prepare_outbound_qty", Type: field.TypeInt32, Default: 0, SchemaType: map[string]string{"mysql": "int"}},
		{Name: "quicktron_prepare_shelve_qty", Type: field.TypeInt32, Default: 0, SchemaType: map[string]string{"mysql": "int"}},
		{Name: "normal_storage_qty", Type: field.TypeInt32, Default: 0, SchemaType: map[string]string{"mysql": "int"}},
		{Name: "normal_available_qty", Type: field.TypeInt32, Default: 0, SchemaType: map[string]string{"mysql": "int"}},
		{Name: "normal_prepare_outbound_qty", Type: field.TypeInt32, Default: 0, SchemaType: map[string]string{"mysql": "int"}},
		{Name: "normal_prepare_shelve_qty", Type: field.TypeInt32, Default: 0, SchemaType: map[string]string{"mysql": "int"}},
		{Name: "status", Type: field.TypeInt8, Default: 1, SchemaType: map[string]string{"mysql": "tinyint"}},
		{Name: "inventory_tenant", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "product_id", Type: field.TypeInt64, Nullable: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
	}
	// InventoriesTable holds the schema information for the "inventories" table.
	InventoriesTable = &schema.Table{
		Name:       "inventories",
		Columns:    InventoriesColumns,
		PrimaryKey: []*schema.Column{InventoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "inventories_tenants_tenant",
				Columns:    []*schema.Column{InventoriesColumns[18]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "inventories_products_inventories",
				Columns:    []*schema.Column{InventoriesColumns[19]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OrdersColumns holds the columns for the "orders" table.
	OrdersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "order_number", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "mode", Type: field.TypeInt8, Default: 1, SchemaType: map[string]string{"mysql": "tinyint(1)"}},
		{Name: "type", Type: field.TypeInt8, Default: 1, SchemaType: map[string]string{"mysql": "tinyint(1)"}},
		{Name: "offline", Type: field.TypeBool, Default: false},
		{Name: "customer_code", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "prepay_tariff", Type: field.TypeBool, Default: false},
		{Name: "ioss_number", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "ioss_country_code", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "char(2)"}},
		{Name: "ioss_number_type", Type: field.TypeInt8, Default: 0, SchemaType: map[string]string{"mysql": "tinyint(4)"}},
		{Name: "uk_vat_number", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "inbound_order_number", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "status", Type: field.TypeInt8, Default: 1, SchemaType: map[string]string{"mysql": "tinyint unsigned"}},
		{Name: "sqs_status", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "hold_status", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "payment_status", Type: field.TypeInt8, Nullable: true, Default: 0, SchemaType: map[string]string{"mysql": "tinyint(3)"}},
		{Name: "cancel_request", Type: field.TypeInt8, Nullable: true, Default: 0, SchemaType: map[string]string{"mysql": "tinyint(1)"}},
		{Name: "platform", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(32)"}},
		{Name: "platform_order_id", Type: field.TypeString, Nullable: true, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "platform_order_no", Type: field.TypeString, Nullable: true, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "platform_order_status_url", Type: field.TypeString, Nullable: true, Default: "", SchemaType: map[string]string{"mysql": "varchar(1024)"}},
		{Name: "platform_status", Type: field.TypeString, Nullable: true, Default: "", SchemaType: map[string]string{"mysql": "varchar(32)"}},
		{Name: "paid_status", Type: field.TypeString, Nullable: true, Default: "", SchemaType: map[string]string{"mysql": "varchar(32)"}},
		{Name: "fulfillment_pushed", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "fulfillment_status", Type: field.TypeString, Nullable: true, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "platform_created_at", Type: field.TypeTime, Nullable: true},
		{Name: "location_id", Type: field.TypeString, Nullable: true, Default: "", SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "tags", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "json"}},
		{Name: "note", Type: field.TypeString, Nullable: true, Default: "", SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "cancel_reason", Type: field.TypeString, Nullable: true, Default: "", SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "cancelled_at", Type: field.TypeTime, Nullable: true},
		{Name: "closed_at", Type: field.TypeTime, Nullable: true},
		{Name: "contact_email", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "contact_phone", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(32)"}},
		{Name: "shipping_name", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "shipping_first_name", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "shipping_last_name", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "shipping_company", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "shipping_country", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "shipping_country_code", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(2)"}},
		{Name: "shipping_province", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "shipping_province_code", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(20)"}},
		{Name: "shipping_city", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "shipping_address1", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(1024)"}},
		{Name: "shipping_address2", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(1024)"}},
		{Name: "shipping_zip_code", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(32)"}},
		{Name: "shipping_phone", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "shipping_certificate_type", Type: field.TypeString, Nullable: true, Default: "", SchemaType: map[string]string{"mysql": "varchar(16)"}},
		{Name: "shipping_certificate_code", Type: field.TypeString, Nullable: true, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "shipping_credentials_period", Type: field.TypeString, Nullable: true, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "remark", Type: field.TypeString, Nullable: true, Default: "", SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "prefer_shipped_type", Type: field.TypeInt8, Nullable: true, Default: 0, SchemaType: map[string]string{"mysql": "tinyint unsigned"}},
		{Name: "prefer_channel_id", Type: field.TypeInt64, Nullable: true, Default: 0, SchemaType: map[string]string{"mysql": "int unsigned"}},
		{Name: "channel_options", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "json"}},
		{Name: "channel_cost_id", Type: field.TypeInt64, Nullable: true, Default: 0, SchemaType: map[string]string{"mysql": "int unsigned"}},
		{Name: "ship_type", Type: field.TypeInt8, Nullable: true, Default: 0, SchemaType: map[string]string{"mysql": "tinyint(3) unsigned"}},
		{Name: "tracking_company", Type: field.TypeString, Nullable: true, Default: "", SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "tracking_number", Type: field.TypeString, Nullable: true, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "tracking_url", Type: field.TypeString, Nullable: true, Default: "", SchemaType: map[string]string{"mysql": "varchar(512)"}},
		{Name: "waybill_number", Type: field.TypeString, Nullable: true, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "courier_order_number", Type: field.TypeString, Nullable: true, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "nss_courier_order_number", Type: field.TypeString, Nullable: true, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "nss_tracking_number", Type: field.TypeString, Nullable: true, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "nss_tracking_url", Type: field.TypeString, Nullable: true, Default: "", SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "shipping_label_url", Type: field.TypeString, Nullable: true, Default: "", SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "shipping_label_path", Type: field.TypeString, Nullable: true, Default: "", SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "label_data_path", Type: field.TypeString, Nullable: true, Default: "", SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "package_id", Type: field.TypeString, Nullable: true, Default: "", SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "ship_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "request_shipping_at", Type: field.TypeTime, Nullable: true},
		{Name: "unshelf_requested_time", Type: field.TypeTime, Nullable: true},
		{Name: "container_code", Type: field.TypeString, Nullable: true, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "basket_number", Type: field.TypeString, Nullable: true, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "print_times", Type: field.TypeInt, Nullable: true, Default: 0, SchemaType: map[string]string{"mysql": "tinyint(3) unsigned"}},
		{Name: "sorting_tracking_number", Type: field.TypeString, Nullable: true, Default: "", SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "sorting_port", Type: field.TypeInt32, Nullable: true, Default: 0, SchemaType: map[string]string{"mysql": "int unsigned"}},
		{Name: "sorting_length", Type: field.TypeInt, Nullable: true, Default: 0, SchemaType: map[string]string{"mysql": "int unsigned"}},
		{Name: "sorting_width", Type: field.TypeInt, Nullable: true, Default: 0, SchemaType: map[string]string{"mysql": "int unsigned"}},
		{Name: "sorting_height", Type: field.TypeInt, Nullable: true, Default: 0, SchemaType: map[string]string{"mysql": "int unsigned"}},
		{Name: "sorting_weight", Type: field.TypeInt, Nullable: true, Default: 0, SchemaType: map[string]string{"mysql": "int unsigned"}},
		{Name: "estimated_weight", Type: field.TypeInt, Nullable: true, Default: 0, SchemaType: map[string]string{"mysql": "int unsigned"}},
		{Name: "checkout_actual_weight", Type: field.TypeInt, Nullable: true, Default: 0, SchemaType: map[string]string{"mysql": "int unsigned"}},
		{Name: "volume_weight", Type: field.TypeInt, Nullable: true, Default: 0, SchemaType: map[string]string{"mysql": "int unsigned"}},
		{Name: "courier_weight", Type: field.TypeInt, Nullable: true, Default: 0, SchemaType: map[string]string{"mysql": "int unsigned"}},
		{Name: "declared_value_in_usd", Type: field.TypeFloat64, Nullable: true, Default: 0, SchemaType: map[string]string{"mysql": "decimal(15,3)"}},
		{Name: "declared_value_in_eur", Type: field.TypeFloat64, Nullable: true, Default: 0, SchemaType: map[string]string{"mysql": "decimal(15,3)"}},
		{Name: "total_items_price", Type: field.TypeFloat64, Nullable: true, Default: 0, SchemaType: map[string]string{"mysql": "decimal(15,3)"}},
		{Name: "currency", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "char(3)"}},
		{Name: "delivery_cost", Type: field.TypeFloat64, Default: 0, SchemaType: map[string]string{"mysql": "decimal(15,3)"}},
		{Name: "misc_fee", Type: field.TypeFloat64, Default: 0, SchemaType: map[string]string{"mysql": "decimal(15,3)"}},
		{Name: "fuel_fee", Type: field.TypeFloat64, Default: 0, SchemaType: map[string]string{"mysql": "decimal(15,3)"}},
		{Name: "registration_fee", Type: field.TypeFloat64, Default: 0, SchemaType: map[string]string{"mysql": "decimal(15,3)"}},
		{Name: "processing_fee", Type: field.TypeFloat64, Default: 0, SchemaType: map[string]string{"mysql": "decimal(15,3)"}},
		{Name: "package_fee", Type: field.TypeFloat64, Default: 0, SchemaType: map[string]string{"mysql": "decimal(15,3)"}},
		{Name: "handling_fee", Type: field.TypeFloat64, Default: 0, SchemaType: map[string]string{"mysql": "decimal(15,3)"}},
		{Name: "vat", Type: field.TypeFloat64, Default: 0, SchemaType: map[string]string{"mysql": "decimal(15,3)"}},
		{Name: "estimated_cost", Type: field.TypeFloat64, Default: 0, SchemaType: map[string]string{"mysql": "decimal(15,2)"}},
		{Name: "estimated_currency", Type: field.TypeString, Default: "USD", SchemaType: map[string]string{"mysql": "char(3)"}},
		{Name: "receivables_amount", Type: field.TypeFloat64, Default: 0, SchemaType: map[string]string{"mysql": "decimal(15,2)"}},
		{Name: "receivables_currency", Type: field.TypeString, Default: "USD", SchemaType: map[string]string{"mysql": "char(3)"}},
		{Name: "not_accept_platform_update", Type: field.TypeBool, Default: false},
		{Name: "not_accept_platform_update_item", Type: field.TypeBool, Default: false},
		{Name: "jd_pushed_status", Type: field.TypeString, Default: "000000", SchemaType: map[string]string{"mysql": "char(50)"}},
		{Name: "channel_id", Type: field.TypeInt64, Nullable: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "order_tenant", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "store_id", Type: field.TypeInt64, Nullable: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "warehouse_id", Type: field.TypeInt64, Nullable: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
	}
	// OrdersTable holds the schema information for the "orders" table.
	OrdersTable = &schema.Table{
		Name:       "orders",
		Columns:    OrdersColumns,
		PrimaryKey: []*schema.Column{OrdersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "orders_channels_orders",
				Columns:    []*schema.Column{OrdersColumns[106]},
				RefColumns: []*schema.Column{ChannelsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "orders_tenants_tenant",
				Columns:    []*schema.Column{OrdersColumns[107]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "orders_stores_orders",
				Columns:    []*schema.Column{OrdersColumns[108]},
				RefColumns: []*schema.Column{StoresColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "orders_warehouses_orders",
				Columns:    []*schema.Column{OrdersColumns[109]},
				RefColumns: []*schema.Column{WarehousesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OrderHoldReasonsColumns holds the columns for the "order_hold_reasons" table.
	OrderHoldReasonsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "product_id", Type: field.TypeInt64, Nullable: true, SchemaType: map[string]string{"mysql": "int unsigned"}},
		{Name: "type", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "code", Type: field.TypeInt32, SchemaType: map[string]string{"mysql": "int unsigned"}},
		{Name: "reason", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "en_reason", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "order_id", Type: field.TypeInt64, Nullable: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
	}
	// OrderHoldReasonsTable holds the schema information for the "order_hold_reasons" table.
	OrderHoldReasonsTable = &schema.Table{
		Name:       "order_hold_reasons",
		Columns:    OrderHoldReasonsColumns,
		PrimaryKey: []*schema.Column{OrderHoldReasonsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_hold_reasons_orders_order_hold_reasons",
				Columns:    []*schema.Column{OrderHoldReasonsColumns[7]},
				RefColumns: []*schema.Column{OrdersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OrderItemsColumns holds the columns for the "order_items" table.
	OrderItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "product_id", Type: field.TypeInt64, Nullable: true, Default: 0, SchemaType: map[string]string{"mysql": "int unsigned"}},
		{Name: "platform_product_id", Type: field.TypeInt64, Nullable: true, Default: 0, SchemaType: map[string]string{"mysql": "int unsigned"}},
		{Name: "barcode", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(32)"}},
		{Name: "fulfillment_service", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "ext_order_item_id", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "ext_product_id", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "is_custom_item", Type: field.TypeBool, Default: false},
		{Name: "name", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(512)"}},
		{Name: "declared_cn_name", Type: field.TypeString, Nullable: true, Default: "", SchemaType: map[string]string{"mysql": "varchar(256)"}},
		{Name: "hs_code", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(16)"}},
		{Name: "material", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "purpose", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "images", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "json"}},
		{Name: "attributes", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "json"}},
		{Name: "grams", Type: field.TypeInt, Default: 0, SchemaType: map[string]string{"mysql": "decimal(9,0)"}},
		{Name: "length", Type: field.TypeInt, Default: 0, SchemaType: map[string]string{"mysql": "decimal(9,0)"}},
		{Name: "width", Type: field.TypeInt, Default: 0, SchemaType: map[string]string{"mysql": "decimal(9,0)"}},
		{Name: "height", Type: field.TypeInt, Default: 0, SchemaType: map[string]string{"mysql": "decimal(9,0)"}},
		{Name: "qty", Type: field.TypeInt, SchemaType: map[string]string{"mysql": "int"}},
		{Name: "unit_price", Type: field.TypeFloat64, Default: 0, SchemaType: map[string]string{"mysql": "decimal(15,3)"}},
		{Name: "declared_value_in_usd", Type: field.TypeFloat64, Default: 0, SchemaType: map[string]string{"mysql": "decimal(15,3)"}},
		{Name: "declared_value_in_eur", Type: field.TypeFloat64, Default: 0, SchemaType: map[string]string{"mysql": "decimal(15,3)"}},
		{Name: "currency", Type: field.TypeString, Default: "USD", SchemaType: map[string]string{"mysql": "char(3)"}},
		{Name: "fulfill_qty", Type: field.TypeInt, Default: 0, SchemaType: map[string]string{"mysql": "int"}},
		{Name: "requires_shipping", Type: field.TypeBool, Default: true},
		{Name: "gift_card", Type: field.TypeBool, Default: false},
		{Name: "taxable", Type: field.TypeBool, Default: false},
		{Name: "status", Type: field.TypeInt8, Default: 1, SchemaType: map[string]string{"mysql": "tinyint"}},
		{Name: "sku", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "varchar(256)"}},
		{Name: "listing_sku", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "varchar(256)"}},
		{Name: "declared_en_name", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "varchar(256)"}},
		{Name: "product_name", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "varchar(256)"}},
		{Name: "customer_code", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "order_id", Type: field.TypeInt64, Nullable: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "order_item_tenant", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
	}
	// OrderItemsTable holds the schema information for the "order_items" table.
	OrderItemsTable = &schema.Table{
		Name:       "order_items",
		Columns:    OrderItemsColumns,
		PrimaryKey: []*schema.Column{OrderItemsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_items_orders_order_items",
				Columns:    []*schema.Column{OrderItemsColumns[37]},
				RefColumns: []*schema.Column{OrdersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_items_tenants_tenant",
				Columns:    []*schema.Column{OrderItemsColumns[38]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// OrderTaxationsColumns holds the columns for the "order_taxations" table.
	OrderTaxationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "type", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(8)"}},
		{Name: "country_code", Type: field.TypeString, Nullable: true, Default: "", SchemaType: map[string]string{"mysql": "varchar(2)"}},
		{Name: "number", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(32)"}},
		{Name: "order_id", Type: field.TypeInt64, Nullable: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
	}
	// OrderTaxationsTable holds the schema information for the "order_taxations" table.
	OrderTaxationsTable = &schema.Table{
		Name:       "order_taxations",
		Columns:    OrderTaxationsColumns,
		PrimaryKey: []*schema.Column{OrderTaxationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_taxations_orders_order_taxations",
				Columns:    []*schema.Column{OrderTaxationsColumns[7]},
				RefColumns: []*schema.Column{OrdersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PickupOrdersColumns holds the columns for the "pickup_orders" table.
	PickupOrdersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "requested_pickup_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "status", Type: field.TypeInt8, Default: 0, SchemaType: map[string]string{"mysql": "tinyint"}},
		{Name: "sender_address_info", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "json"}},
	}
	// PickupOrdersTable holds the schema information for the "pickup_orders" table.
	PickupOrdersTable = &schema.Table{
		Name:       "pickup_orders",
		Columns:    PickupOrdersColumns,
		PrimaryKey: []*schema.Column{PickupOrdersColumns[0]},
	}
	// PickupOrderItemsColumns holds the columns for the "pickup_order_items" table.
	PickupOrderItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "pickup_order_id", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "product_id", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "product_name", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "sku", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "barcode", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "qty", Type: field.TypeInt32, SchemaType: map[string]string{"mysql": "int(11)"}},
		{Name: "customer_code", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(64)"}},
	}
	// PickupOrderItemsTable holds the schema information for the "pickup_order_items" table.
	PickupOrderItemsTable = &schema.Table{
		Name:       "pickup_order_items",
		Columns:    PickupOrderItemsColumns,
		PrimaryKey: []*schema.Column{PickupOrderItemsColumns[0]},
	}
	// PlatformProductsColumns holds the columns for the "platform_products" table.
	PlatformProductsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "listing_id", Type: field.TypeString, SchemaType: map[string]string{"mysql": "char(256)"}},
		{Name: "collection_id", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "char(256)"}},
		{Name: "listing_sku", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "char(256)"}},
		{Name: "barcode", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "char(255)"}},
		{Name: "name", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "char(512)"}},
		{Name: "images", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "json"}},
		{Name: "vendor", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "char(128)"}},
		{Name: "selling_price", Type: field.TypeFloat64, Default: 0, SchemaType: map[string]string{"mysql": "decimal(15,3)"}},
		{Name: "currency", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "char(3)"}},
		{Name: "grams", Type: field.TypeInt, Default: 0, SchemaType: map[string]string{"mysql": "decimal(9,0)"}},
		{Name: "platform_status", Type: field.TypeInt8, Default: 1, SchemaType: map[string]string{"mysql": "tinyint"}},
		{Name: "platform_product_tenant", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "store_id", Type: field.TypeInt64, Nullable: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
	}
	// PlatformProductsTable holds the schema information for the "platform_products" table.
	PlatformProductsTable = &schema.Table{
		Name:       "platform_products",
		Columns:    PlatformProductsColumns,
		PrimaryKey: []*schema.Column{PlatformProductsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "platform_products_tenants_tenant",
				Columns:    []*schema.Column{PlatformProductsColumns[15]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "platform_products_stores_platform_products",
				Columns:    []*schema.Column{PlatformProductsColumns[16]},
				RefColumns: []*schema.Column{StoresColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProductsColumns holds the columns for the "products" table.
	ProductsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "name", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(512)"}},
		{Name: "sku", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(256)"}},
		{Name: "barcode", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "customer_code", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "declared_name", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "varchar(256)"}},
		{Name: "declared_cn_name", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "varchar(256)"}},
		{Name: "declared_value_in_usd", Type: field.TypeFloat64, Default: 0, SchemaType: map[string]string{"mysql": "decimal(15,3)"}},
		{Name: "declared_value_in_eur", Type: field.TypeFloat64, Default: 0, SchemaType: map[string]string{"mysql": "decimal(15,3)"}},
		{Name: "currency", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "char(3)"}},
		{Name: "hs_code", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(16)"}},
		{Name: "material", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "purpose", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "with_barcode", Type: field.TypeInt8, Default: 0, SchemaType: map[string]string{"mysql": "tinyint(1)"}},
		{Name: "barcode_service", Type: field.TypeInt8, Default: 0, SchemaType: map[string]string{"mysql": "tinyint(1)"}},
		{Name: "barcode_template", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "json"}},
		{Name: "images", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "json"}},
		{Name: "attributes", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "json"}},
		{Name: "confirmed_attributes", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "json"}},
		{Name: "grams", Type: field.TypeInt, Default: 0, SchemaType: map[string]string{"mysql": "decimal(9,0)"}},
		{Name: "inbound_grams", Type: field.TypeInt, Default: 0, SchemaType: map[string]string{"mysql": "decimal(9,0)"}},
		{Name: "length", Type: field.TypeInt, Default: 0, SchemaType: map[string]string{"mysql": "decimal(9,0)"}},
		{Name: "width", Type: field.TypeInt, Default: 0, SchemaType: map[string]string{"mysql": "decimal(9,0)"}},
		{Name: "height", Type: field.TypeInt, Default: 0, SchemaType: map[string]string{"mysql": "decimal(9,0)"}},
		{Name: "max_agv_qty", Type: field.TypeInt, Default: 100, SchemaType: map[string]string{"mysql": "int"}},
		{Name: "status", Type: field.TypeInt8, Default: 1, SchemaType: map[string]string{"mysql": "tinyint"}},
		{Name: "created_by", Type: field.TypeInt64, Nullable: true, SchemaType: map[string]string{"mysql": "int unsigned"}},
		{Name: "product_tenant", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
	}
	// ProductsTable holds the schema information for the "products" table.
	ProductsTable = &schema.Table{
		Name:       "products",
		Columns:    ProductsColumns,
		PrimaryKey: []*schema.Column{ProductsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "products_tenants_tenant",
				Columns:    []*schema.Column{ProductsColumns[30]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ProductMappingsColumns holds the columns for the "product_mappings" table.
	ProductMappingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "qty", Type: field.TypeInt, SchemaType: map[string]string{"mysql": "int"}},
		{Name: "created_by", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "int"}},
		{Name: "platform_product_id", Type: field.TypeInt64, Nullable: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "product_id", Type: field.TypeInt64, Nullable: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
	}
	// ProductMappingsTable holds the schema information for the "product_mappings" table.
	ProductMappingsTable = &schema.Table{
		Name:       "product_mappings",
		Columns:    ProductMappingsColumns,
		PrimaryKey: []*schema.Column{ProductMappingsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_mappings_platform_products_product_mappings",
				Columns:    []*schema.Column{ProductMappingsColumns[6]},
				RefColumns: []*schema.Column{PlatformProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "product_mappings_products_product_mappings",
				Columns:    []*schema.Column{ProductMappingsColumns[7]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SequencesColumns holds the columns for the "sequences" table.
	SequencesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "name", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "prefix", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(8)"}},
		{Name: "value", Type: field.TypeInt64, Default: 0, SchemaType: map[string]string{"mysql": "bigint(10) unsigned zerofill"}},
		{Name: "display_value", Type: field.TypeString, Nullable: true, Default: "", SchemaType: map[string]string{"mysql": "varchar(32)"}},
		{Name: "sequence_tenant", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
	}
	// SequencesTable holds the schema information for the "sequences" table.
	SequencesTable = &schema.Table{
		Name:       "sequences",
		Columns:    SequencesColumns,
		PrimaryKey: []*schema.Column{SequencesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sequences_tenants_tenant",
				Columns:    []*schema.Column{SequencesColumns[8]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// StoresColumns holds the columns for the "stores" table.
	StoresColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "store_url", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "platform", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(256)"}},
		{Name: "name", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(256)"}},
		{Name: "code", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "email", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(256)"}},
		{Name: "access_token", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "timezone_offset", Type: field.TypeInt8, Default: 0, SchemaType: map[string]string{"mysql": "tinyint(4)"}},
		{Name: "scope", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "location_id", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "locations", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "json"}},
		{Name: "store_currency", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(10)"}},
		{Name: "initial_status", Type: field.TypeInt8, Default: 0, SchemaType: map[string]string{"mysql": "tinyint(1)"}},
		{Name: "state", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "timestamp", Type: field.TypeInt32, Default: 0, SchemaType: map[string]string{"mysql": "int"}},
		{Name: "nonce", Type: field.TypeString, Default: "0", SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "balance", Type: field.TypeFloat64, Default: 0, SchemaType: map[string]string{"mysql": "decimal(15,2)"}},
		{Name: "currency", Type: field.TypeString, Default: "USD", SchemaType: map[string]string{"mysql": "varchar(12)"}},
		{Name: "handling_fee", Type: field.TypeFloat64, Default: 0.99, SchemaType: map[string]string{"mysql": "decimal(15,2)"}},
		{Name: "shipping_option", Type: field.TypeInt8, Default: 0, SchemaType: map[string]string{"mysql": "tinyint(1)"}},
		{Name: "default_warehouse", Type: field.TypeInt64, Default: 0, SchemaType: map[string]string{"mysql": "int unsigned"}},
		{Name: "prepay_tariff", Type: field.TypeInt8, Default: 0, SchemaType: map[string]string{"mysql": "tinyint(1)"}},
		{Name: "ioss_number", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "ioss_country_code", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "char(2)"}},
		{Name: "uk_vat_number", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "store_code", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "preset_channel_ids", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "json"}},
		{Name: "test_channel_ids", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "json"}},
		{Name: "first_inbound_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "storage_unit_price", Type: field.TypeFloat64, Default: 1.25, SchemaType: map[string]string{"mysql": "decimal(9,3)"}},
		{Name: "integration_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "store_tenant", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
	}
	// StoresTable holds the schema information for the "stores" table.
	StoresTable = &schema.Table{
		Name:       "stores",
		Columns:    StoresColumns,
		PrimaryKey: []*schema.Column{StoresColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "stores_tenants_tenant",
				Columns:    []*schema.Column{StoresColumns[34]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// TaskSchedulesColumns holds the columns for the "task_schedules" table.
	TaskSchedulesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "platform", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(32)"}},
		{Name: "store_id", Type: field.TypeInt64, Nullable: true, Default: 0, SchemaType: map[string]string{"mysql": "int unsigned"}},
		{Name: "func_name", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "description", Type: field.TypeString, Nullable: true, Default: "", SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "locked", Type: field.TypeBool, Default: false},
		{Name: "locked_times", Type: field.TypeInt64, Default: 0, SchemaType: map[string]string{"mysql": "int(4)"}},
		{Name: "remark", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "text"}},
		{Name: "last_access_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "status", Type: field.TypeInt8, Default: 1, SchemaType: map[string]string{"mysql": "tinyint(1)"}},
	}
	// TaskSchedulesTable holds the schema information for the "task_schedules" table.
	TaskSchedulesTable = &schema.Table{
		Name:       "task_schedules",
		Columns:    TaskSchedulesColumns,
		PrimaryKey: []*schema.Column{TaskSchedulesColumns[0]},
	}
	// TenantsColumns holds the columns for the "tenants" table.
	TenantsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "code", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(20)"}},
		{Name: "balance", Type: field.TypeFloat64, Default: 0, SchemaType: map[string]string{"mysql": "decimal(15,2)"}},
		{Name: "currency", Type: field.TypeString, Default: "USD", SchemaType: map[string]string{"mysql": "varchar(12)"}},
		{Name: "handling_fee", Type: field.TypeFloat64, Default: 0.99, SchemaType: map[string]string{"mysql": "decimal(15,2)"}},
		{Name: "shipping_option", Type: field.TypeInt8, Default: 0, SchemaType: map[string]string{"mysql": "tinyint(1)"}},
		{Name: "prepay_tariff", Type: field.TypeInt8, Default: 0, SchemaType: map[string]string{"mysql": "tinyint(1)"}},
		{Name: "ioss_number", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "ioss_country_code", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "char(2)"}},
		{Name: "uk_vat_number", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "default_warehouse", Type: field.TypeInt64, Default: 0, SchemaType: map[string]string{"mysql": "int unsigned"}},
		{Name: "preset_channel_ids", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "json"}},
		{Name: "test_channel_ids", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "json"}},
		{Name: "first_inbound_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "storage_unit_price", Type: field.TypeFloat64, Default: 1.25, SchemaType: map[string]string{"mysql": "decimal(9,3)"}},
		{Name: "cs_user_id", Type: field.TypeInt64, Nullable: true, SchemaType: map[string]string{"mysql": "int unsigned"}},
		{Name: "sales_user_id", Type: field.TypeInt64, Nullable: true, SchemaType: map[string]string{"mysql": "int unsigned"}},
		{Name: "inviter_user_id", Type: field.TypeInt64, Nullable: true, SchemaType: map[string]string{"mysql": "int unsigned"}},
		{Name: "platform", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(64)"}},
	}
	// TenantsTable holds the schema information for the "tenants" table.
	TenantsTable = &schema.Table{
		Name:       "tenants",
		Columns:    TenantsColumns,
		PrimaryKey: []*schema.Column{TenantsColumns[0]},
	}
	// TokensColumns holds the columns for the "tokens" table.
	TokensColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "platform", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(50)"}},
		{Name: "token", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "refresh_token", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "pin", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "trace_id", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "token_type", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(30)"}},
		{Name: "status", Type: field.TypeInt8, Default: 1, SchemaType: map[string]string{"mysql": "tinyint(1)"}},
		{Name: "expired_at", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "refresh_expired_at", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "response_at", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(255)"}},
	}
	// TokensTable holds the schema information for the "tokens" table.
	TokensTable = &schema.Table{
		Name:       "tokens",
		Columns:    TokensColumns,
		PrimaryKey: []*schema.Column{TokensColumns[0]},
	}
	// TrackMappingsColumns holds the columns for the "track_mappings" table.
	TrackMappingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "tracking_number", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "tracking_url", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(512)"}},
		{Name: "ext_tracking_number", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "track_details", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "json"}},
		{Name: "last_updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "courier_platform", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(32)"}},
		{Name: "status", Type: field.TypeInt32, SchemaType: map[string]string{"mysql": "int unsigned"}},
		{Name: "flag", Type: field.TypeInt8, Default: 1, SchemaType: map[string]string{"mysql": "tinyint(1)"}},
		{Name: "order_id", Type: field.TypeInt64, Nullable: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
	}
	// TrackMappingsTable holds the schema information for the "track_mappings" table.
	TrackMappingsTable = &schema.Table{
		Name:       "track_mappings",
		Columns:    TrackMappingsColumns,
		PrimaryKey: []*schema.Column{TrackMappingsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "track_mappings_orders_track_mappings",
				Columns:    []*schema.Column{TrackMappingsColumns[12]},
				RefColumns: []*schema.Column{OrdersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TransactionsColumns holds the columns for the "transactions" table.
	TransactionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "order_id", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "transaction_type", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(32)"}},
		{Name: "transaction_amount", Type: field.TypeFloat64, Default: 0, SchemaType: map[string]string{"mysql": "decimal(15,3)"}},
		{Name: "balance", Type: field.TypeFloat64, Default: 0, SchemaType: map[string]string{"mysql": "decimal(15,3)"}},
		{Name: "remark", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "status", Type: field.TypeInt8, Default: 1, SchemaType: map[string]string{"mysql": "tinyint(4)"}},
		{Name: "created_by", Type: field.TypeInt8, Default: 0, SchemaType: map[string]string{"mysql": "bigint(4)"}},
		{Name: "updated_by", Type: field.TypeInt8, Default: 0, SchemaType: map[string]string{"mysql": "bigint(4)"}},
		{Name: "transaction_tenant", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
	}
	// TransactionsTable holds the schema information for the "transactions" table.
	TransactionsTable = &schema.Table{
		Name:       "transactions",
		Columns:    TransactionsColumns,
		PrimaryKey: []*schema.Column{TransactionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "transactions_tenants_tenant",
				Columns:    []*schema.Column{TransactionsColumns[12]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// TransactionDetailsColumns holds the columns for the "transaction_details" table.
	TransactionDetailsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "order_id", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "transaction_id", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "transaction_type", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(32)"}},
		{Name: "delivery_cost", Type: field.TypeFloat64, Default: 0, SchemaType: map[string]string{"mysql": "decimal(15,3)"}},
		{Name: "misc_fee", Type: field.TypeFloat64, Default: 0, SchemaType: map[string]string{"mysql": "decimal(15,3)"}},
		{Name: "fuel_fee", Type: field.TypeFloat64, Default: 0, SchemaType: map[string]string{"mysql": "decimal(15,3)"}},
		{Name: "registration_fee", Type: field.TypeFloat64, Default: 0, SchemaType: map[string]string{"mysql": "decimal(15,3)"}},
		{Name: "processing_fee", Type: field.TypeFloat64, Default: 0, SchemaType: map[string]string{"mysql": "decimal(15,3)"}},
		{Name: "package_fee", Type: field.TypeFloat64, Default: 0, SchemaType: map[string]string{"mysql": "decimal(15,3)"}},
		{Name: "handling_fee", Type: field.TypeFloat64, Default: 0, SchemaType: map[string]string{"mysql": "decimal(15,3)"}},
		{Name: "vat", Type: field.TypeFloat64, Default: 0, SchemaType: map[string]string{"mysql": "decimal(15,3)"}},
		{Name: "amount", Type: field.TypeFloat64, Default: 0, SchemaType: map[string]string{"mysql": "decimal(15,2)"}},
		{Name: "weight", Type: field.TypeInt, Default: 0, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "transaction_details", Type: field.TypeInt64, Nullable: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
	}
	// TransactionDetailsTable holds the schema information for the "transaction_details" table.
	TransactionDetailsTable = &schema.Table{
		Name:       "transaction_details",
		Columns:    TransactionDetailsColumns,
		PrimaryKey: []*schema.Column{TransactionDetailsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "transaction_details_transactions_details",
				Columns:    []*schema.Column{TransactionDetailsColumns[17]},
				RefColumns: []*schema.Column{TransactionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "name", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "email", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "type", Type: field.TypeString, Default: "customer", SchemaType: map[string]string{"mysql": "varchar(24)"}},
		{Name: "password", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "selected_warehouse_id", Type: field.TypeInt64, Nullable: true, SchemaType: map[string]string{"mysql": "int"}},
		{Name: "avatar", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "code", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(512)"}},
		{Name: "status", Type: field.TypeInt8, Default: 1, SchemaType: map[string]string{"mysql": "tinyint(1)"}},
		{Name: "guide_finished", Type: field.TypeBool, Default: false},
		{Name: "guide_status", Type: field.TypeInt, Default: 0, SchemaType: map[string]string{"mysql": "int"}},
		{Name: "hs_object_id", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(50)"}},
		{Name: "questions", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "text"}},
		{Name: "last_logged_time", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "website", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(512)"}},
		{Name: "platform", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(512)"}},
		{Name: "concerns", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(512)"}},
		{Name: "store_code", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "phone", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "source", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "source_tag", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "user_tenant", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "users_tenants_tenant",
				Columns:    []*schema.Column{UsersColumns[24]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UserReferralsColumns holds the columns for the "user_referrals" table.
	UserReferralsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "user_id", Type: field.TypeInt64, Nullable: true, SchemaType: map[string]string{"mysql": "int unsigned"}},
		{Name: "first_shipment_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "date"}},
		{Name: "total_commission", Type: field.TypeFloat64, Default: 0, SchemaType: map[string]string{"mysql": "decimal(15,2)"}},
		{Name: "invited_by_user_id", Type: field.TypeInt64, Nullable: true, SchemaType: map[string]string{"mysql": "int unsigned"}},
		{Name: "status", Type: field.TypeInt8, Default: 1, SchemaType: map[string]string{"mysql": "tinyint"}},
		{Name: "user_referral_tenant", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
	}
	// UserReferralsTable holds the schema information for the "user_referrals" table.
	UserReferralsTable = &schema.Table{
		Name:       "user_referrals",
		Columns:    UserReferralsColumns,
		PrimaryKey: []*schema.Column{UserReferralsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_referrals_tenants_tenant",
				Columns:    []*schema.Column{UserReferralsColumns[9]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ValueAddedTaxesColumns holds the columns for the "value_added_taxes" table.
	ValueAddedTaxesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "country_code", Type: field.TypeString, Default: "", SchemaType: map[string]string{"mysql": "char(2)"}},
		{Name: "standard_rate", Type: field.TypeFloat64, Default: 0, SchemaType: map[string]string{"mysql": "decimal(5,2)"}},
		{Name: "without_ioss_rate", Type: field.TypeFloat64, Default: 0, SchemaType: map[string]string{"mysql": "decimal(5,2)"}},
		{Name: "exemption_in_usd", Type: field.TypeFloat64, Default: 0, SchemaType: map[string]string{"mysql": "decimal(15,3)"}},
	}
	// ValueAddedTaxesTable holds the schema information for the "value_added_taxes" table.
	ValueAddedTaxesTable = &schema.Table{
		Name:       "value_added_taxes",
		Columns:    ValueAddedTaxesColumns,
		PrimaryKey: []*schema.Column{ValueAddedTaxesColumns[0]},
	}
	// WarehousesColumns holds the columns for the "warehouses" table.
	WarehousesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"mysql": "int(10) unsigned"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "timestamp"}},
		{Name: "code", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(32)"}},
		{Name: "quicktron_code", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(32)"}},
		{Name: "enable_quicktron", Type: field.TypeInt, SchemaType: map[string]string{"mysql": "tinyint(1)"}},
		{Name: "name", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "company", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "first_name", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "last_name", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "address1", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "address2", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "country_code", Type: field.TypeString, SchemaType: map[string]string{"mysql": "char(2)"}},
		{Name: "country_name", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "province", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "city", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(255)"}},
		{Name: "zip_code", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(32)"}},
		{Name: "phone", Type: field.TypeString, SchemaType: map[string]string{"mysql": "varchar(64)"}},
		{Name: "status", Type: field.TypeInt, SchemaType: map[string]string{"mysql": "tinyint(4)"}},
	}
	// WarehousesTable holds the schema information for the "warehouses" table.
	WarehousesTable = &schema.Table{
		Name:       "warehouses",
		Columns:    WarehousesColumns,
		PrimaryKey: []*schema.Column{WarehousesColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AnnouncementsTable,
		AttributesTable,
		ChannelsTable,
		ChannelCostsTable,
		ChannelCostBatchesTable,
		ChannelOptionsTable,
		ChannelRecommendsTable,
		ChannelVolumeFactorsTable,
		CountriesTable,
		CountryZonesTable,
		CourierOrdersTable,
		CustomerConfigsTable,
		InboundsTable,
		InboundItemsTable,
		InventoriesTable,
		OrdersTable,
		OrderHoldReasonsTable,
		OrderItemsTable,
		OrderTaxationsTable,
		PickupOrdersTable,
		PickupOrderItemsTable,
		PlatformProductsTable,
		ProductsTable,
		ProductMappingsTable,
		SequencesTable,
		StoresTable,
		TaskSchedulesTable,
		TenantsTable,
		TokensTable,
		TrackMappingsTable,
		TransactionsTable,
		TransactionDetailsTable,
		UsersTable,
		UserReferralsTable,
		ValueAddedTaxesTable,
		WarehousesTable,
	}
)

func init() {
	AnnouncementsTable.ForeignKeys[0].RefTable = UsersTable
	ChannelCostsTable.ForeignKeys[0].RefTable = ChannelsTable
	CustomerConfigsTable.ForeignKeys[0].RefTable = TenantsTable
	InboundsTable.ForeignKeys[0].RefTable = TenantsTable
	InboundItemsTable.ForeignKeys[0].RefTable = InboundsTable
	InboundItemsTable.ForeignKeys[1].RefTable = TenantsTable
	InventoriesTable.ForeignKeys[0].RefTable = TenantsTable
	InventoriesTable.ForeignKeys[1].RefTable = ProductsTable
	OrdersTable.ForeignKeys[0].RefTable = ChannelsTable
	OrdersTable.ForeignKeys[1].RefTable = TenantsTable
	OrdersTable.ForeignKeys[2].RefTable = StoresTable
	OrdersTable.ForeignKeys[3].RefTable = WarehousesTable
	OrderHoldReasonsTable.ForeignKeys[0].RefTable = OrdersTable
	OrderItemsTable.ForeignKeys[0].RefTable = OrdersTable
	OrderItemsTable.ForeignKeys[1].RefTable = TenantsTable
	OrderTaxationsTable.ForeignKeys[0].RefTable = OrdersTable
	PlatformProductsTable.ForeignKeys[0].RefTable = TenantsTable
	PlatformProductsTable.ForeignKeys[1].RefTable = StoresTable
	ProductsTable.ForeignKeys[0].RefTable = TenantsTable
	ProductMappingsTable.ForeignKeys[0].RefTable = PlatformProductsTable
	ProductMappingsTable.ForeignKeys[1].RefTable = ProductsTable
	SequencesTable.ForeignKeys[0].RefTable = TenantsTable
	StoresTable.ForeignKeys[0].RefTable = TenantsTable
	TrackMappingsTable.ForeignKeys[0].RefTable = OrdersTable
	TransactionsTable.ForeignKeys[0].RefTable = TenantsTable
	TransactionDetailsTable.ForeignKeys[0].RefTable = TransactionsTable
	UsersTable.ForeignKeys[0].RefTable = TenantsTable
	UserReferralsTable.ForeignKeys[0].RefTable = TenantsTable
}
